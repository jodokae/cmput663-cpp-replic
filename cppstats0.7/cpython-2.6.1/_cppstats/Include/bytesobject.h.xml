<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="Include/bytesobject.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytesObject</name></cpp:macro> <cpp:value>PyStringObject</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Type</name></cpp:macro> <cpp:value>PyString_Type</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Check</name></cpp:macro> <cpp:value>PyString_Check</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_CheckExact</name></cpp:macro> <cpp:value>PyString_CheckExact</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_CHECK_INTERNED</name></cpp:macro> <cpp:value>PyString_CHECK_INTERNED</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AS_STRING</name></cpp:macro> <cpp:value>PyString_AS_STRING</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_GET_SIZE</name></cpp:macro> <cpp:value>PyString_GET_SIZE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Py_TPFLAGS_BYTES_SUBCLASS</name></cpp:macro> <cpp:value>Py_TPFLAGS_STRING_SUBCLASS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_FromStringAndSize</name></cpp:macro> <cpp:value>PyString_FromStringAndSize</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_FromString</name></cpp:macro> <cpp:value>PyString_FromString</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_FromFormatV</name></cpp:macro> <cpp:value>PyString_FromFormatV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_FromFormat</name></cpp:macro> <cpp:value>PyString_FromFormat</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Size</name></cpp:macro> <cpp:value>PyString_Size</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsString</name></cpp:macro> <cpp:value>PyString_AsString</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Repr</name></cpp:macro> <cpp:value>PyString_Repr</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Concat</name></cpp:macro> <cpp:value>PyString_Concat</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_ConcatAndDel</name></cpp:macro> <cpp:value>PyString_ConcatAndDel</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_PyBytes_Resize</name></cpp:macro> <cpp:value>_PyString_Resize</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_PyBytes_Eq</name></cpp:macro> <cpp:value>_PyString_Eq</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Format</name></cpp:macro> <cpp:value>PyString_Format</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_PyBytes_FormatLong</name></cpp:macro> <cpp:value>_PyString_FormatLong</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_DecodeEscape</name></cpp:macro> <cpp:value>PyString_DecodeEscape</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_PyBytes_Join</name></cpp:macro> <cpp:value>_PyString_Join</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Decode</name></cpp:macro> <cpp:value>PyString_Decode</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_Encode</name></cpp:macro> <cpp:value>PyString_Encode</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsEncodedObject</name></cpp:macro> <cpp:value>PyString_AsEncodedObject</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsEncodedString</name></cpp:macro> <cpp:value>PyString_AsEncodedString</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsDecodedObject</name></cpp:macro> <cpp:value>PyString_AsDecodedObject</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsDecodedString</name></cpp:macro> <cpp:value>PyString_AsDecodedString</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PyBytes_AsStringAndSize</name></cpp:macro> <cpp:value>PyString_AsStringAndSize</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_PyBytes_InsertThousandsGrouping</name></cpp:macro> <cpp:value>_PyString_InsertThousandsGrouping</cpp:value></cpp:define>
</unit>
