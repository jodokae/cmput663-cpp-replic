<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/_cppstats/Parser/metagrammar.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pgenheaders.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"metagrammar.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"grammar.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pgen.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_0_0</name><index>[<expr>3</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>2</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>3</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>4</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_0_1</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>0</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_0</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>3</expr>, <expr><name>arcs_0_0</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_0_1</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_1_0</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>5</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_1_1</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>6</expr>, <expr>2</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_1_2</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>7</expr>, <expr>3</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_1_3</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>3</expr>, <expr>4</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_1_4</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>0</expr>, <expr>4</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_1</name><index>[<expr>5</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>1</expr>, <expr><name>arcs_1_0</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_1_1</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_1_2</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_1_3</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_1_4</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_2_0</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>8</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_2_1</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>9</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>0</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_2</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>1</expr>, <expr><name>arcs_2_0</name></expr>}</block></expr>,
<expr><block>{<expr>2</expr>, <expr><name>arcs_2_1</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_3_0</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>10</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_3_1</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>10</expr>, <expr>1</expr>}</block></expr>,
<expr><block>{<expr>0</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_3</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>1</expr>, <expr><name>arcs_3_0</name></expr>}</block></expr>,
<expr><block>{<expr>2</expr>, <expr><name>arcs_3_1</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_4_0</name><index>[<expr>2</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>11</expr>, <expr>1</expr>}</block></expr>,
<expr><block>{<expr>13</expr>, <expr>2</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_4_1</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>7</expr>, <expr>3</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_4_2</name><index>[<expr>3</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>14</expr>, <expr>4</expr>}</block></expr>,
<expr><block>{<expr>15</expr>, <expr>4</expr>}</block></expr>,
<expr><block>{<expr>0</expr>, <expr>2</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_4_3</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>12</expr>, <expr>4</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_4_4</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>0</expr>, <expr>4</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_4</name><index>[<expr>5</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>2</expr>, <expr><name>arcs_4_0</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_4_1</name></expr>}</block></expr>,
<expr><block>{<expr>3</expr>, <expr><name>arcs_4_2</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_4_3</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_4_4</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_5_0</name><index>[<expr>3</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>5</expr>, <expr>1</expr>}</block></expr>,
<expr><block>{<expr>16</expr>, <expr>1</expr>}</block></expr>,
<expr><block>{<expr>17</expr>, <expr>2</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_5_1</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>0</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_5_2</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>7</expr>, <expr>3</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>arc</name></type> <name><name>arcs_5_3</name><index>[<expr>1</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>18</expr>, <expr>1</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>state</name></type> <name><name>states_5</name><index>[<expr>4</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>3</expr>, <expr><name>arcs_5_0</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_5_1</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_5_2</name></expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr><name>arcs_5_3</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>dfa</name></type> <name><name>dfas</name><index>[<expr>6</expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr>256</expr>, <expr>"MSTART"</expr>, <expr>0</expr>, <expr>2</expr>, <expr><name>states_0</name></expr>,
<expr>"\070\000\000"</expr>
}</block></expr>,
<expr><block>{
<expr>257</expr>, <expr>"RULE"</expr>, <expr>0</expr>, <expr>5</expr>, <expr><name>states_1</name></expr>,
<expr>"\040\000\000"</expr>
}</block></expr>,
<expr><block>{
<expr>258</expr>, <expr>"RHS"</expr>, <expr>0</expr>, <expr>2</expr>, <expr><name>states_2</name></expr>,
<expr>"\040\010\003"</expr>
}</block></expr>,
<expr><block>{
<expr>259</expr>, <expr>"ALT"</expr>, <expr>0</expr>, <expr>2</expr>, <expr><name>states_3</name></expr>,
<expr>"\040\010\003"</expr>
}</block></expr>,
<expr><block>{
<expr>260</expr>, <expr>"ITEM"</expr>, <expr>0</expr>, <expr>5</expr>, <expr><name>states_4</name></expr>,
<expr>"\040\010\003"</expr>
}</block></expr>,
<expr><block>{
<expr>261</expr>, <expr>"ATOM"</expr>, <expr>0</expr>, <expr>4</expr>, <expr><name>states_5</name></expr>,
<expr>"\040\000\003"</expr>
}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>label</name></type> <name><name>labels</name><index>[<expr>19</expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr>0</expr>, <expr>"EMPTY"</expr>}</block></expr>,
<expr><block>{<expr>256</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>257</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>4</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>0</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>1</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>11</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>258</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>259</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>18</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>260</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>9</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>10</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>261</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>16</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>14</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>3</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>7</expr>, <expr>0</expr>}</block></expr>,
<expr><block>{<expr>8</expr>, <expr>0</expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>grammar</name></type> <name>_PyParser_Grammar</name> <init>= <expr><block>{
<expr>6</expr>,
<expr><name>dfas</name></expr>,
<expr><block>{<expr>19</expr>, <expr><name>labels</name></expr>}</block></expr>,
<expr>256</expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><name>grammar</name> *</type>
<name>meta_grammar</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<return>return <expr>&amp;<name>_PyParser_Grammar</name></expr>;</return>
}</block></function>
<function><type><name>grammar</name> *</type>
<name>Py_meta_grammar</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<return>return <expr><call><name>meta_grammar</name><argument_list>()</argument_list></call></expr>;</return>
}</block></function>
</unit>
