<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/_cppstats/Mac/Modules/icgluemodule.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Python.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pymactoolbox.h"</cpp:file></cpp:include>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>ResObj_Convert</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type></decl></param>, <param><decl><type><name>Handle</name> *</type></decl></param>)</parameter_list>;</function_decl>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;Carbon/Carbon.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyObject</name> *</type><name>ErrorObject</name></decl>;</decl_stmt>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>PyObject_HEAD</name>
<name>ICInstance</name></type> <name>inst</name></decl>;</decl_stmt>
}</block></struct></type> <name>iciobject</name>;</typedef>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>Icitype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICGetSeed__doc__</name><index>[]</index></name> <init>=
<expr>"()-&gt;int; Returns int that changes when configuration does"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICGetSeed</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>seed</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>""</expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICGetSeed</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr>&amp;<name>seed</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"i"</expr></argument>, <argument><expr>(<name>int</name>)<name>seed</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICBegin__doc__</name><index>[]</index></name> <init>=
<expr>"(perm)-&gt;None; Lock config file for read/write"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICBegin</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>perm</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"i"</expr></argument>, <argument><expr>&amp;<name>perm</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICBegin</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr>(<name>ICPerm</name>)<name>perm</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICFindPrefHandle__doc__</name><index>[]</index></name> <init>=
<expr>"(key, handle)-&gt;attrs; Lookup key, store result in handle, return attributes"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICFindPrefHandle</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ICAttr</name></type> <name>attr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Handle</name></type> <name>h</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;O&amp;"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr>&amp;<name>key</name></expr></argument>, <argument><expr><name>ResObj_Convert</name></expr></argument>, <argument><expr>&amp;<name>h</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICFindPrefHandle</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr>&amp;<name>attr</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"i"</expr></argument>, <argument><expr>(<name>int</name>)<name>attr</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICSetPref__doc__</name><index>[]</index></name> <init>=
<expr>"(key, attr, data)-&gt;None; Set preference key to data with attributes"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICSetPref</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>attr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>datalen</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;is#"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr>&amp;<name>key</name></expr></argument>, <argument><expr>&amp;<name>attr</name></expr></argument>,
<argument><expr>&amp;<name>data</name></expr></argument>, <argument><expr>&amp;<name>datalen</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICSetPref</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr>(<name>ICAttr</name>)<name>attr</name></expr></argument>, <argument><expr>(<name>Ptr</name>)<name>data</name></expr></argument>,
<argument><expr>(<name>long</name>)<name>datalen</name></expr></argument>)</argument_list></call>) != 0</expr>)</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICCountPref__doc__</name><index>[]</index></name> <init>=
<expr>"()-&gt;int; Return number of preferences"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICCountPref</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>count</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>""</expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICCountPref</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr>&amp;<name>count</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"i"</expr></argument>, <argument><expr>(<name>int</name>)<name>count</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICGetIndPref__doc__</name><index>[]</index></name> <init>=
<expr>"(num)-&gt;key; Return key of preference with given index"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICGetIndPref</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>key</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"l"</expr></argument>, <argument><expr>&amp;<name>num</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICGetIndPref</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>num</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"O&amp;"</expr></argument>, <argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICDeletePref__doc__</name><index>[]</index></name> <init>=
<expr>"(key)-&gt;None; Delete preference"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICDeletePref</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>key</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICDeletePref</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICEnd__doc__</name><index>[]</index></name> <init>=
<expr>"()-&gt;None; Unlock file after ICBegin call"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICEnd</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>""</expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICEnd</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICEditPreferences__doc__</name><index>[]</index></name> <init>=
<expr>"(key)-&gt;None; Ask user to edit preferences, staring with key"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICEditPreferences</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>key</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICEditPreferences</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICParseURL__doc__</name><index>[]</index></name> <init>=
<expr>"(hint, data, selStart, selEnd, handle)-&gt;selStart, selEnd; Find an URL, return in handle"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICParseURL</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>hint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>datalen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>selStart</name></decl>, <decl><type ref="prev"/><name>selEnd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Handle</name></type> <name>h</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;s#llO&amp;"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr>&amp;<name>data</name></expr></argument>, <argument><expr>&amp;<name>datalen</name></expr></argument>,
<argument><expr>&amp;<name>selStart</name></expr></argument>, <argument><expr>&amp;<name>selEnd</name></expr></argument>, <argument><expr><name>ResObj_Convert</name></expr></argument>, <argument><expr>&amp;<name>h</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICParseURL</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr>(<name>Ptr</name>)<name>data</name></expr></argument>, <argument><expr>(<name>long</name>)<name>datalen</name></expr></argument>,
<argument><expr>&amp;<name>selStart</name></expr></argument>, <argument><expr>&amp;<name>selEnd</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"ii"</expr></argument>, <argument><expr>(<name>int</name>)<name>selStart</name></expr></argument>, <argument><expr>(<name>int</name>)<name>selEnd</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICLaunchURL__doc__</name><index>[]</index></name> <init>=
<expr>"(hint, data, selStart, selEnd)-&gt;None; Find an URL and launch the correct app"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICLaunchURL</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>hint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>datalen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>selStart</name></decl>, <decl><type ref="prev"/><name>selEnd</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;s#ll"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr>&amp;<name>data</name></expr></argument>, <argument><expr>&amp;<name>datalen</name></expr></argument>,
<argument><expr>&amp;<name>selStart</name></expr></argument>, <argument><expr>&amp;<name>selEnd</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICLaunchURL</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr>(<name>Ptr</name>)<name>data</name></expr></argument>, <argument><expr>(<name>long</name>)<name>datalen</name></expr></argument>,
<argument><expr>&amp;<name>selStart</name></expr></argument>, <argument><expr>&amp;<name>selEnd</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"ii"</expr></argument>, <argument><expr>(<name>int</name>)<name>selStart</name></expr></argument>, <argument><expr>(<name>int</name>)<name>selEnd</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICMapFilename__doc__</name><index>[]</index></name> <init>=
<expr>"(filename)-&gt;mapinfo; Get filemap info for given filename"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICMapFilename</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ICMapEntry</name></type> <name>entry</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;"</expr></argument>, <argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICMapFilename</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr>&amp;<name>entry</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"hO&amp;O&amp;O&amp;lO&amp;O&amp;O&amp;O&amp;O&amp;"</expr></argument>, <argument><expr><name><name>entry</name>.<name>version</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>fileType</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>fileCreator</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>postCreator</name></name></expr></argument>,
<argument><expr><name><name>entry</name>.<name>flags</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>extension</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>creatorAppName</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>postAppName</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>MIMEType</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>entryName</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ici_ICMapTypeCreator__doc__</name><index>[]</index></name> <init>=
<expr>"(type, creator, filename)-&gt;mapinfo; Get filemap info for given tp/cr/filename"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_ICMapTypeCreator</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OSType</name></type> <name>type</name></decl>, <decl><type ref="prev"/><name>creator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Str255</name></type> <name>filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ICMapEntry</name></type> <name>entry</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;O&amp;O&amp;"</expr></argument>,
<argument><expr><name>PyMac_GetOSType</name></expr></argument>, <argument><expr>&amp;<name>type</name></expr></argument>,
<argument><expr><name>PyMac_GetOSType</name></expr></argument>, <argument><expr>&amp;<name>creator</name></expr></argument>,
<argument><expr><name>PyMac_GetStr255</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICMapTypeCreator</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr>&amp;<name>entry</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then>
<return>return <expr><call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><call><name>Py_BuildValue</name><argument_list>(<argument><expr>"hO&amp;O&amp;O&amp;lO&amp;O&amp;O&amp;O&amp;O&amp;"</expr></argument>, <argument><expr><name><name>entry</name>.<name>version</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>fileType</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>fileCreator</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildOSType</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>postCreator</name></name></expr></argument>,
<argument><expr><name><name>entry</name>.<name>flags</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>extension</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>creatorAppName</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>postAppName</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>MIMEType</name></name></expr></argument>,
<argument><expr><name>PyMac_BuildStr255</name></expr></argument>, <argument><expr><name><name>entry</name>.<name>entryName</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> struct <name>PyMethodDef</name></type> <name><name>ici_methods</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr>"ICGetSeed"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICGetSeed</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICGetSeed__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICBegin"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICBegin</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICBegin__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICFindPrefHandle"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICFindPrefHandle</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICFindPrefHandle__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICSetPref"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICSetPref</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICSetPref__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICCountPref"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICCountPref</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICCountPref__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICGetIndPref"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICGetIndPref</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICGetIndPref__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICDeletePref"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICDeletePref</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICDeletePref__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICEnd"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICEnd</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICEnd__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICEditPreferences"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICEditPreferences</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICEditPreferences__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICParseURL"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICParseURL</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICParseURL__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICLaunchURL"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICLaunchURL</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICLaunchURL__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICMapFilename"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICMapFilename</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICMapFilename__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"ICMapTypeCreator"</expr>, <expr>(<name>PyCFunction</name>)<name>ici_ICMapTypeCreator</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ici_ICMapTypeCreator__doc__</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>iciobject</name> *</type>
<name>newiciobject</name><parameter_list>(<param><decl><type><name>OSType</name></type> <name>creator</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>iciobject</name> *</type><name>self</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OSStatus</name></type> <name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>self</name> = <call><name>PyObject_NEW</name><argument_list>(<argument><expr><name>iciobject</name></expr></argument>, <argument><expr>&amp;<name>Icitype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>self</name> == <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>err</name>=<call><name>ICStart</name><argument_list>(<argument><expr>&amp;<name><name>self</name>-&gt;<name>inst</name></name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call>) != 0</expr> )</condition><then> <block>{
<expr_stmt><expr>(<name>void</name>)<call><name>PyMac_Error</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PyObject_DEL</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<return>return <expr><name>self</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>ici_dealloc</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr>(<name>void</name>)<call><name>ICStop</name><argument_list>(<argument><expr><name><name>self</name>-&gt;<name>inst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PyObject_DEL</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ici_getattr</name><parameter_list>(<param><decl><type><name>iciobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>char</name> *</type><name>name</name></decl></param>)</parameter_list> <block>{
<return>return <expr><call><name>Py_FindMethod</name><argument_list>(<argument><expr><name>ici_methods</name></expr></argument>, <argument><expr>(<name>PyObject</name> *)<name>self</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>Icitype__doc__</name><index>[]</index></name> <init>=
<expr>"Internet Config instance"</expr></init></decl>
;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>Icitype</name> <init>= <expr><block>{
<expr><call><name>PyObject_HEAD_INIT</name><argument_list>(<argument><expr>&amp;<name>PyType_Type</name></expr></argument>)</argument_list></call>
0</expr>,
<expr>"icglue.ic_instance"</expr>,
<expr><sizeof>sizeof<argument_list>(<argument><expr><name>iciobject</name></expr></argument>)</argument_list></sizeof></expr>,
<expr>0</expr>,
<expr>(<name>destructor</name>)<name>ici_dealloc</name></expr>,
<expr>(<name>printfunc</name>)0</expr>,
<expr>(<name>getattrfunc</name>)<name>ici_getattr</name></expr>,
<expr>(<name>setattrfunc</name>)0</expr>,
<expr>(<name>cmpfunc</name>)0</expr>,
<expr>(<name>reprfunc</name>)0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>(<name>hashfunc</name>)0</expr>,
<expr>(<name>ternaryfunc</name>)0</expr>,
<expr>(<name>reprfunc</name>)0</expr>,
<expr>0L</expr>,<expr>0L</expr>,<expr>0L</expr>,<expr>0L</expr>,
<expr><name>Icitype__doc__</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>ic_ICStart__doc__</name><index>[]</index></name> <init>=
<expr>"(OSType)-&gt;ic_instance; Create an Internet Config instance"</expr></init></decl>
;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>ic_ICStart</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>OSType</name></type> <name>creator</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"O&amp;"</expr></argument>, <argument><expr><name>PyMac_GetOSType</name></expr></argument>, <argument><expr>&amp;<name>creator</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<return>return <expr>(<name>PyObject</name> *)<call><name>newiciobject</name><argument_list>(<argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> struct <name>PyMethodDef</name></type> <name><name>ic_methods</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr>"ICStart"</expr>, <expr>(<name>PyCFunction</name>)<name>ic_ICStart</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>ic_ICStart__doc__</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>, <expr>(<name>PyCFunction</name>)<name>NULL</name></expr>, <expr>0</expr>, <expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>icglue_module_documentation</name><index>[]</index></name> <init>=
<expr>"Implements low-level Internet Config interface"</expr></init></decl>
;</decl_stmt>
<function><type><name>void</name></type>
<name>initicglue</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>PyObject</name> *</type><name>m</name></decl>, *<decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
<if>if <condition>(<expr><call><name>PyErr_WarnPy3k</name><argument_list>(<argument><expr>"In 3.x, icglue is removed."</expr></argument>, <argument><expr>1</expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return;</return></then></if>
<expr_stmt><expr><name>m</name> = <call><name>Py_InitModule4</name><argument_list>(<argument><expr>"icglue"</expr></argument>, <argument><expr><name>ic_methods</name></expr></argument>,
<argument><expr><name>icglue_module_documentation</name></expr></argument>,
<argument><expr>(<name>PyObject</name>*)<name>NULL</name></expr></argument>,<argument><expr><name>PYTHON_API_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> = <call><name>PyModule_GetDict</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ErrorObject</name> = <call><name>PyMac_GetOSErrException</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>ErrorObject</name> == <name>NULL</name> ||
<call><name>PyDict_SetItemString</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr>"error"</expr></argument>, <argument><expr><name>ErrorObject</name></expr></argument>)</argument_list></call> != 0</expr>)</condition><then>
<return>return;</return></then></if>
<if>if <condition>(<expr><call><name>PyErr_Occurred</name><argument_list>()</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><call><name>Py_FatalError</name><argument_list>(<argument><expr>"can't initialize module icglue"</expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>
</unit>
