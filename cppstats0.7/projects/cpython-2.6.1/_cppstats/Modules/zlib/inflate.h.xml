<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="Modules/zlib/inflate.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>NO_GZIP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GUNZIP</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><enum>enum <block>{
<decl><name>HEAD</name></decl>,
<decl><name>FLAGS</name></decl>,
<decl><name>TIME</name></decl>,
<decl><name>OS</name></decl>,
<decl><name>EXLEN</name></decl>,
<decl><name>EXTRA</name></decl>,
<decl><name>NAME</name></decl>,
<decl><name>COMMENT</name></decl>,
<decl><name>HCRC</name></decl>,
<decl><name>DICTID</name></decl>,
<decl><name>DICT</name></decl>,
<decl><name>TYPE</name></decl>,
<decl><name>TYPEDO</name></decl>,
<decl><name>STORED</name></decl>,
<decl><name>COPY</name></decl>,
<decl><name>TABLE</name></decl>,
<decl><name>LENLENS</name></decl>,
<decl><name>CODELENS</name></decl>,
<decl><name>LEN</name></decl>,
<decl><name>LENEXT</name></decl>,
<decl><name>DIST</name></decl>,
<decl><name>DISTEXT</name></decl>,
<decl><name>MATCH</name></decl>,
<decl><name>LIT</name></decl>,
<decl><name>CHECK</name></decl>,
<decl><name>LENGTH</name></decl>,
<decl><name>DONE</name></decl>,
<decl><name>BAD</name></decl>,
<decl><name>MEM</name></decl>,
<decl><name>SYNC</name></decl>
}</block></enum></type> <name>inflate_mode</name>;</typedef>
<struct>struct <name>inflate_state</name> <block>{
<decl_stmt><decl><type><name>inflate_mode</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>wrap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>havedict</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>dmax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>check</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>total</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>gz_headerp</name></type> <name>head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>wbits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>wsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>whave</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>write</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <name>FAR</name> *</type><name>window</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>hold</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>extra</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>code</name> <specifier>const</specifier> <name>FAR</name> *</type><name>lencode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>code</name> <specifier>const</specifier> <name>FAR</name> *</type><name>distcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>lenbits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>distbits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>ncode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>nlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>ndist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>have</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>code</name> <name>FAR</name> *</type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name><name>lens</name><index>[<expr>320</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name><name>work</name><index>[<expr>288</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>code</name></type> <name><name>codes</name><index>[<expr><name>ENOUGH</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>
</unit>
