<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="Modules/sha512module.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Python.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"structmember.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PY_LONG_LONG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TestEndianness</name><parameter_list>(<param><type><name>variable</name></type></param>)</parameter_list></cpp:macro> <cpp:value>{int i=1; variable=PCT_BIG_ENDIAN;if (*((char*)&amp;i)==1) variable=PCT_LITTLE_ENDIAN;}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCT_LITTLE_ENDIAN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCT_BIG_ENDIAN</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>SHA_BYTE</name>;</typedef>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SIZEOF_INT</name> == 4</expr></cpp:if>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>SHA_INT32</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>PY_LONG_LONG</name></type> <name>SHA_INT64</name>;</typedef>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_BLOCKSIZE</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_DIGESTSIZE</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>PyObject_HEAD</name>
<name>SHA_INT64</name></type> <name><name>digest</name><index>[<expr>8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHA_INT32</name></type> <name>count_lo</name></decl>, <name>count_hi</name>;</decl_stmt>
<decl_stmt><decl><type><name>SHA_BYTE</name></type> <name><name>data</name><index>[<expr><name>SHA_BLOCKSIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>Endianness</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>local</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>digestsize</name></decl>;</decl_stmt>
}</block></struct></type> <name>SHAobject</name>;</typedef>
<function><type><specifier>static</specifier> <name>void</name></type> <name>longReverse</name><parameter_list>(<param><decl><type><name>SHA_INT64</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>byteCount</name></decl></param>, <param><decl><type><name>int</name></type> <name>Endianness</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>SHA_INT64</name></type> <name>value</name></decl>;</decl_stmt>
<if>if <condition>( <expr><name>Endianness</name> == <name>PCT_BIG_ENDIAN</name></expr> )</condition><then>
<return>return;</return></then></if>
<expr_stmt><expr><name>byteCount</name> /= <sizeof>sizeof<argument_list>(<argument><expr>*<name>buffer</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<while>while <condition>(<expr><name>byteCount</name>--</expr>)</condition> <block>{
<expr_stmt><expr><name>value</name> = *<name>buffer</name></expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>0</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 56</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>1</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 48</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>2</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 40</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>3</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 32</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>4</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 24</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>5</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 16</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>6</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name> &gt;&gt; 8</expr></argument>)</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr>((<name>unsigned</name> <name>char</name>*)<name>buffer</name>)<index>[<expr>7</expr>]</index> = <call>(<name>unsigned</name> <name>char</name>)<argument_list>(<argument><expr><name>value</name></expr></argument> )</argument_list></call> &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name>buffer</name>++</expr>;</expr_stmt>
}</block></while>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>SHAcopy</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>src</name></decl></param>, <param><decl><type><name>SHAobject</name> *</type><name>dest</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><name><name>dest</name>-&gt;<name>Endianness</name></name> = <name><name>src</name>-&gt;<name>Endianness</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dest</name>-&gt;<name>local</name></name> = <name><name>src</name>-&gt;<name>local</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dest</name>-&gt;<name>digestsize</name></name> = <name><name>src</name>-&gt;<name>digestsize</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dest</name>-&gt;<name>count_lo</name></name> = <name><name>src</name>-&gt;<name>count_lo</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dest</name>-&gt;<name>count_hi</name></name> = <name><name>src</name>-&gt;<name>count_hi</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>dest</name>-&gt;<name>digest</name></name></expr></argument>, <argument><expr><name><name>src</name>-&gt;<name>digest</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>src</name>-&gt;<name>digest</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>dest</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name><name>src</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>src</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROR64</name><parameter_list>(<param><type><name>x</name></type></param>, <param><type><name>y</name></type></param>)</parameter_list></cpp:macro> <cpp:value>( ((((x) &amp; Py_ULL(0xFFFFFFFFFFFFFFFF))&gt;&gt;((unsigned PY_LONG_LONG)(y) &amp; 63)) | ((x)&lt;&lt;((unsigned PY_LONG_LONG)(64-((y) &amp; 63))))) &amp; Py_ULL(0xFFFFFFFFFFFFFFFF))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Ch</name><parameter_list>(<param><type><name>x</name></type></param>,<param><type><name>y</name></type></param>,<param><type><name>z</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(z ^ (x &amp; (y ^ z)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Maj</name><parameter_list>(<param><type><name>x</name></type></param>,<param><type><name>y</name></type></param>,<param><type><name>z</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(((x | y) &amp; z) | (x &amp; y))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name><parameter_list>(<param><type><name>x</name></type></param>, <param><type><name>n</name></type></param>)</parameter_list></cpp:macro> <cpp:value>ROR64((x),(n))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>R</name><parameter_list>(<param><type><name>x</name></type></param>, <param><type><name>n</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(((x) &amp; Py_ULL(0xFFFFFFFFFFFFFFFF)) &gt;&gt; ((unsigned PY_LONG_LONG)n))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma0</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(S(x, 28) ^ S(x, 34) ^ S(x, 39))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sigma1</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(S(x, 14) ^ S(x, 18) ^ S(x, 41))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Gamma0</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(S(x, 1) ^ S(x, 8) ^ R(x, 7))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Gamma1</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(S(x, 19) ^ S(x, 61) ^ R(x, 6))</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha512_transform</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>sha_info</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHA_INT64</name></type> <name><name>S</name><index>[<expr>8</expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>W</name><index>[<expr>80</expr>]</index></name></decl>, <decl><type ref="prev"/><name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>W</name></expr></argument>, <argument><expr><name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>longReverse</name><argument_list>(<argument><expr><name>W</name></expr></argument>, <argument><expr>(<name>int</name>)<sizeof>sizeof<argument_list>(<argument><expr><name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name><name>sha_info</name>-&gt;<name>Endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>i</name> = 16</expr>;</init> <condition><expr><name>i</name> &lt; 80</expr>;</condition> <incr><expr>++<name>i</name></expr></incr>) <block>{
<expr_stmt><expr><name><name>W</name><index>[<expr><name>i</name></expr>]</index></name> = <call><name>Gamma1</name><argument_list>(<argument><expr><name><name>W</name><index>[<expr><name>i</name> - 2</expr>]</index></name></expr></argument>)</argument_list></call> + <name><name>W</name><index>[<expr><name>i</name> - 7</expr>]</index></name> + <call><name>Gamma0</name><argument_list>(<argument><expr><name><name>W</name><index>[<expr><name>i</name> - 15</expr>]</index></name></expr></argument>)</argument_list></call> + <name><name>W</name><index>[<expr><name>i</name> - 16</expr>]</index></name></expr>;</expr_stmt>
}</block></for>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; 8</expr>;</condition> <incr><expr>++<name>i</name></expr></incr>) <block>{
<expr_stmt><expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name> = <name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
}</block></for>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RND</name><parameter_list>(<param><type><name>a</name></type></param>,<param><type><name>b</name></type></param>,<param><type><name>c</name></type></param>,<param><type><name>d</name></type></param>,<param><type><name>e</name></type></param>,<param><type><name>f</name></type></param>,<param><type><name>g</name></type></param>,<param><type><name>h</name></type></param>,<param><type><name>i</name></type></param>,<param><type><name>ki</name></type></param>)</parameter_list></cpp:macro> <cpp:value>t0 = h + Sigma1(e) + Ch(e, f, g) + ki + W[i]; t1 = Sigma0(a) + Maj(a, b, c); d += t0; h = t0 + t1;</cpp:value></cpp:define>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>0</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x428a2f98d728ae22</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>1</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x7137449123ef65cd</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>2</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xb5c0fbcfec4d3b2f</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>3</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xe9b5dba58189dbbc</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>4</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x3956c25bf348b538</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>5</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x59f111f1b605d019</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>6</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x923f82a4af194f9b</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>7</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xab1c5ed5da6d8118</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>8</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xd807aa98a3030242</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>9</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x12835b0145706fbe</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>10</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x243185be4ee4b28c</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>11</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x550c7dc3d5ffb4e2</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>12</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x72be5d74f27b896f</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>13</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x80deb1fe3b1696b1</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>14</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x9bdc06a725c71235</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>15</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xc19bf174cf692694</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>16</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xe49b69c19ef14ad2</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>17</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xefbe4786384f25e3</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>18</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x0fc19dc68b8cd5b5</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>19</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x240ca1cc77ac9c65</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>20</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x2de92c6f592b0275</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>21</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x4a7484aa6ea6e483</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>22</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x5cb0a9dcbd41fbd4</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>23</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x76f988da831153b5</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>24</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x983e5152ee66dfab</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>25</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xa831c66d2db43210</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>26</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xb00327c898fb213f</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>27</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xbf597fc7beef0ee4</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>28</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xc6e00bf33da88fc2</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>29</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xd5a79147930aa725</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>30</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x06ca6351e003826f</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>31</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x142929670a0e6e70</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>32</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x27b70a8546d22ffc</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>33</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x2e1b21385c26c926</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>34</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x4d2c6dfc5ac42aed</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>35</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x53380d139d95b3df</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>36</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x650a73548baf63de</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>37</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x766a0abb3c77b2a8</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>38</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x81c2c92e47edaee6</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>39</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x92722c851482353b</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>40</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xa2bfe8a14cf10364</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>41</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xa81a664bbc423001</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>42</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xc24b8b70d0f89791</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>43</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xc76c51a30654be30</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>44</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xd192e819d6ef5218</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>45</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xd69906245565a910</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>46</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xf40e35855771202a</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>47</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x106aa07032bbd1b8</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>48</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x19a4c116b8d2d0c8</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>49</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x1e376c085141ab53</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>50</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x2748774cdf8eeb99</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>51</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x34b0bcb5e19b48a8</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>52</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x391c0cb3c5c95a63</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>53</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x4ed8aa4ae3418acb</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>54</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x5b9cca4f7763e373</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>55</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x682e6ff3d6b2b8a3</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>56</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x748f82ee5defb2fc</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>57</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x78a5636f43172f60</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>58</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x84c87814a1f0ab72</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>59</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x8cc702081a6439ec</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>60</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x90befffa23631e28</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>61</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xa4506cebde82bde9</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>62</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xbef9a3f7b2c67915</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>63</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xc67178f2e372532b</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>64</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xca273eceea26619c</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>65</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xd186b8c721c0c207</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>66</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xeada7dd6cde0eb1e</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>67</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0xf57d4f7fee6ed178</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>68</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x06f067aa72176fba</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>69</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x0a637dc5a2c898a6</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>70</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x113f9804bef90dae</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>71</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x1b710b35131c471b</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr>72</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x28db77f523047d84</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr>73</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x32caab7b40c72493</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr>74</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x3c9ebe0a15c9bebc</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr>75</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x431d67c49c100d4c</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr>76</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x4cc5d4becb3e42b6</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr>77</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x597f299cfc657e2a</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr>78</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x5fcb6fab3ad6faec</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RND</name><argument_list>(<argument><expr><name><name>S</name><index>[<expr>1</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>2</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>3</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>4</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>5</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>6</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>7</expr>]</index></name></expr></argument>,<argument><expr><name><name>S</name><index>[<expr>0</expr>]</index></name></expr></argument>,<argument><expr>79</expr></argument>,<argument><expr><call><name>Py_ULL</name><argument_list>(<argument><expr>0x6c44198c4a475817</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RND</name></cpp:undef>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; 8</expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr><name>i</name></expr>]</index></name> = <name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr><name>i</name></expr>]</index></name> + <name><name>S</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
}</block></for>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha512_init</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>sha_info</name></decl></param>)</parameter_list> <block>{
<macro><name>TestEndianness</name><argument_list>(<argument>sha_info-&gt;Endianness</argument>)</argument_list></macro>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x6a09e667f3bcc908</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0xbb67ae8584caa73b</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x3c6ef372fe94f82b</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0xa54ff53a5f1d36f1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x510e527fade682d1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x9b05688c2b3e6c1f</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x1f83d9abfb41bd6b</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x5be0cd19137e2179</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_lo</name></name> = 0L</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_hi</name></name> = 0L</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>local</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digestsize</name></name> = 64</expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha384_init</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>sha_info</name></decl></param>)</parameter_list> <block>{
<macro><name>TestEndianness</name><argument_list>(<argument>sha_info-&gt;Endianness</argument>)</argument_list></macro>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0xcbbb9d5dc1059ed8</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x629a292a367cd507</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x9159015a3070dd17</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x152fecd8f70e5939</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x67332667ffc00b31</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x8eb44a8768581511</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0xdb0c2e0d64f98fa7</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> = <call><name>Py_ULL</name><argument_list>(<argument><expr>0x47b5481dbefa4fa4</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_lo</name></name> = 0L</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_hi</name></name> = 0L</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>local</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>digestsize</name></name> = 48</expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha512_update</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>sha_info</name></decl></param>, <param><decl><type><name>SHA_BYTE</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>count</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHA_INT32</name></type> <name>clo</name></decl>;</decl_stmt>
<expr_stmt><expr><name>clo</name> = <name><name>sha_info</name>-&gt;<name>count_lo</name></name> + ((<name>SHA_INT32</name>) <name>count</name> &lt;&lt; 3)</expr>;</expr_stmt>
<if>if <condition>(<expr><name>clo</name> &lt; <name><name>sha_info</name>-&gt;<name>count_lo</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr>++<name><name>sha_info</name>-&gt;<name>count_hi</name></name></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_lo</name></name> = <name>clo</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>count_hi</name></name> += (<name>SHA_INT32</name>) <name>count</name> &gt;&gt; 29</expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>sha_info</name>-&gt;<name>local</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>i</name> = <name>SHA_BLOCKSIZE</name> - <name><name>sha_info</name>-&gt;<name>local</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>i</name> &gt; <name>count</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>i</name> = <name>count</name></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr>((<name>SHA_BYTE</name> *) <name><name>sha_info</name>-&gt;<name>data</name></name>) + <name><name>sha_info</name>-&gt;<name>local</name></name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> -= <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><name>buffer</name> += <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>local</name></name> += <name>i</name></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>sha_info</name>-&gt;<name>local</name></name> == <name>SHA_BLOCKSIZE</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>sha512_transform</name><argument_list>(<argument><expr><name>sha_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<return>return;</return>
}</block></else></if>
}</block></then></if>
<while>while <condition>(<expr><name>count</name> &gt;= <name>SHA_BLOCKSIZE</name></expr>)</condition> <block>{
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>SHA_BLOCKSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>buffer</name> += <name>SHA_BLOCKSIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> -= <name>SHA_BLOCKSIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sha512_transform</name><argument_list>(<argument><expr><name>sha_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></while>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>local</name></name> = <name>count</name></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha512_final</name><parameter_list>(<param><decl><type><name>unsigned</name> <name>char</name></type> <name><name>digest</name><index>[<expr><name>SHA_DIGESTSIZE</name></expr>]</index></name></decl></param>, <param><decl><type><name>SHAobject</name> *</type><name>sha_info</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHA_INT32</name></type> <name>lo_bit_count</name></decl>, <decl><type ref="prev"/><name>hi_bit_count</name></decl>;</decl_stmt>
<expr_stmt><expr><name>lo_bit_count</name> = <name><name>sha_info</name>-&gt;<name>count_lo</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>hi_bit_count</name> = <name><name>sha_info</name>-&gt;<name>count_hi</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> = <call>(<name>int</name>) <argument_list>(<argument><expr>(<name>lo_bit_count</name> &gt;&gt; 3) &amp; 0x7f</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>((<name>SHA_BYTE</name> *) <name><name>sha_info</name>-&gt;<name>data</name></name>)<index>[<expr><name>count</name>++</expr>]</index> = 0x80</expr>;</expr_stmt>
<if>if <condition>(<expr><name>count</name> &gt; <name>SHA_BLOCKSIZE</name> - 16</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr>((<name>SHA_BYTE</name> *) <name><name>sha_info</name>-&gt;<name>data</name></name>) + <name>count</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr><name>SHA_BLOCKSIZE</name> - <name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sha512_transform</name><argument_list>(<argument><expr><name>sha_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr>(<name>SHA_BYTE</name> *) <name><name>sha_info</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>SHA_BLOCKSIZE</name> - 16</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr>((<name>SHA_BYTE</name> *) <name><name>sha_info</name>-&gt;<name>data</name></name>) + <name>count</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr><name>SHA_BLOCKSIZE</name> - 16 - <name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>112</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>113</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>114</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>115</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>116</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>117</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>118</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>119</expr>]</index></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>120</expr>]</index></name> = (<name>hi_bit_count</name> &gt;&gt; 24) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>121</expr>]</index></name> = (<name>hi_bit_count</name> &gt;&gt; 16) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>122</expr>]</index></name> = (<name>hi_bit_count</name> &gt;&gt; 8) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>123</expr>]</index></name> = (<name>hi_bit_count</name> &gt;&gt; 0) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>124</expr>]</index></name> = (<name>lo_bit_count</name> &gt;&gt; 24) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>125</expr>]</index></name> = (<name>lo_bit_count</name> &gt;&gt; 16) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>126</expr>]</index></name> = (<name>lo_bit_count</name> &gt;&gt; 8) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sha_info</name>-&gt;<name>data</name><index>[<expr>127</expr>]</index></name> = (<name>lo_bit_count</name> &gt;&gt; 0) &amp; 0xff</expr>;</expr_stmt>
<expr_stmt><expr><call><name>sha512_transform</name><argument_list>(<argument><expr><name>sha_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>0</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>1</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>2</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>3</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>4</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>5</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>6</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>7</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>0</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>8</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[ <expr>9</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>10</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>11</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>12</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>13</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>14</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>15</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>1</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>16</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>17</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>18</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>19</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>20</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>21</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>22</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>23</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>2</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>24</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>25</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>26</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>27</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>28</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>29</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>30</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>31</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>3</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>32</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>33</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>34</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>35</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>36</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>37</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>38</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>39</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>4</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>40</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>41</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>42</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>43</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>44</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>45</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>46</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>47</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>5</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>48</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>49</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>50</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>51</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>52</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>53</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>54</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>55</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>6</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>56</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 56) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>57</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 48) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>58</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 40) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>59</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 32) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>60</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 24) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>61</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 16) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>62</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> &gt;&gt; 8) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>digest</name><index>[<expr>63</expr>]</index></name> = <call>(<name>unsigned</name> <name>char</name>) <argument_list>(<argument><expr>(<name><name>sha_info</name>-&gt;<name>digest</name><index>[<expr>7</expr>]</index></name> ) &amp; 0xff</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>SHA384type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>SHA512type</name></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>SHAobject</name> *</type>
<name>newSHA384object</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<return>return <expr>(<name>SHAobject</name> *)<call><name>PyObject_New</name><argument_list>(<argument><expr><name>SHAobject</name></expr></argument>, <argument><expr>&amp;<name>SHA384type</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>SHAobject</name> *</type>
<name>newSHA512object</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<return>return <expr>(<name>SHAobject</name> *)<call><name>PyObject_New</name><argument_list>(<argument><expr><name>SHAobject</name></expr></argument>, <argument><expr>&amp;<name>SHA512type</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>SHA512_dealloc</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>ptr</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>PyObject_Del</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA512_copy__doc__</name></expr></argument>, <argument><expr>"Return a copy of the hash object."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_copy</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>unused</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>SHAobject</name> *</type><name>newobj</name></decl>;</decl_stmt>
<if>if <condition>(<expr>((<name>PyObject</name>*)<name>self</name>)-&gt;<name>ob_type</name> == &amp;<name>SHA512type</name></expr>)</condition><then> <block>{
<if>if <condition>( <expr>(<name>newobj</name> = <call><name>newSHA512object</name><argument_list>()</argument_list></call>)==<name>NULL</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
}</block></then> <else>else <block>{
<if>if <condition>( <expr>(<name>newobj</name> = <call><name>newSHA384object</name><argument_list>()</argument_list></call>)==<name>NULL</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
}</block></else></if>
<expr_stmt><expr><call><name>SHAcopy</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>newobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr>(<name>PyObject</name> *)<name>newobj</name></expr>;</return>
}</block></function>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA512_digest__doc__</name></expr></argument>,
<argument><expr>"Return the digest value as a string of binary data."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_digest</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>unused</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>digest</name><index>[<expr><name>SHA_DIGESTSIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHAobject</name></type> <name>temp</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SHAcopy</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr>&amp;<name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sha512_final</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr>&amp;<name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>PyString_FromStringAndSize</name><argument_list>(<argument><expr>(const <name>char</name> *)<name>digest</name></expr></argument>, <argument><expr><name><name>self</name>-&gt;<name>digestsize</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA512_hexdigest__doc__</name></expr></argument>,
<argument><expr>"Return the digest value as a string of hexadecimal digits."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_hexdigest</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>unused</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>digest</name><index>[<expr><name>SHA_DIGESTSIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHAobject</name></type> <name>temp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PyObject</name> *</type><name>retval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>hex_digest</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SHAcopy</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr>&amp;<name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sha512_final</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr>&amp;<name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>retval</name> = <call><name>PyString_FromStringAndSize</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>self</name>-&gt;<name>digestsize</name></name> * 2</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>retval</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<expr_stmt><expr><name>hex_digest</name> = <call><name>PyString_AsString</name><argument_list>(<argument><expr><name>retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>hex_digest</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>Py_DECREF</name><argument_list>(<argument><expr><name>retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<for>for (<init><expr><name>i</name>=<name>j</name>=0</expr>;</init> <condition><expr><name>i</name>&lt;<name><name>self</name>-&gt;<name>digestsize</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><name>char</name></type> <name>c</name></decl>;</decl_stmt>
<expr_stmt><expr><name>c</name> = (<name><name>digest</name><index>[<expr><name>i</name></expr>]</index></name> &gt;&gt; 4) &amp; 0xf</expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> = (<name>c</name>&gt;9) ? <name>c</name>+'a'-10 : <name>c</name> + '0'</expr>;</expr_stmt>
<expr_stmt><expr><name><name>hex_digest</name><index>[<expr><name>j</name>++</expr>]</index></name> = <name>c</name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> = (<name><name>digest</name><index>[<expr><name>i</name></expr>]</index></name> &amp; 0xf)</expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> = (<name>c</name>&gt;9) ? <name>c</name>+'a'-10 : <name>c</name> + '0'</expr>;</expr_stmt>
<expr_stmt><expr><name><name>hex_digest</name><index>[<expr><name>j</name>++</expr>]</index></name> = <name>c</name></expr>;</expr_stmt>
}</block></for>
<return>return <expr><name>retval</name></expr>;</return>
}</block></function>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA512_update__doc__</name></expr></argument>,
<argument><expr>"Update this hash object's state with the provided string."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_update</name><parameter_list>(<param><decl><type><name>SHAobject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> *</type><name>cp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTuple</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr>"s#:update"</expr></argument>, <argument><expr>&amp;<name>cp</name></expr></argument>, <argument><expr>&amp;<name>len</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>sha512_update</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>cp</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Py_INCREF</name><argument_list>(<argument><expr><name>Py_None</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>Py_None</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyMethodDef</name></type> <name><name>SHA_methods</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr>"copy"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA512_copy</name></expr>, <expr><name>METH_NOARGS</name></expr>, <expr><name>SHA512_copy__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"digest"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA512_digest</name></expr>, <expr><name>METH_NOARGS</name></expr>, <expr><name>SHA512_digest__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"hexdigest"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA512_hexdigest</name></expr>, <expr><name>METH_NOARGS</name></expr>, <expr><name>SHA512_hexdigest__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"update"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA512_update</name></expr>, <expr><name>METH_VARARGS</name></expr>, <expr><name>SHA512_update__doc__</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_get_block_size</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>void</name> *</type><name>closure</name></decl></param>)</parameter_list> <block>{
<return>return <expr><call><name>PyInt_FromLong</name><argument_list>(<argument><expr><name>SHA_BLOCKSIZE</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_get_name</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>void</name> *</type><name>closure</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr>((<name>SHAobject</name> *)<name>self</name>)-&gt;<name>digestsize</name> == 64</expr>)</condition><then>
<return>return <expr><call><name>PyString_FromStringAndSize</name><argument_list>(<argument><expr>"SHA512"</expr></argument>, <argument><expr>6</expr></argument>)</argument_list></call></expr>;</return></then>
<else>else
<return>return <expr><call><name>PyString_FromStringAndSize</name><argument_list>(<argument><expr>"SHA384"</expr></argument>, <argument><expr>6</expr></argument>)</argument_list></call></expr>;</return></else></if>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyGetSetDef</name></type> <name><name>SHA_getseters</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr>"block_size"</expr>,
<expr>(<name>getter</name>)<name>SHA512_get_block_size</name></expr>, <expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr>"name"</expr>,
<expr>(<name>getter</name>)<name>SHA512_get_name</name></expr>, <expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyMemberDef</name></type> <name><name>SHA_members</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr>"digest_size"</expr>, <expr><name>T_INT</name></expr>, <expr><call><name>offsetof</name><argument_list>(<argument><expr><name>SHAobject</name></expr></argument>, <argument><expr><name>digestsize</name></expr></argument>)</argument_list></call></expr>, <expr><name>READONLY</name></expr>, <expr><name>NULL</name></expr>}</block></expr>,
<expr><block>{<expr>"digestsize"</expr>, <expr><name>T_INT</name></expr>, <expr><call><name>offsetof</name><argument_list>(<argument><expr><name>SHAobject</name></expr></argument>, <argument><expr><name>digestsize</name></expr></argument>)</argument_list></call></expr>, <expr><name>READONLY</name></expr>, <expr><name>NULL</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>SHA384type</name> <init>= <expr><block>{
<expr><call><name>PyVarObject_HEAD_INIT</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call>
"_sha512.sha384"</expr>,
<expr><sizeof>sizeof<argument_list>(<argument><expr><name>SHAobject</name></expr></argument>)</argument_list></sizeof></expr>,
<expr>0</expr>,
<expr><name>SHA512_dealloc</name></expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr><name>Py_TPFLAGS_DEFAULT</name></expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr><name>SHA_methods</name></expr>,
<expr><name>SHA_members</name></expr>,
<expr><name>SHA_getseters</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>PyTypeObject</name></type> <name>SHA512type</name> <init>= <expr><block>{
<expr><call><name>PyVarObject_HEAD_INIT</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call>
"_sha512.sha512"</expr>,
<expr><sizeof>sizeof<argument_list>(<argument><expr><name>SHAobject</name></expr></argument>)</argument_list></sizeof></expr>,
<expr>0</expr>,
<expr><name>SHA512_dealloc</name></expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr><name>Py_TPFLAGS_DEFAULT</name></expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr>0</expr>,
<expr><name>SHA_methods</name></expr>,
<expr><name>SHA_members</name></expr>,
<expr><name>SHA_getseters</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA512_new__doc__</name></expr></argument>,
<argument><expr>"Return a new SHA-512 hash object; optionally initialized with a string."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA512_new</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>kwdict</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> *</type><name><name>kwlist</name><index>[]</index></name> <init>= <expr><block>{<expr>"string"</expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHAobject</name> *</type><name>new</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> *</type><name>cp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTupleAndKeywords</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>kwdict</name></expr></argument>, <argument><expr>"|s#:new"</expr></argument>, <argument><expr><name>kwlist</name></expr></argument>,
<argument><expr>&amp;<name>cp</name></expr></argument>, <argument><expr>&amp;<name>len</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name>new</name> = <call><name>newSHA512object</name><argument_list>()</argument_list></call>) == <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>sha512_init</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>PyErr_Occurred</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>Py_DECREF</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>cp</name></expr>)</condition><then>
<expr_stmt><expr><call><name>sha512_update</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>cp</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<return>return <expr>(<name>PyObject</name> *)<name>new</name></expr>;</return>
}</block></function>
<expr_stmt><expr><call><name>PyDoc_STRVAR</name><argument_list>(<argument><expr><name>SHA384_new__doc__</name></expr></argument>,
<argument><expr>"Return a new SHA-384 hash object; optionally initialized with a string."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<function><type><specifier>static</specifier> <name>PyObject</name> *</type>
<name>SHA384_new</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>kwdict</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> *</type><name><name>kwlist</name><index>[]</index></name> <init>= <expr><block>{<expr>"string"</expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SHAobject</name> *</type><name>new</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> *</type><name>cp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>PyArg_ParseTupleAndKeywords</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>kwdict</name></expr></argument>, <argument><expr>"|s#:new"</expr></argument>, <argument><expr><name>kwlist</name></expr></argument>,
<argument><expr>&amp;<name>cp</name></expr></argument>, <argument><expr>&amp;<name>len</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name>new</name> = <call><name>newSHA384object</name><argument_list>()</argument_list></call>) == <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>sha384_init</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>PyErr_Occurred</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>Py_DECREF</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>cp</name></expr>)</condition><then>
<expr_stmt><expr><call><name>sha512_update</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>cp</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<return>return <expr>(<name>PyObject</name> *)<name>new</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> struct <name>PyMethodDef</name></type> <name><name>SHA_functions</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr>"sha512"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA512_new</name></expr>, <expr><name>METH_VARARGS</name>|<name>METH_KEYWORDS</name></expr>, <expr><name>SHA512_new__doc__</name></expr>}</block></expr>,
<expr><block>{<expr>"sha384"</expr>, <expr>(<name>PyCFunction</name>)<name>SHA384_new</name></expr>, <expr><name>METH_VARARGS</name>|<name>METH_KEYWORDS</name></expr>, <expr><name>SHA384_new__doc__</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>insint</name><parameter_list>(<param><type><name>n</name></type></param>,<param><type><name>v</name></type></param>)</parameter_list></cpp:macro> <cpp:value>{ PyModule_AddIntConstant(m,n,v); }</cpp:value></cpp:define>
<function><type><name>PyMODINIT_FUNC</name></type>
<name>init_sha512</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>PyObject</name> *</type><name>m</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>Py_TYPE</name><argument_list>(<argument><expr>&amp;<name>SHA384type</name></expr></argument>)</argument_list></call> = &amp;<name>PyType_Type</name></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>PyType_Ready</name><argument_list>(<argument><expr>&amp;<name>SHA384type</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
<return>return;</return></then></if>
<expr_stmt><expr><call><name>Py_TYPE</name><argument_list>(<argument><expr>&amp;<name>SHA512type</name></expr></argument>)</argument_list></call> = &amp;<name>PyType_Type</name></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>PyType_Ready</name><argument_list>(<argument><expr>&amp;<name>SHA512type</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
<return>return;</return></then></if>
<expr_stmt><expr><name>m</name> = <call><name>Py_InitModule</name><argument_list>(<argument><expr>"_sha512"</expr></argument>, <argument><expr><name>SHA_functions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>m</name> == <name>NULL</name></expr>)</condition><then>
<return>return;</return></then></if>
}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
