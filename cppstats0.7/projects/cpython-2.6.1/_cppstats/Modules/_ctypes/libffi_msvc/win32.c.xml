<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/_cppstats/Modules/_ctypes/libffi_msvc/win32.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ffi.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ffi_common.h&gt;</cpp:file></cpp:include>
<macro><name>__declspec</name><argument_list>(<argument>naked</argument>)</argument_list></macro> <function><type><name>int</name></type>
<name>ffi_call_SYSV</name><parameter_list>(<param><function_decl><type><name>void</name></type> (* <name>prepfunc</name>)<parameter_list>(<param><decl><type><name>char</name> *</type></decl></param>, <param><decl><type><name>extended_cif</name> *</type></decl></param>)</parameter_list></function_decl></param>,
<param><decl><type><name>extended_cif</name> *</type><name>ecif</name></decl></param>,
<param><decl><type><name>unsigned</name></type> <name>bytes</name></decl></param>,
<param><decl><type><name>unsigned</name></type> <name>flags</name></decl></param>,
<param><decl><type><name>unsigned</name> *</type><name>rvalue</name></decl></param>,
<param><function_decl><type><name>void</name></type> (*<name>fn</name>)<parameter_list>()</parameter_list></function_decl></param>)</parameter_list> <block>{
<macro><name>_asm</name></macro> <block>{
<decl_stmt><decl><type><name>push</name> <name>ebp</name>
<name>mov</name></type> <name>ebp</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>push</name> <name>esi</name>
<name>mov</name> <name>esi</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+16]
<name>sub</name> <name>esp</name></decl>, <decl><type ref="prev"/><name>ecx</name>
<name>mov</name> <name>eax</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name><name>push</name> <index>[<expr><name>ebp</name> + 12</expr>]</index></name>
<name>push</name> <name>eax</name>
<name><name>call</name> <index>[<expr><name>ebp</name> + 8</expr>]</index></name>
<name>add</name> <name>esp</name></decl>, 8
<decl><type ref="prev"/><name><name>call</name> <index>[<expr><name>ebp</name> + 28</expr>]</index></name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name> + 16]
<name>add</name> <name>esp</name></decl>, <decl><type ref="prev"/><name>ecx</name>
<name>sub</name> <name>esi</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name> + 20]
<name>cmp</name> <name>DWORD</name> <name><name>PTR</name> <index>[<expr><name>ebp</name> + 24</expr>]</index></name></decl>, 0
<decl><type ref="prev"/><name>jne</name> <name>sc_retint</name>
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_FLOAT</name>
<name>jne</name> <name>sc_noretval</name>
<name>fstp</name> <name>st</name><argument_list>(<argument><expr>0</expr></argument>)</argument_list>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retint</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_INT</name>
<name>jne</name> <name>sc_retfloat</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name> + 24]
<name><name>mov</name> <index>[<expr><name>ecx</name> + 0</expr>]</index></name></decl>, <decl><type ref="prev"/><name>eax</name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retfloat</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_FLOAT</name>
<name>jne</name> <name>sc_retdouble</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>DWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retdouble</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_DOUBLE</name>
<name>jne</name> <name>sc_retlongdouble</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>QWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>jmp</name> <name>sc_retlongdouble</name>
<name>sc_retlongdouble</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_LONGDOUBLE</name>
<name>jne</name> <name>sc_retint64</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>QWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retint64</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_SINT64</name>
<name>jne</name> <name>sc_retstruct</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name><name>mov</name> <index>[<expr><name>ecx</name>+0</expr>]</index></name></decl>, <decl><type ref="prev"/><name>eax</name>
<name><name>mov</name> <index>[<expr><name>ecx</name>+4</expr>]</index></name></decl>, <decl><type ref="prev"/><name>edx</name>
<name>sc_retstruct</name>:
<name>sc_noretval</name>:
<name>sc_epilogue</name>:
<name>mov</name> <name>eax</name></decl>, <decl><type ref="prev"/><name>esi</name>
<name>pop</name> <name>esi</name>
<name>mov</name> <name>esp</name></decl>, <decl><type ref="prev"/><name>ebp</name>
<name>pop</name> <name>ebp</name>
<name>ret</name></decl></decl_stmt>
}</block>
}</block></function>
<macro><name>__declspec</name><argument_list>(<argument>naked</argument>)</argument_list></macro> <function><type><name>int</name></type>
<name>ffi_call_STDCALL</name><parameter_list>(<param><function_decl><type><name>void</name></type> (* <name>prepfunc</name>)<parameter_list>(<param><decl><type><name>char</name> *</type></decl></param>, <param><decl><type><name>extended_cif</name> *</type></decl></param>)</parameter_list></function_decl></param>,
<param><decl><type><name>extended_cif</name> *</type><name>ecif</name></decl></param>,
<param><decl><type><name>unsigned</name></type> <name>bytes</name></decl></param>,
<param><decl><type><name>unsigned</name></type> <name>flags</name></decl></param>,
<param><decl><type><name>unsigned</name> *</type><name>rvalue</name></decl></param>,
<param><function_decl><type><name>void</name></type> (*<name>fn</name>)<parameter_list>()</parameter_list></function_decl></param>)</parameter_list> <block>{
<macro><name>_asm</name></macro> <block>{
<decl_stmt><decl><type><name>push</name> <name>ebp</name>
<name>mov</name></type> <name>ebp</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>push</name> <name>esi</name>
<name>mov</name> <name>esi</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+16]
<name>sub</name> <name>esp</name></decl>, <decl><type ref="prev"/><name>ecx</name>
<name>mov</name> <name>eax</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name><name>push</name> <index>[<expr><name>ebp</name> + 12</expr>]</index></name>
<name>push</name> <name>eax</name>
<name><name>call</name> <index>[<expr><name>ebp</name> + 8</expr>]</index></name>
<name>add</name> <name>esp</name></decl>, 8
<decl><type ref="prev"/><name><name>call</name> <index>[<expr><name>ebp</name> + 28</expr>]</index></name>
<name>sub</name> <name>esi</name></decl>, <decl><type ref="prev"/><name>esp</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name> + 20]
<name>cmp</name> <name>DWORD</name> <name><name>PTR</name> <index>[<expr><name>ebp</name> + 24</expr>]</index></name></decl>, 0
<decl><type ref="prev"/><name>jne</name> <name>sc_retint</name>
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_FLOAT</name>
<name>jne</name> <name>sc_noretval</name>
<name>fstp</name> <name>st</name><argument_list>(<argument><expr>0</expr></argument>)</argument_list>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retint</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_INT</name>
<name>jne</name> <name>sc_retfloat</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name> + 24]
<name><name>mov</name> <index>[<expr><name>ecx</name> + 0</expr>]</index></name></decl>, <decl><type ref="prev"/><name>eax</name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retfloat</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_FLOAT</name>
<name>jne</name> <name>sc_retdouble</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>DWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retdouble</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_DOUBLE</name>
<name>jne</name> <name>sc_retlongdouble</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>QWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>jmp</name> <name>sc_retlongdouble</name>
<name>sc_retlongdouble</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_LONGDOUBLE</name>
<name>jne</name> <name>sc_retint64</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name>fstp</name> <name>QWORD</name> <name><name>PTR</name> <index>[<expr><name>ecx</name></expr>]</index></name>
<name>jmp</name> <name>sc_epilogue</name>
<name>sc_retint64</name>:
<name>cmp</name> <name>ecx</name></decl>, <decl><type ref="prev"/><name>FFI_TYPE_SINT64</name>
<name>jne</name> <name>sc_retstruct</name>
<name>mov</name> <name>ecx</name></decl>, [<decl><type ref="prev"/><name>ebp</name>+24]
<name><name>mov</name> <index>[<expr><name>ecx</name>+0</expr>]</index></name></decl>, <decl><type ref="prev"/><name>eax</name>
<name><name>mov</name> <index>[<expr><name>ecx</name>+4</expr>]</index></name></decl>, <decl><type ref="prev"/><name>edx</name>
<name>sc_retstruct</name>:
<name>sc_noretval</name>:
<name>sc_epilogue</name>:
<name>mov</name> <name>eax</name></decl>, <decl><type ref="prev"/><name>esi</name>
<name>pop</name> <name>esi</name>
<name>mov</name> <name>esp</name></decl>, <decl><type ref="prev"/><name>ebp</name>
<name>pop</name> <name>ebp</name>
<name>ret</name></decl></decl_stmt>
}</block>
}</block></function>
</unit>
