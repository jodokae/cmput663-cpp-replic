<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="Modules/_sqlite/microprotocols.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>PSYCOPG_MICROPROTOCOLS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PSYCOPG_MICROPROTOCOLS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;Python.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PyObject</name> *</type><name>psyco_adapters</name></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETQUOTED_NAME</name></cpp:macro> <cpp:value>"getquoted"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETSTRING_NAME</name></cpp:macro> <cpp:value>"getstring"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETBINARY_NAME</name></cpp:macro> <cpp:value>"getbinary"</cpp:value></cpp:define>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pysqlite_microprotocols_init</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>dict</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pysqlite_microprotocols_add</name><parameter_list>(
<param><decl><type><name>PyTypeObject</name> *</type><name>type</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>proto</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>cast</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>PyObject</name> *</type><name>pysqlite_microprotocols_adapt</name><parameter_list>(
<param><decl><type><name>PyObject</name> *</type><name>obj</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>proto</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>alt</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>PyObject</name> *</type>
<name>pysqlite_adapt</name><parameter_list>(<param><decl><type><name>pysqlite_Cursor</name>*</type> <name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pysqlite_adapt_doc</name></cpp:macro> <cpp:value>"adapt(obj, protocol, alternate) -&gt; adapt obj to given protocol. Non-standard."</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
