<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/_cppstats/Modules/cjkcodecs/emu_jisx0213_2000.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>EMULATE_JISX0213_2000_ENCODE_INVALID</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_ENCODE_INVALID</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_ENCODE_BMP</name><parameter_list>(<param><type><name>assi</name></type></param>, <param><type><name>c</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (config == (void *)2000 &amp;&amp; ( (c) == 0x9B1C || (c) == 0x4FF1 || (c) == 0x525D || (c) == 0x541E || (c) == 0x5653 || (c) == 0x59F8 || (c) == 0x5C5B || (c) == 0x5E77 || (c) == 0x7626 || (c) == 0x7E6B)) return EMULATE_JISX0213_2000_ENCODE_INVALID; else if (config == (void *)2000 &amp;&amp; (c) == 0x9B1D) (assi) = 0x8000 | 0x7d3b;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_ENCODE_EMP</name><parameter_list>(<param><type><name>assi</name></type></param>, <param><type><name>c</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (config == (void *)2000 &amp;&amp; (c) == 0x20B9F) return EMULATE_JISX0213_2000_ENCODE_INVALID;</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>EMULATE_JISX0213_2000_DECODE_INVALID</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_DECODE_INVALID</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_DECODE_PLANE1</name><parameter_list>(<param><type><name>assi</name></type></param>, <param><type><name>c1</name></type></param>, <param><type><name>c2</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (config == (void *)2000 &amp;&amp; (((c1) == 0x2E &amp;&amp; (c2) == 0x21) || ((c1) == 0x2F &amp;&amp; (c2) == 0x7E) || ((c1) == 0x4F &amp;&amp; (c2) == 0x54) || ((c1) == 0x4F &amp;&amp; (c2) == 0x7E) || ((c1) == 0x74 &amp;&amp; (c2) == 0x27) || ((c1) == 0x7E &amp;&amp; (c2) == 0x7A) || ((c1) == 0x7E &amp;&amp; (c2) == 0x7B) || ((c1) == 0x7E &amp;&amp; (c2) == 0x7C) || ((c1) == 0x7E &amp;&amp; (c2) == 0x7D) || ((c1) == 0x7E &amp;&amp; (c2) == 0x7E))) return EMULATE_JISX0213_2000_DECODE_INVALID;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMULATE_JISX0213_2000_DECODE_PLANE2</name><parameter_list>(<param><type><name>assi</name></type></param>, <param><type><name>c1</name></type></param>, <param><type><name>c2</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (config == (void *)2000 &amp;&amp; (c1) == 0x7D &amp;&amp; (c2) == 0x3B) (assi) = 0x9B1D;</cpp:value></cpp:define>
</unit>
