<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/_cppstats/Modules/expat/xmlrole.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>XmlRole_INCLUDED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XmlRole_INCLUDED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__VMS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XmlPrologStateInitExternalEntity</name></cpp:macro> <cpp:value>XmlPrologStateInitExternalEnt</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xmltok.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<enum>enum <block>{
<decl><name>XML_ROLE_ERROR</name> <init>= <expr>-1</expr></init></decl>,
<decl><name>XML_ROLE_NONE</name> <init>= <expr>0</expr></init></decl>,
<decl><name>XML_ROLE_XML_DECL</name></decl>,
<decl><name>XML_ROLE_INSTANCE_START</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_NONE</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_NAME</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_SYSTEM_ID</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_PUBLIC_ID</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_INTERNAL_SUBSET</name></decl>,
<decl><name>XML_ROLE_DOCTYPE_CLOSE</name></decl>,
<decl><name>XML_ROLE_GENERAL_ENTITY_NAME</name></decl>,
<decl><name>XML_ROLE_PARAM_ENTITY_NAME</name></decl>,
<decl><name>XML_ROLE_ENTITY_NONE</name></decl>,
<decl><name>XML_ROLE_ENTITY_VALUE</name></decl>,
<decl><name>XML_ROLE_ENTITY_SYSTEM_ID</name></decl>,
<decl><name>XML_ROLE_ENTITY_PUBLIC_ID</name></decl>,
<decl><name>XML_ROLE_ENTITY_COMPLETE</name></decl>,
<decl><name>XML_ROLE_ENTITY_NOTATION_NAME</name></decl>,
<decl><name>XML_ROLE_NOTATION_NONE</name></decl>,
<decl><name>XML_ROLE_NOTATION_NAME</name></decl>,
<decl><name>XML_ROLE_NOTATION_SYSTEM_ID</name></decl>,
<decl><name>XML_ROLE_NOTATION_NO_SYSTEM_ID</name></decl>,
<decl><name>XML_ROLE_NOTATION_PUBLIC_ID</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_NAME</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_CDATA</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_ID</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_IDREF</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_IDREFS</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_ENTITY</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_ENTITIES</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_ENUM_VALUE</name></decl>,
<decl><name>XML_ROLE_ATTRIBUTE_NOTATION_VALUE</name></decl>,
<decl><name>XML_ROLE_ATTLIST_NONE</name></decl>,
<decl><name>XML_ROLE_ATTLIST_ELEMENT_NAME</name></decl>,
<decl><name>XML_ROLE_IMPLIED_ATTRIBUTE_VALUE</name></decl>,
<decl><name>XML_ROLE_REQUIRED_ATTRIBUTE_VALUE</name></decl>,
<decl><name>XML_ROLE_DEFAULT_ATTRIBUTE_VALUE</name></decl>,
<decl><name>XML_ROLE_FIXED_ATTRIBUTE_VALUE</name></decl>,
<decl><name>XML_ROLE_ELEMENT_NONE</name></decl>,
<decl><name>XML_ROLE_ELEMENT_NAME</name></decl>,
<decl><name>XML_ROLE_CONTENT_ANY</name></decl>,
<decl><name>XML_ROLE_CONTENT_EMPTY</name></decl>,
<decl><name>XML_ROLE_CONTENT_PCDATA</name></decl>,
<decl><name>XML_ROLE_GROUP_OPEN</name></decl>,
<decl><name>XML_ROLE_GROUP_CLOSE</name></decl>,
<decl><name>XML_ROLE_GROUP_CLOSE_REP</name></decl>,
<decl><name>XML_ROLE_GROUP_CLOSE_OPT</name></decl>,
<decl><name>XML_ROLE_GROUP_CLOSE_PLUS</name></decl>,
<decl><name>XML_ROLE_GROUP_CHOICE</name></decl>,
<decl><name>XML_ROLE_GROUP_SEQUENCE</name></decl>,
<decl><name>XML_ROLE_CONTENT_ELEMENT</name></decl>,
<decl><name>XML_ROLE_CONTENT_ELEMENT_REP</name></decl>,
<decl><name>XML_ROLE_CONTENT_ELEMENT_OPT</name></decl>,
<decl><name>XML_ROLE_CONTENT_ELEMENT_PLUS</name></decl>,
<decl><name>XML_ROLE_PI</name></decl>,
<decl><name>XML_ROLE_COMMENT</name></decl>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>XML_DTD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl><name>XML_ROLE_TEXT_DECL</name></decl>,
<decl><name>XML_ROLE_IGNORE_SECT</name></decl>,
<decl><name>XML_ROLE_INNER_PARAM_ENTITY_REF</name></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl><name>XML_ROLE_PARAM_ENTITY_REF</name></decl>
}</block>;</enum>
<typedef>typedef <type><struct>struct <name>prolog_state</name> <block>{
<function_decl><type><name>int</name></type> (<name>PTRCALL</name> *<name>handler</name>) <parameter_list>(<param><decl><type>struct <name>prolog_state</name> *</type><name>state</name></decl></param>,
<param><decl><type><name>int</name></type> <name>tok</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ptr</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>end</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>ENCODING</name> *</type><name>enc</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>unsigned</name></type> <name>level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>role_none</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>XML_DTD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>unsigned</name></type> <name>includeLevel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>documentEntity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>inEntityValue</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>PROLOG_STATE</name>;</typedef>
<function_decl><type><name>void</name></type> <name>XmlPrologStateInit</name><parameter_list>(<param><decl><type><name>PROLOG_STATE</name> *</type></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>XML_DTD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>void</name></type> <name>XmlPrologStateInitExternalEntity</name><parameter_list>(<param><decl><type><name>PROLOG_STATE</name> *</type></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XmlTokenRole</name><parameter_list>(<param><type><name>state</name></type></param>, <param><type><name>tok</name></type></param>, <param><type><name>ptr</name></type></param>, <param><type><name>end</name></type></param>, <param><type><name>enc</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(((state)-&gt;handler)(state, tok, ptr, end, enc))</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
