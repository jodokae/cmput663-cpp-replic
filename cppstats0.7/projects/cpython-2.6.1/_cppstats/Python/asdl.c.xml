<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="Python/asdl.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Python.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"asdl.h"</cpp:file></cpp:include>
<function><type><name>asdl_seq</name> *</type>
<name>asdl_seq_new</name><parameter_list>(<param><decl><type><name>int</name></type> <name>size</name></decl></param>, <param><decl><type><name>PyArena</name> *</type><name>arena</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>asdl_seq</name> *</type><name>seq</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n</name> <init>= <expr>(<name>size</name> ? (<sizeof>sizeof<argument_list>(<argument><expr><name>void</name> *</expr></argument>)</argument_list></sizeof> * (<name>size</name> - 1)) : 0)</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>size</name> &lt; 0 || <name>size</name> == <name>INT_MIN</name> ||
(<name>size</name> &amp;&amp; ((<name>size</name> - 1) &gt; (<name>PY_SIZE_MAX</name> / <sizeof>sizeof<argument_list>(<argument><expr><name>void</name> *</expr></argument>)</argument_list></sizeof>)))</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>n</name> &gt; <name>PY_SIZE_MAX</name> - <sizeof>sizeof<argument_list>(<argument><expr><name>asdl_seq</name></expr></argument>)</argument_list></sizeof></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>n</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>asdl_seq</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name>seq</name> = (<name>asdl_seq</name> *)<call><name>PyArena_Malloc</name><argument_list>(<argument><expr><name>arena</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>seq</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>seq</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>seq</name>-&gt;<name>size</name></name> = <name>size</name></expr>;</expr_stmt>
<return>return <expr><name>seq</name></expr>;</return>
}</block></function>
<function><type><name>asdl_int_seq</name> *</type>
<name>asdl_int_seq_new</name><parameter_list>(<param><decl><type><name>int</name></type> <name>size</name></decl></param>, <param><decl><type><name>PyArena</name> *</type><name>arena</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>asdl_int_seq</name> *</type><name>seq</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n</name> <init>= <expr>(<name>size</name> ? (<sizeof>sizeof<argument_list>(<argument><expr><name>void</name> *</expr></argument>)</argument_list></sizeof> * (<name>size</name> - 1)) : 0)</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>size</name> &lt; 0 || <name>size</name> == <name>INT_MIN</name> ||
(<name>size</name> &amp;&amp; ((<name>size</name> - 1) &gt; (<name>PY_SIZE_MAX</name> / <sizeof>sizeof<argument_list>(<argument><expr><name>void</name> *</expr></argument>)</argument_list></sizeof>)))</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>n</name> &gt; <name>PY_SIZE_MAX</name> - <sizeof>sizeof<argument_list>(<argument><expr><name>asdl_seq</name></expr></argument>)</argument_list></sizeof></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>n</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>asdl_seq</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name>seq</name> = (<name>asdl_int_seq</name> *)<call><name>PyArena_Malloc</name><argument_list>(<argument><expr><name>arena</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>seq</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>PyErr_NoMemory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>seq</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>seq</name>-&gt;<name>size</name></name> = <name>size</name></expr>;</expr_stmt>
<return>return <expr><name>seq</name></expr>;</return>
}</block></function>
</unit>
