<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Include/pymacconfig.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PYMACCONFIG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PYMACCONFIG_H</name></cpp:macro></cpp:define>
     <comment type="block">/*
      * This file moves some of the autoconf magic to compile-time
      * when building on MacOSX. This is needed for building 4-way
      * universal binaries and for 64-bit universal binaries because
      * the values redefined below aren't configure-time constant but 
      * only compile-time constant in these scenarios.
      */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:undef># <cpp:directive>undef</cpp:directive> <name>SIZEOF_LONG</name></cpp:undef>
<cpp:undef># <cpp:directive>undef</cpp:directive> <name>SIZEOF_PTHREAD_T</name></cpp:undef>
<cpp:undef># <cpp:directive>undef</cpp:directive> <name>SIZEOF_SIZE_T</name></cpp:undef>
<cpp:undef># <cpp:directive>undef</cpp:directive> <name>SIZEOF_TIME_T</name></cpp:undef>
<cpp:undef># <cpp:directive>undef</cpp:directive> <name>SIZEOF_VOID_P</name></cpp:undef>

<cpp:undef>#    <cpp:directive>undef</cpp:directive> <name>VA_LIST_IS_ARRAY</name></cpp:undef>
<cpp:if>#    <cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__LP64__</name></expr></argument>)</argument_list></call> &amp;&amp; <call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>VA_LIST_IS_ARRAY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#    <cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:undef>#    <cpp:directive>undef</cpp:directive> <name>HAVE_LARGEFILE_SUPPORT</name></cpp:undef>
<cpp:ifndef>#    <cpp:directive>ifndef</cpp:directive> <name>__LP64__</name></cpp:ifndef>
<cpp:define>#         <cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LARGEFILE_SUPPORT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#    <cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:undef>#    <cpp:directive>undef</cpp:directive> <name>SIZEOF_LONG</name></cpp:undef>
<cpp:ifdef>#    <cpp:directive>ifdef</cpp:directive> <name>__LP64__</name></cpp:ifdef>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_LONG</name></cpp:macro> 		<cpp:value>8</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_PTHREAD_T</name></cpp:macro> 	<cpp:value>8</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_SIZE_T</name></cpp:macro> 		<cpp:value>8</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_TIME_T</name></cpp:macro> 		<cpp:value>8</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_VOID_P</name></cpp:macro> 		<cpp:value>8</cpp:value></cpp:define>
<cpp:else>#    <cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_LONG</name></cpp:macro> 		<cpp:value>4</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_PTHREAD_T</name></cpp:macro> 	<cpp:value>4</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_SIZE_T</name></cpp:macro> 		<cpp:value>4</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_TIME_T</name></cpp:macro> 		<cpp:value>4</cpp:value></cpp:define>
<cpp:define>#        <cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_VOID_P</name></cpp:macro> 		<cpp:value>4</cpp:value></cpp:define>
<cpp:endif>#    <cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#    <cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__LP64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
	 <comment type="block">/* MacOSX 10.4 (the first release to suppport 64-bit code
	  * at all) only supports 64-bit in the UNIX layer. 
	  * Therefore surpress the toolbox-glue in 64-bit mode.
	  */</comment>

	<comment type="block">/* In 64-bit mode setpgrp always has no argments, in 32-bit
	 * mode that depends on the compilation environment
	 */</comment>
<cpp:undef>#	<cpp:directive>undef</cpp:directive> <name>SETPGRP_HAVE_ARG</name></cpp:undef>

<cpp:endif>#    <cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* defined(_APPLE__) */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* PYMACCONFIG_H */</comment>
</unit>
