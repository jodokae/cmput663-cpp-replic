<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Include/sysmodule.h">
<comment type="block">/* System module interface */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>Py_SYSMODULE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Py_SYSMODULE_H</name></cpp:macro></cpp:define>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<macro><name>PyAPI_FUNC</name><argument_list>(<argument>PyObject *</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_GetObject</name><argument_list>(<argument><expr><name>char</name> *</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_SetObject</name><argument_list>(<argument><expr><name>char</name> *</expr></argument>, <argument><expr><name>PyObject</name> *</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>FILE *</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_GetFile</name><argument_list>(<argument><expr><name>char</name> *</expr></argument>, <argument><expr><name>FILE</name> *</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_SetArgv</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>char</name> **</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_SetPath</name><argument_list>(<argument><expr><name>char</name> *</expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>PySys_WriteStdout</name><argument_list>(<argument>const char *format</argument>, <argument>...</argument>)</argument_list></macro>
			<expr_stmt><expr><call><name>Py_GCC_ATTRIBUTE</name><argument_list>(<argument><expr>(<call><name>format</name><argument_list>(<argument><expr><name>printf</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr>2</expr></argument>)</argument_list></call>)</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>PySys_WriteStderr</name><argument_list>(<argument>const char *format</argument>, <argument>...</argument>)</argument_list></macro>
			<expr_stmt><expr><call><name>Py_GCC_ATTRIBUTE</name><argument_list>(<argument><expr>(<call><name>format</name><argument_list>(<argument><expr><name>printf</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr>2</expr></argument>)</argument_list></call>)</expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>PyAPI_DATA</name><argument_list>(<argument>PyObject *</argument>)</argument_list></macro> <expr_stmt><expr><name>_PySys_TraceFunc</name></expr>, <expr>*<name>_PySys_ProfileFunc</name></expr>;</expr_stmt>
<macro><name>PyAPI_DATA</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><name>_PySys_CheckInterval</name></expr>;</expr_stmt>

<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_ResetWarnOptions</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>void</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_AddWarnOption</name><argument_list>(<argument><expr><name>char</name> *</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PyAPI_FUNC</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>PySys_HasWarnOptions</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* !Py_SYSMODULE_H */</comment>
</unit>
