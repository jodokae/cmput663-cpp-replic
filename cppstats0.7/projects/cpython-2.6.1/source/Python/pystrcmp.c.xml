<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Python/pystrcmp.c"><comment type="block">/* Cross platform case insensitive string compare functions
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Python.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>
<name>PyOS_mystrnicmp</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>s1</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>s2</name></decl></param>, <param><decl><type><name>Py_ssize_t</name></type> <name>size</name></decl></param>)</parameter_list>
<block>{
	<if>if <condition>(<expr><name>size</name> == 0</expr>)</condition><then>
		<return>return <expr>0</expr>;</return></then></if>
	<while>while <condition>(<expr>(--<name>size</name> &gt; 0) &amp;&amp;
	       (<call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s1</name></expr></argument>)</argument_list></call> == <call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s2</name></expr></argument>)</argument_list></call>)</expr>)</condition> <block>{
		<if>if <condition>(<expr>!*<name>s1</name>++ || !*<name>s2</name>++</expr>)</condition><then>
			<break>break;</break></then></if>
	}</block></while>
	<return>return <expr><call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s1</name></expr></argument>)</argument_list></call> - <call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s2</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name>int</name></type>
<name>PyOS_mystricmp</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>s1</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>s2</name></decl></param>)</parameter_list>
<block>{
	<while>while <condition>(<expr>*<name>s1</name> &amp;&amp; (<call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s1</name>++</expr></argument>)</argument_list></call> == <call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s2</name>++</expr></argument>)</argument_list></call>)</expr>)</condition> <block>{
		<empty_stmt>;</empty_stmt>
	}</block></while>
	<return>return <expr>(<call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s1</name></expr></argument>)</argument_list></call> - <call><name>tolower</name><argument_list>(<argument><expr>(<name>unsigned</name>)*<name>s2</name></expr></argument>)</argument_list></call>)</expr>;</return>
}</block></function>
</unit>
