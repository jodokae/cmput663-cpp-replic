<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Python/dup2.c"><comment type="block">/*
 * Public domain dup2() lookalike
 * by Curtis Jackson @ AT&amp;T Technologies, Burlington, NC
 * electronic address:  burl!rcj
 *
 * dup2 performs the following functions:
 *
 * Check to make sure that fd1 is a valid open file descriptor.
 * Check to see if fd2 is already open; if so, close it.
 * Duplicate fd1 onto fd2; checking to make sure fd2 is a valid fd.
 * Return fd2 if all went well; return BADEXIT otherwise.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BADEXIT</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<function><type><name>int</name></type>
<name>dup2</name><parameter_list>(<param><decl><type><name>int</name></type> <name>fd1</name></decl></param>, <param><decl><type><name>int</name></type> <name>fd2</name></decl></param>)</parameter_list>
<block>{
	<if>if <condition>(<expr><name>fd1</name> != <name>fd2</name></expr>)</condition><then> <block>{
		<if>if <condition>(<expr><call><name>fcntl</name><argument_list>(<argument><expr><name>fd1</name></expr></argument>, <argument><expr><name>F_GETFL</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
			<return>return <expr><name>BADEXIT</name></expr>;</return></then></if>
		<if>if <condition>(<expr><call><name>fcntl</name><argument_list>(<argument><expr><name>fd2</name></expr></argument>, <argument><expr><name>F_GETFL</name></expr></argument>)</argument_list></call> &gt;= 0</expr>)</condition><then>
			<expr_stmt><expr><call><name>close</name><argument_list>(<argument><expr><name>fd2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if>if <condition>(<expr><call><name>fcntl</name><argument_list>(<argument><expr><name>fd1</name></expr></argument>, <argument><expr><name>F_DUPFD</name></expr></argument>, <argument><expr><name>fd2</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
			<return>return <expr><name>BADEXIT</name></expr>;</return></then></if>
	}</block></then></if>
	<return>return <expr><name>fd2</name></expr>;</return>
}</block></function>
</unit>
