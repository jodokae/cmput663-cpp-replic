<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Modules/expat/amigaconfig.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>AMIGACONFIG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AMIGACONFIG_H</name></cpp:macro></cpp:define>

<comment type="block">/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BYTEORDER</name></cpp:macro> <cpp:value>4321</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `bcopy' function. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BCOPY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;check.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CHECK_H</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DLFCN_H</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the &lt;fcntl.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_FCNTL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `getpagesize' function. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPAGESIZE</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_INTTYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `memmove' function. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MEMMOVE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;memory.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MEMORY_H</name></cpp:undef>

<comment type="block">/* Define to 1 if you have a working `mmap' system call. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MMAP</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the &lt;stdint.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDINT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDLIB_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;strings.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRINGS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;string.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRING_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_STAT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_TYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;unistd.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_UNISTD_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to the address where bug reports for this package should be sent. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_BUGREPORT</name></cpp:macro> <cpp:value>"expat-bugs@mail.libexpat.org"</cpp:value></cpp:define>

<comment type="block">/* Define to the full name of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_NAME</name></cpp:macro> <cpp:value>"expat"</cpp:value></cpp:define>

<comment type="block">/* Define to the full name and version of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_STRING</name></cpp:macro> <cpp:value>"expat 1.95.8"</cpp:value></cpp:define>

<comment type="block">/* Define to the one symbol short name of this package. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PACKAGE_TARNAME</name></cpp:undef>

<comment type="block">/* Define to the version of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_VERSION</name></cpp:macro> <cpp:value>"1.95.8"</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the ANSI C header files. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STDC_HEADERS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* whether byteorder is bigendian */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WORDS_BIGENDIAN</name></cpp:macro></cpp:define>

<comment type="block">/* Define to specify how much context to retain around the current parse
   point. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_CONTEXT_BYTES</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<comment type="block">/* Define to make parameter entity parsing functionality available. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_DTD</name></cpp:macro></cpp:define>

<comment type="block">/* Define to make XML Namespaces functionality available. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_NS</name></cpp:macro></cpp:define>

<comment type="block">/* Define to empty if `const' does not conform to ANSI C. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>const</name></cpp:undef>

<comment type="block">/* Define to `long' if &lt;sys/types.h&gt; does not define. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>off_t</name></cpp:undef>

<comment type="block">/* Define to `unsigned' if &lt;sys/types.h&gt; does not define. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>size_t</name></cpp:undef>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="block">/* AMIGACONFIG_H */</comment>
</unit>
