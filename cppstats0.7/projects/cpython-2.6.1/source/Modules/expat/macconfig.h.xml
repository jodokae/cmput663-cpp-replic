<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Modules/expat/macconfig.h"><comment type="block">/*================================================================
** Copyright 2000, Clark Cooper
** All rights reserved.
**
** This is free software. You are permitted to copy, distribute, or modify
** it under the terms of the MIT/X license (contained in the COPYING file
** with this distribution.)
**
*/</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>MACCONFIG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MACCONFIG_H</name></cpp:macro></cpp:define>


<comment type="block">/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BYTEORDER</name></cpp:macro>  <cpp:value>4321</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `bcopy' function. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_BCOPY</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the `memmove' function. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MEMMOVE</name></cpp:macro></cpp:define>

<comment type="block">/* Define to 1 if you have a working `mmap' system call. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MMAP</name></cpp:undef>

<comment type="block">/* Define to 1 if you have the &lt;unistd.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_UNISTD_H</name></cpp:undef>

<comment type="block">/* whether byteorder is bigendian */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WORDS_BIGENDIAN</name></cpp:macro></cpp:define>

<comment type="block">/* Define to specify how much context to retain around the current parse
   point. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>XML_CONTEXT_BYTES</name></cpp:undef>

<comment type="block">/* Define to make parameter entity parsing functionality available. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_DTD</name></cpp:macro></cpp:define>

<comment type="block">/* Define to make XML Namespaces functionality available. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_NS</name></cpp:macro></cpp:define>

<comment type="block">/* Define to empty if `const' does not conform to ANSI C. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>const</name></cpp:undef>

<comment type="block">/* Define to `long' if &lt;sys/types.h&gt; does not define. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>off_t</name></cpp:macro>  <cpp:value>long</cpp:value></cpp:define>

<comment type="block">/* Define to `unsigned' if &lt;sys/types.h&gt; does not define. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>size_t</name></cpp:undef>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* ifndef MACCONFIG_H */</comment>
</unit>
