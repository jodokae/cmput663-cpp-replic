<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Modules/_sqlite/sqlitecompat.h"><comment type="block">/* sqlitecompat.h - compatibility macros
 *
 * Copyright (C) 2006 Gerhard HÃ¤ring &lt;gh@ghaering.de&gt;
 *
 * This file is part of pysqlite.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PYSQLITE_COMPAT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PYSQLITE_COMPAT_H</name></cpp:macro></cpp:define>

<comment type="block">/* define Py_ssize_t for pre-2.5 versions of Python */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>PY_VERSION_HEX</name> &lt; 0x02050000</expr></cpp:if>
<typedef>typedef <type><name>int</name></type> <name>Py_ssize_t</name>;</typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (*<name>lenfunc</name>)<parameter_list>(<param><decl><type><name>PyObject</name>*</type></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
