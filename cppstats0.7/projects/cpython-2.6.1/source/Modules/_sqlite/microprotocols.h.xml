<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Modules/_sqlite/microprotocols.h"><comment type="block">/* microprotocols.c - definitions for minimalist and non-validating protocols
 *
 * Copyright (C) 2003-2004 Federico Di Gregorio &lt;fog@debian.org&gt;
 *
 * This file is part of psycopg and was adapted for pysqlite. Federico Di
 * Gregorio gave the permission to use it within pysqlite under the following
 * license:
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PSYCOPG_MICROPROTOCOLS_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PSYCOPG_MICROPROTOCOLS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;Python.h&gt;</cpp:file></cpp:include>

<comment type="block">/** adapters registry **/</comment>

<decl_stmt><decl><type><specifier>extern</specifier> <name>PyObject</name> *</type><name>psyco_adapters</name></decl>;</decl_stmt>

<comment type="block">/** the names of the three mandatory methods **/</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETQUOTED_NAME</name></cpp:macro> <cpp:value>"getquoted"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETSTRING_NAME</name></cpp:macro> <cpp:value>"getstring"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MICROPROTOCOLS_GETBINARY_NAME</name></cpp:macro> <cpp:value>"getbinary"</cpp:value></cpp:define>

<comment type="block">/** exported functions **/</comment>

<comment type="block">/* used by module.c to init the microprotocols system */</comment>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pysqlite_microprotocols_init</name><parameter_list>(<param><decl><type><name>PyObject</name> *</type><name>dict</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pysqlite_microprotocols_add</name><parameter_list>(
    <param><decl><type><name>PyTypeObject</name> *</type><name>type</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>proto</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>cast</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>PyObject</name> *</type><name>pysqlite_microprotocols_adapt</name><parameter_list>(
    <param><decl><type><name>PyObject</name> *</type><name>obj</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>proto</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>alt</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>PyObject</name> *</type>
    <name>pysqlite_adapt</name><parameter_list>(<param><decl><type><name>pysqlite_Cursor</name>*</type> <name>self</name></decl></param>, <param><decl><type><name>PyObject</name> *</type><name>args</name></decl></param>)</parameter_list>;</function_decl>   
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pysqlite_adapt_doc</name></cpp:macro> \
    <cpp:value>"adapt(obj, protocol, alternate) -&gt; adapt obj to given protocol. Non-standard."</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* !defined(PSYCOPG_MICROPROTOCOLS_H) */</comment>
</unit>
