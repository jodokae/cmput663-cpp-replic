<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/PC/VS7.1/make_buildinfo.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<comment type="block">/* This file creates the getbuildinfo.o object, by first
   invoking subwcrev.exe (if found), and then invoking cl.exe.
   As a side effect, it might generate PC\VS7.1\getbuildinfo2.c
   also. If this isn't a subversion checkout, or subwcrev isn't
   found, it compiles ..\\..\\Modules\\getbuildinfo.c instead.

   Currently, subwcrev.exe is found from the registry entries
   of TortoiseSVN.

   No attempt is made to place getbuildinfo.o into the proper
   binary directory. This isn't necessary, as this tool is
   invoked as a pre-link step for pythoncore, so that overwrites
   any previous getbuildinfo.o.

*/</comment>

<function><type><name>int</name></type> <name>make_buildinfo2</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type>struct <name>_stat</name></type> <name>st</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>HKEY</name></type> <name>hTortoise</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name><name>command</name><index>[<expr>500</expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DWORD</name></type> <name>type</name></decl>, <decl><type ref="prev"/><name>size</name></decl>;</decl_stmt>
	<if>if <condition>(<expr><call><name>_stat</name><argument_list>(<argument><expr>".svn"</expr></argument>, <argument><expr>&amp;<name>st</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
		<return>return <expr>0</expr>;</return></then></if>
	<comment type="block">/* Allow suppression of subwcrev.exe invocation if a no_subwcrev file is present. */</comment>
	<if>if <condition>(<expr><call><name>_stat</name><argument_list>(<argument><expr>"no_subwcrev"</expr></argument>, <argument><expr>&amp;<name>st</name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then>
		<return>return <expr>0</expr>;</return></then></if>
	<if>if <condition>(<expr><call><name>RegOpenKey</name><argument_list>(<argument><expr><name>HKEY_LOCAL_MACHINE</name></expr></argument>, <argument><expr>"Software\\TortoiseSVN"</expr></argument>, <argument><expr>&amp;<name>hTortoise</name></expr></argument>)</argument_list></call> != <name>ERROR_SUCCESS</name> &amp;&amp;
	    <call><name>RegOpenKey</name><argument_list>(<argument><expr><name>HKEY_CURRENT_USER</name></expr></argument>, <argument><expr>"Software\\TortoiseSVN"</expr></argument>, <argument><expr>&amp;<name>hTortoise</name></expr></argument>)</argument_list></call> != <name>ERROR_SUCCESS</name></expr>)</condition><then>
		<comment type="block">/* Tortoise not installed */</comment>
		<return>return <expr>0</expr>;</return></then></if>
	<expr_stmt><expr><name><name>command</name><index>[<expr>0</expr>]</index></name> = '"'</expr>;</expr_stmt>  <comment type="block">/* quote the path to the executable */</comment>
	<expr_stmt><expr><name>size</name> = <sizeof>sizeof<argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></sizeof> - 1</expr>;</expr_stmt>
	<if>if <condition>(<expr><call><name>RegQueryValueEx</name><argument_list>(<argument><expr><name>hTortoise</name></expr></argument>, <argument><expr>"Directory"</expr></argument>, <argument><expr>0</expr></argument>, <argument><expr>&amp;<name>type</name></expr></argument>, <argument><expr><name>command</name>+1</expr></argument>, <argument><expr>&amp;<name>size</name></expr></argument>)</argument_list></call> != <name>ERROR_SUCCESS</name> ||
	    <name>type</name> != <name>REG_SZ</name></expr>)</condition><then>
		<comment type="block">/* Registry corrupted */</comment>
		<return>return <expr>0</expr>;</return></then></if>
	<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"bin\\subwcrev.exe"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if>if <condition>(<expr><call><name>_stat</name><argument_list>(<argument><expr><name>command</name>+1</expr></argument>, <argument><expr>&amp;<name>st</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
		<comment type="block">/* subwcrev.exe not part of the release */</comment>
		<return>return <expr>0</expr>;</return></then></if>
	<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"\" ..\\.. ..\\..\\Modules\\getbuildinfo.c getbuildinfo2.c"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>fflush</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if>if <condition>(<expr><call><name>system</name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call> &lt; 0</expr>)</condition><then>
		<return>return <expr>0</expr>;</return></then></if>
	<return>return <expr>1</expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<param><decl><type><name>int</name></type> <name>argc</name></decl></param>, <param><decl><type><name>char</name>*</type><name><name>argv</name><index>[]</index></name></decl></param>)</parameter_list>
<block>{
	<decl_stmt><decl><type><name>char</name></type> <name><name>command</name><index>[<expr>500</expr>]</index></name> <init>= <expr>"cl.exe -c -D_WIN32 -DUSE_DL_EXPORT -D_WINDOWS -DWIN32 -D_WINDLL "</expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>do_unlink</name></decl>, <decl><type ref="prev"/><name>result</name></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>argc</name> != 2</expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr>"make_buildinfo $(ConfigurationName)\n"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>EXIT_FAILURE</name></expr>;</return>
	}</block></then></if>
	<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr>"Release"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"-MD "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr>"Debug"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"-D_DEBUG -MDd "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr>"ReleaseItanium"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"-MD /USECL:MS_ITANIUM "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr>"ReleaseAMD64"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"-MD "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"-MD /USECL:MS_OPTERON "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else>else <block>{
		<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr>"unsupported configuration %s\n"</expr></argument>, <argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>EXIT_FAILURE</name></expr>;</return>
	}</block></else></if></else></if></else></if></else></if>

	<if>if <condition>(<expr>(<name>do_unlink</name> = <call><name>make_buildinfo2</name><argument_list>()</argument_list></call>)</expr>)</condition><then>
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"getbuildinfo2.c -DSUBWCREV "</expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else>else
		<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>"..\\..\\Modules\\getbuildinfo.c"</expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><call><name>strcat</name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr>" -Fogetbuildinfo.o -I..\\..\\Include -I..\\..\\PC"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>fflush</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>result</name> = <call><name>system</name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if>if <condition>(<expr><name>do_unlink</name></expr>)</condition><then>
		<expr_stmt><expr><call><name>unlink</name><argument_list>(<argument><expr>"getbuildinfo2.c"</expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if>if <condition>(<expr><name>result</name> &lt; 0</expr>)</condition><then>
		<return>return <expr><name>EXIT_FAILURE</name></expr>;</return></then></if>
	<return>return <expr>0</expr>;</return>
}</block></function>
</unit>
