<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/PC/os2emx/config.c"><comment type="block">/* -*- C -*- ***********************************************
Copyright 1991-1995 by Stichting Mathematisch Centrum, Amsterdam,
The Netherlands.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the names of Stichting Mathematisch
Centrum or CWI or Corporation for National Research Initiatives or
CNRI not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior
permission.

While CWI is the initial source for this software, a modified version
is made available by the Corporation for National Research Initiatives
(CNRI) at the Internet address ftp://ftp.python.org.

STICHTING MATHEMATISCH CENTRUM AND CNRI DISCLAIM ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH
CENTRUM OR CNRI BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.

******************************************************************/</comment>

<comment type="block">/* Module configuration */</comment>

<comment type="block">/* This file contains the table of built-in modules.
   See init_builtin() in import.c. */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Python.h"</cpp:file></cpp:include>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initos2</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initsignal</name><parameter_list>()</parameter_list>;</function_decl>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WITH_THREAD</name></cpp:ifdef>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initthread</name><parameter_list>()</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_codecs</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_csv</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_locale</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_random</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_sre</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_symtable</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_weakref</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initarray</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initbinascii</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initcPickle</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initcStringIO</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_collections</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initcmath</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initdatetime</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initdl</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initerrno</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initfcntl</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_fileio</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_functools</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_heapq</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initimageop</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>inititertools</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initmath</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_md5</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initoperator</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_sha</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_sha256</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_sha512</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initstrop</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_struct</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>inittermios</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>inittime</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>inittiming</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initxxsubtype</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initzipimport</name><parameter_list>()</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<name>HAVE_DYNAMIC_LOADING</name></expr></cpp:if>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_curses</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_curses_panel</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_hotshot</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_testcapi</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initbsddb185</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initbz2</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initfpectl</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initfpetest</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initparser</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initpwd</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initunicodedata</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initzlib</name><parameter_list>()</parameter_list>;</function_decl>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_SOCKET</name></cpp:ifdef>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>init_socket</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initselect</name><parameter_list>()</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/* -- ADDMODULE MARKER 1 -- */</comment>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>PyMarshal_Init</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initimp</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>initgc</name><parameter_list>()</parameter_list>;</function_decl>

<decl_stmt><decl><type>struct <name>_inittab</name></type> <name><name>_PyImport_Inittab</name><index>[]</index></name> <init>= <expr><block>{

	<expr><block>{<expr>"os2"</expr>, <expr><name>initos2</name></expr>}</block></expr>,
	<expr><block>{<expr>"signal"</expr>, <expr><name>initsignal</name></expr>}</block></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WITH_THREAD</name></cpp:ifdef>
	<expr><block>{<expr>"thread"</expr>, <expr><name>initthread</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr><block>{<expr>"_codecs"</expr>, <expr><name>init_codecs</name></expr>}</block></expr>,
	<expr><block>{<expr>"_csv"</expr>, <expr><name>init_csv</name></expr>}</block></expr>,
	<expr><block>{<expr>"_locale"</expr>, <expr><name>init_locale</name></expr>}</block></expr>,
	<expr><block>{<expr>"_random"</expr>, <expr><name>init_random</name></expr>}</block></expr>,
	<expr><block>{<expr>"_sre"</expr>, <expr><name>init_sre</name></expr>}</block></expr>,
	<expr><block>{<expr>"_symtable"</expr>, <expr><name>init_symtable</name></expr>}</block></expr>,
	<expr><block>{<expr>"_weakref"</expr>, <expr><name>init_weakref</name></expr>}</block></expr>,
	<expr><block>{<expr>"array"</expr>, <expr><name>initarray</name></expr>}</block></expr>,
	<expr><block>{<expr>"binascii"</expr>, <expr><name>initbinascii</name></expr>}</block></expr>,
	<expr><block>{<expr>"cPickle"</expr>, <expr><name>initcPickle</name></expr>}</block></expr>,
	<expr><block>{<expr>"cStringIO"</expr>, <expr><name>initcStringIO</name></expr>}</block></expr>,
	<expr><block>{<expr>"_collections"</expr>, <expr><name>init_collections</name></expr>}</block></expr>,
	<expr><block>{<expr>"cmath"</expr>, <expr><name>initcmath</name></expr>}</block></expr>,
	<expr><block>{<expr>"datetime"</expr>, <expr><name>initdatetime</name></expr>}</block></expr>,
	<expr><block>{<expr>"dl"</expr>, <expr><name>initdl</name></expr>}</block></expr>,
	<expr><block>{<expr>"errno"</expr>, <expr><name>initerrno</name></expr>}</block></expr>,
	<expr><block>{<expr>"fcntl"</expr>, <expr><name>initfcntl</name></expr>}</block></expr>,
	<expr><block>{<expr>"_fileio"</expr>, <expr><name>init_fileio</name></expr>}</block></expr>,
	<expr><block>{<expr>"_functools"</expr>, <expr><name>init_functools</name></expr>}</block></expr>,
	<expr><block>{<expr>"_heapq"</expr>, <expr><name>init_heapq</name></expr>}</block></expr>,
	<expr><block>{<expr>"imageop"</expr>, <expr><name>initimageop</name></expr>}</block></expr>,
	<expr><block>{<expr>"itertools"</expr>, <expr><name>inititertools</name></expr>}</block></expr>,
	<expr><block>{<expr>"math"</expr>, <expr><name>initmath</name></expr>}</block></expr>,
	<expr><block>{<expr>"_md5"</expr>, <expr><name>init_md5</name></expr>}</block></expr>,
	<expr><block>{<expr>"operator"</expr>, <expr><name>initoperator</name></expr>}</block></expr>,
	<expr><block>{<expr>"_sha"</expr>, <expr><name>init_sha</name></expr>}</block></expr>,
	<expr><block>{<expr>"_sha256"</expr>, <expr><name>init_sha256</name></expr>}</block></expr>,
	<expr><block>{<expr>"_sha512"</expr>, <expr><name>init_sha512</name></expr>}</block></expr>,
	<expr><block>{<expr>"strop"</expr>, <expr><name>initstrop</name></expr>}</block></expr>,
	<expr><block>{<expr>"_struct"</expr>, <expr><name>init_struct</name></expr>}</block></expr>,
	<expr><block>{<expr>"termios"</expr>, <expr><name>inittermios</name></expr>}</block></expr>,
	<expr><block>{<expr>"time"</expr>, <expr><name>inittime</name></expr>}</block></expr>,
	<expr><block>{<expr>"timing"</expr>, <expr><name>inittiming</name></expr>}</block></expr>,
	<expr><block>{<expr>"xxsubtype"</expr>, <expr><name>initxxsubtype</name></expr>}</block></expr>,
	<expr><block>{<expr>"zipimport"</expr>, <expr><name>initzipimport</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<name>HAVE_DYNAMIC_LOADING</name></expr></cpp:if>
	<expr><block>{<expr>"_curses"</expr>, <expr><name>init_curses</name></expr>}</block></expr>,
	<expr><block>{<expr>"_curses_panel"</expr>, <expr><name>init_curses_panel</name></expr>}</block></expr>,
	<expr><block>{<expr>"_hotshot"</expr>, <expr><name>init_hotshot</name></expr>}</block></expr>,
	<expr><block>{<expr>"_testcapi"</expr>, <expr><name>init_testcapi</name></expr>}</block></expr>,
	<expr><block>{<expr>"bsddb185"</expr>, <expr><name>initbsddb185</name></expr>}</block></expr>,
	<expr><block>{<expr>"bz2"</expr>, <expr><name>initbz2</name></expr>}</block></expr>,
	<expr><block>{<expr>"fpectl"</expr>, <expr><name>initfpectl</name></expr>}</block></expr>,
	<expr><block>{<expr>"fpetest"</expr>, <expr><name>initfpetest</name></expr>}</block></expr>,
	<expr><block>{<expr>"parser"</expr>, <expr><name>initparser</name></expr>}</block></expr>,
	<expr><block>{<expr>"pwd"</expr>, <expr><name>initpwd</name></expr>}</block></expr>,
	<expr><block>{<expr>"unicodedata"</expr>, <expr><name>initunicodedata</name></expr>}</block></expr>,
	<expr><block>{<expr>"zlib"</expr>, <expr><name>initzlib</name></expr>}</block></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_SOCKET</name></cpp:ifdef>
	<expr><block>{<expr>"_socket"</expr>, <expr><name>init_socket</name></expr>}</block></expr>,
	<expr><block>{<expr>"select"</expr>, <expr><name>initselect</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/* -- ADDMODULE MARKER 2 -- */</comment>

	<comment type="block">/* This module "lives in" with marshal.c */</comment>
	<expr><block>{<expr>"marshal"</expr>, <expr><name>PyMarshal_Init</name></expr>}</block></expr>,

	<comment type="block">/* This lives it with import.c */</comment>
	<expr><block>{<expr>"imp"</expr>, <expr><name>initimp</name></expr>}</block></expr>,

	<comment type="block">/* These entries are here for sys.builtin_module_names */</comment>
	<expr><block>{<expr>"__main__"</expr>, <expr><name>NULL</name></expr>}</block></expr>,
	<expr><block>{<expr>"__builtin__"</expr>, <expr><name>NULL</name></expr>}</block></expr>,
	<expr><block>{<expr>"sys"</expr>, <expr><name>NULL</name></expr>}</block></expr>,
	<expr><block>{<expr>"exceptions"</expr>, <expr><name>NULL</name></expr>}</block></expr>,

	<comment type="block">/* This lives in gcmodule.c */</comment>
	<expr><block>{<expr>"gc"</expr>, <expr><name>initgc</name></expr>}</block></expr>,

	<comment type="block">/* Sentinel */</comment>
	<expr><block>{<expr>0</expr>, <expr>0</expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
