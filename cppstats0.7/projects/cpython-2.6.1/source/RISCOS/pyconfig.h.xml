<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/RISCOS/pyconfig.h"><comment type="block">/* RISCOS/pyconfig.h: Python configuration for RISC OS  */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>Py_PYCONFIG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Py_PYCONFIG_H</name></cpp:macro></cpp:define>

<comment type="block">/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_ALL_SOURCE</name></cpp:ifndef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_ALL_SOURCE</name></cpp:undef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Define if type char is unsigned and you are not using gcc.  */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>__CHAR_UNSIGNED__</name></cpp:ifndef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__CHAR_UNSIGNED__</name></cpp:undef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Define to empty if the keyword does not work.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>const</name></cpp:undef>

<comment type="block">/* Define to `int' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>gid_t</name></cpp:undef>

<comment type="block">/* Define if your struct tm has tm_zone.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TM_ZONE</name></cpp:undef>

<comment type="block">/* Define if you don't have tm_zone but do have the external array
   tzname.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TZNAME</name></cpp:undef>

<comment type="block">/* Define to `int' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>mode_t</name></cpp:undef>

<comment type="block">/* Define to `long' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>off_t</name></cpp:undef>

<comment type="block">/* Define to `int' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>pid_t</name></cpp:undef>

<comment type="block">/* Define if the system does not provide POSIX.1 features except
   with this defined.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_POSIX_1_SOURCE</name></cpp:undef>

<comment type="block">/* Define if you need to in order for stat and other things to work.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_POSIX_SOURCE</name></cpp:undef>

<comment type="block">/* Define as the return type of signal handlers (int or void).  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RETSIGTYPE</name></cpp:macro> <cpp:value>void</cpp:value></cpp:define>

<comment type="block">/* Define to `unsigned' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>size_t</name></cpp:undef>

<comment type="block">/* Define if you have the ANSI C header files.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STDC_HEADERS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you can safely include both &lt;sys/time.h&gt; and &lt;time.h&gt;.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>TIME_WITH_SYS_TIME</name></cpp:undef>

<comment type="block">/* Define if your &lt;sys/time.h&gt; declares struct tm.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TM_IN_SYS_TIME</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to `int' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>uid_t</name></cpp:undef>

<comment type="block">/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:undef>

<comment type="block">/* Define for AIX if your compiler is a genuine IBM xlC/xlC_r
   and you want support for AIX C++ shared extension modules. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>AIX_GENUINE_CPLUSPLUS</name></cpp:undef>

<comment type="block">/* Define if your compiler botches static forward declarations
   (as it does on SCI ODT 3.0) */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>BAD_STATIC_FORWARD</name></cpp:undef>

<comment type="block">/* Define this if you have BeOS threads */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>BEOS_THREADS</name></cpp:undef>

<comment type="block">/* Define if you have the Mach cthreads package */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C_THREADS</name></cpp:undef>

<comment type="block">/* Define to `long' if &lt;time.h&gt; doesn't define.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>clock_t</name></cpp:undef>

<comment type="block">/* Defined on Solaris to see additional function prototypes. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__EXTENSIONS__</name></cpp:undef>

<comment type="block">/* This must be set to 64 on some systems to enable large file support */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_FILE_OFFSET_BITS</name></cpp:undef>

<comment type="block">/* Define if getpgrp() must be called as getpgrp(0). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GETPGRP_HAVE_ARG</name></cpp:undef>

<comment type="block">/* Define if gettimeofday() does not have second (timezone) argument
   This is the case on Motorola V4 (R40V4.2) */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GETTIMEOFDAY_NO_TZ</name></cpp:undef>

<comment type="block">/* Define this if your time.h defines altzone */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_ALTZONE</name></cpp:undef>

<comment type="block">/* Define if --enable-ipv6 is specified */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ENABLE_IPV6</name></cpp:undef>

<comment type="block">/* Define if sockaddr has sa_len member */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SOCKADDR_SA_LEN</name></cpp:undef>

<comment type="block">/* struct addrinfo (netdb.h) */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_ADDRINFO</name></cpp:undef>

<comment type="block">/* struct sockaddr_storage (sys/socket.h) */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SOCKADDR_STORAGE</name></cpp:undef>

<comment type="block">/* Defined when any dynamic module loading is enabled */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DYNAMIC_LOADING</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this if you have flockfile(), getc_unlocked(), and funlockfile() */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETC_UNLOCKED</name></cpp:undef>

<comment type="block">/* Define this if you have some version of gethostbyname_r() */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETHOSTBYNAME_R</name></cpp:undef>

<comment type="block">/* Define this if you have the 3-arg version of gethostbyname_r() */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETHOSTBYNAME_R_3_ARG</name></cpp:undef>

<comment type="block">/* Define this if you have the 5-arg version of gethostbyname_r() */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETHOSTBYNAME_R_5_ARG</name></cpp:undef>

<comment type="block">/* Define this if you have the 6-arg version of gethostbyname_r() */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETHOSTBYNAME_R_6_ARG</name></cpp:undef>

<comment type="block">/* Defined to enable large file support when an off_t is bigger than a long
   and long long is available and at least as big as an off_t. You may need
   to add some flags for configuration and compilation to enable this mode.
   E.g, for Solaris 2.7:
   CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64" OPT="-O2 $CFLAGS" \
 configure
*/</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LARGEFILE_SUPPORT</name></cpp:undef>

<comment type="block">/* Define this if you have the type long long */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LONG_LONG</name></cpp:macro></cpp:define>

<comment type="block">/* Define if your compiler supports function prototypes */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_PROTOTYPES</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have GNU PTH threads */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PTH</name></cpp:undef>

<comment type="block">/* Define if you have readline 4.2 */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_RL_COMPLETION_MATCHES</name></cpp:undef>

<comment type="block">/* Define if your compiler supports variable length function prototypes
   (e.g. void fprintf(FILE *, char *, ...);) *and* &lt;stdarg.h&gt; */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDARG_PROTOTYPES</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this if you have the type uintptr_t */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_UINTPTR_T</name></cpp:undef>

<comment type="block">/* Define if you have a useable wchar_t type defined in wchar.h; useable
   means wchar_t must be 16-bit unsigned type. (see
   Include/unicodeobject.h). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_USABLE_WCHAR_T</name></cpp:undef>

<comment type="block">/* Define if the compiler provides a wchar.h header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_WCHAR_H</name></cpp:undef>

<comment type="block">/* This must be defined on some systems to enable large file support */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_LARGEFILE_SOURCE</name></cpp:undef>

<comment type="block">/* Define if you want to have a Unicode type. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Py_USING_UNICODE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define as the integral type used for Unicode representation. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PY_UNICODE_TYPE</name></cpp:macro> <cpp:value>unsigned short</cpp:value></cpp:define>

<comment type="block">/* Define as the size of the unicode type. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Py_UNICODE_SIZE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<comment type="block">/* Define if nice() returns success/failure instead of the new priority. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_BROKEN_NICE</name></cpp:undef>

<comment type="block">/* Define if you have POSIX threads */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_POSIX_THREADS</name></cpp:undef>

<comment type="block">/* Define if you want to build an interpreter with many run-time checks  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>Py_DEBUG</name></cpp:undef>

<comment type="block">/* Define to force use of thread-safe errno, h_errno, and other functions */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_REENTRANT</name></cpp:undef>

<comment type="block">/* Define if setpgrp() must be called as setpgrp(0, 0). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SETPGRP_HAVE_ARG</name></cpp:undef>

<comment type="block">/* Define to empty if the keyword does not work.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>signed</name></cpp:undef>

<comment type="block">/* Define if i&gt;&gt;j for signed int i does not extend the sign bit
   when i &lt; 0
*/</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SIGNED_RIGHT_SHIFT_ZERO_FILLS</name></cpp:undef>

<comment type="block">/* The number of bytes in an off_t. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_OFF_T</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a time_t. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_TIME_T</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a pthread_t. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SIZEOF_PTHREAD_T</name></cpp:undef>

<comment type="block">/* Define to `int' if &lt;sys/types.h&gt; doesn't define.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>socklen_t</name></cpp:macro> <cpp:value>int</cpp:value></cpp:define>

<comment type="block">/* Define if  you can safely include both &lt;sys/select.h&gt; and &lt;sys/time.h&gt;
   (which you can't on SCO ODT 3.0). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SYS_SELECT_WITH_SYS_TIME</name></cpp:undef>

<comment type="block">/* Define if a va_list is an array of some kind */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VA_LIST_IS_ARRAY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to empty if the keyword does not work.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>volatile</name></cpp:undef>

<comment type="block">/* Define if you want SIGFPE handled (see Include/pyfpe.h). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WANT_SIGFPE_HANDLER</name></cpp:undef>

<comment type="block">/* Define if you want wctype.h functions to be used instead of the
   one supplied by Python itself. (see Include/unicodectype.h). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WANT_WCTYPE_FUNCTIONS</name></cpp:undef>

<comment type="block">/* Define if you want documentation strings in extension modules */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WITH_DOC_STRINGS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you want to use the new-style (Openstep, Rhapsody, MacOS)
   dynamic linker (dyld) instead of the old-style (NextStep) dynamic
   linker (rld). Dyld is necessary to support frameworks. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WITH_DYLD</name></cpp:undef>

<comment type="block">/* Define if you want to compile in Python-specific mallocs */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WITH_PYMALLOC</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you want to produce an OpenStep/Rhapsody framework
   (shared library plus accessory files). */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WITH_NEXT_FRAMEWORK</name></cpp:undef>

<comment type="block">/* Define if you want to use MacPython modules on MacOSX in unix-Python */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>USE_TOOLBOX_OBJECT_GLUE</name></cpp:undef>

<comment type="block">/* Define if you want to compile in rudimentary thread support */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WITH_THREAD</name></cpp:undef>

<comment type="block">/* The number of bytes in a char.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_CHAR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a double.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_DOUBLE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a float.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_FLOAT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a fpos_t.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SIZEOF_FPOS_T</name></cpp:undef>

<comment type="block">/* The number of bytes in a int.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_INT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a long.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_LONG</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a long long.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_LONG_LONG</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a short.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_SHORT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a uintptr_t.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SIZEOF_UINTPTR_T</name></cpp:undef>

<comment type="block">/* The number of bytes in a void *.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF_VOID_P</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<comment type="block">/* The number of bytes in a wchar_t.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SIZEOF_WCHAR_T</name></cpp:undef>

<comment type="block">/* Define if you have the _getpty function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE__GETPTY</name></cpp:undef>

<comment type="block">/* Define if you have the alarm function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_ALARM</name></cpp:undef>

<comment type="block">/* Define if you have the chown function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CHOWN</name></cpp:undef>

<comment type="block">/* Define if you have the clock function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CLOCK</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the confstr function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CONFSTR</name></cpp:undef>

<comment type="block">/* Define if you have the ctermid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CTERMID</name></cpp:undef>

<comment type="block">/* Define if you have the ctermid_r function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CTERMID_R</name></cpp:undef>

<comment type="block">/* Define if you have the dlopen function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DLOPEN</name></cpp:undef>

<comment type="block">/* Define if you have the dup2 function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DUP2</name></cpp:undef>

<comment type="block">/* Define if you have the execv function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_EXECV</name></cpp:undef>

<comment type="block">/* Define if you have the fdatasync function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FDATASYNC</name></cpp:undef>

<comment type="block">/* Define if you have the flock function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FLOCK</name></cpp:undef>

<comment type="block">/* Define if you have the fork function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FORK</name></cpp:undef>

<comment type="block">/* Define if you have the forkpty function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FORKPTY</name></cpp:undef>

<comment type="block">/* Define if you have the fpathconf function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FPATHCONF</name></cpp:undef>

<comment type="block">/* Define if you have the fseek64 function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FSEEK64</name></cpp:undef>

<comment type="block">/* Define if you have the fseeko function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FSEEKO</name></cpp:undef>

<comment type="block">/* Define if you have the fstatvfs function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FSTATVFS</name></cpp:undef>

<comment type="block">/* Define if you have the fsync function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FSYNC</name></cpp:undef>

<comment type="block">/* Define if you have the ftell64 function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FTELL64</name></cpp:undef>

<comment type="block">/* Define if you have the ftello function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FTELLO</name></cpp:undef>

<comment type="block">/* Define if you have the ftime function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FTIME</name></cpp:undef>

<comment type="block">/* Define if you have the ftruncate function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FTRUNCATE</name></cpp:undef>

<comment type="block">/* Define if you have the gai_strerror function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GAI_STRERROR</name></cpp:undef>

<comment type="block">/* Define if you have the getaddrinfo function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETADDRINFO</name></cpp:undef>

<comment type="block">/* Define if you have the getcwd function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETCWD</name></cpp:undef>

<comment type="block">/* Define if you have the getgroups function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETGROUPS</name></cpp:undef>

<comment type="block">/* Define if you have the gethostbyname function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETHOSTBYNAME</name></cpp:undef>

<comment type="block">/* Define if you have the getlogin function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETLOGIN</name></cpp:undef>

<comment type="block">/* Define if you have the getnameinfo function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETNAMEINFO</name></cpp:undef>

<comment type="block">/* Define if you have the getpeername function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_GETPEERNAME</name></cpp:macro></cpp:define>

<comment type="block">/* Define if you have the getpgid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPGID</name></cpp:undef>

<comment type="block">/* Define if you have the getpgrp function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPGRP</name></cpp:undef>

<comment type="block">/* Define if you have the getpid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPID</name></cpp:undef>

<comment type="block">/* Define if you have the getpriority function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPRIORITY</name></cpp:undef>

<comment type="block">/* Define if you have the getpwent function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETPWENT</name></cpp:undef>

<comment type="block">/* Define if you have the gettimeofday function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETTIMEOFDAY</name></cpp:undef>

<comment type="block">/* Define if you have the getwd function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GETWD</name></cpp:undef>

<comment type="block">/* Define if you have the hstrerror function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_HSTRERROR</name></cpp:undef>

<comment type="block">/* Define if you have the hypot function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_HYPOT</name></cpp:macro></cpp:define>

<comment type="block">/* Define if you have the inet_pton function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_INET_PTON</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the kill function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_KILL</name></cpp:undef>

<comment type="block">/* Define if you have the link function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LINK</name></cpp:undef>

<comment type="block">/* Define if you have the lstat function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LSTAT</name></cpp:undef>

<comment type="block">/* Define if you have the memmove function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MEMMOVE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the mkfifo function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MKFIFO</name></cpp:undef>

<comment type="block">/* Define if you have the mktime function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MKTIME</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the mremap function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_MREMAP</name></cpp:undef>

<comment type="block">/* Define if you have the nice function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_NICE</name></cpp:undef>

<comment type="block">/* Define if you have the openpty function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_OPENPTY</name></cpp:undef>

<comment type="block">/* Define if you have the pathconf function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PATHCONF</name></cpp:undef>

<comment type="block">/* Define if you have the pause function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PAUSE</name></cpp:undef>

<comment type="block">/* Define if you have the plock function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PLOCK</name></cpp:undef>

<comment type="block">/* Define if you have the poll function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_POLL</name></cpp:undef>

<comment type="block">/* Define if you have the pthread_init function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PTHREAD_INIT</name></cpp:undef>

<comment type="block">/* Define if you have the putenv function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PUTENV</name></cpp:undef>

<comment type="block">/* Define if you have the readlink function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_READLINK</name></cpp:undef>

<comment type="block">/* Define if you have the select function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SELECT</name></cpp:undef>

<comment type="block">/* Define if you have the setegid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETEGID</name></cpp:undef>

<comment type="block">/* Define if you have the seteuid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETEUID</name></cpp:undef>

<comment type="block">/* Define if you have the setgid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETGID</name></cpp:undef>

<comment type="block">/* Define if you have the setlocale function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SETLOCALE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the setpgid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETPGID</name></cpp:undef>

<comment type="block">/* Define if you have the setpgrp function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETPGRP</name></cpp:undef>

<comment type="block">/* Define if you have the setregid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETREGID</name></cpp:undef>

<comment type="block">/* Define if you have the setreuid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETREUID</name></cpp:undef>

<comment type="block">/* Define if you have the setsid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETSID</name></cpp:undef>

<comment type="block">/* Define if you have the setuid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETUID</name></cpp:undef>

<comment type="block">/* Define if you have the setvbuf function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SETVBUF</name></cpp:undef>

<comment type="block">/* Define if you have the sigaction function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SIGACTION</name></cpp:undef>

<comment type="block">/* Define if you have the siginterrupt function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SIGINTERRUPT</name></cpp:undef>

<comment type="block">/* Define if you have the sigrelse function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SIGRELSE</name></cpp:undef>

<comment type="block">/* Define if you have the snprintf function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SNPRINTF</name></cpp:undef>

<comment type="block">/* Define if you have the statvfs function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_STATVFS</name></cpp:undef>

<comment type="block">/* Define if you have the strdup function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRDUP</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the strerror function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRERROR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the strftime function.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRFTIME</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the symlink function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYMLINK</name></cpp:undef>

<comment type="block">/* Define if you have the sysconf function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYSCONF</name></cpp:undef>

<comment type="block">/* Define if you have the tcgetpgrp function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TCGETPGRP</name></cpp:undef>

<comment type="block">/* Define if you have the tcsetpgrp function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TCSETPGRP</name></cpp:undef>

<comment type="block">/* Define if you have the tempnam function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TEMPNAM</name></cpp:undef>

<comment type="block">/* Define if you have the timegm function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TIMEGM</name></cpp:undef>

<comment type="block">/* Define if you have the times function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TIMES</name></cpp:undef>

<comment type="block">/* Define if you have the tmpfile function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TMPFILE</name></cpp:undef>

<comment type="block">/* Define if you have the tmpnam function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TMPNAM</name></cpp:undef>

<comment type="block">/* Define if you have the tmpnam_r function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TMPNAM_R</name></cpp:undef>

<comment type="block">/* Define if you have the truncate function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TRUNCATE</name></cpp:undef>

<comment type="block">/* Define if you have the uname function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_UNAME</name></cpp:undef>

<comment type="block">/* Define if you have the waitpid function.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_WAITPID</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;conio.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_CONIO_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;db.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DB_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;db1/ndbm.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DB1_NDBM_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;db_185.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DB_185_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;direct.h&gt; header file. */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DIRECT_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;dirent.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DIRENT_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;dlfcn.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_DLFCN_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;errno.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_ERRNO_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the &lt;fcntl.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_FCNTL_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;gdbm/ndbm.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_GDBM_NDBM_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;io.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_IO_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;langinfo.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LANGINFO_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;libutil.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LIBUTIL_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;ncurses.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_NCURSES_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;ndbm.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_NDBM_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;ndir.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_NDIR_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;netpacket/packet.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_NETPACKET_PACKET_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;poll.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_POLL_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;process.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PROCESS_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;pthread.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PTHREAD_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;pty.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_PTY_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;signal.h&gt; header file.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SIGNAL_H</name></cpp:macro></cpp:define>

<comment type="block">/* Define if you have the &lt;sys/audioio.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_AUDIOIO_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/dir.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_DIR_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/file.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_FILE_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/lock.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_LOCK_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/modem.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_MODEM_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/ndir.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_NDIR_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/param.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_PARAM_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/poll.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_POLL_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/resource.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_RESOURCE_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/select.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_SELECT_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/socket.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_SOCKET_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/stat.h&gt; header file.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_STAT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the &lt;sys/time.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_TIME_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/times.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_TIMES_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/types.h&gt; header file.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_TYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the &lt;sys/un.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_UN_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/utsname.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_UTSNAME_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;sys/wait.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_SYS_WAIT_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;termios.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_TERMIOS_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;thread.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_THREAD_H</name></cpp:undef>

<comment type="block">/* Define if you have the &lt;unistd.h&gt; header file.  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_UNISTD_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define if you have the &lt;utime.h&gt; header file.  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_UTIME_H</name></cpp:undef>

<comment type="block">/* Define if you have the dl library (-ldl).  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LIBDL</name></cpp:undef>

<comment type="block">/* Define if you have the dld library (-ldld).  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LIBDLD</name></cpp:undef>

<comment type="block">/* Define if you have the ieee library (-lieee).  */</comment>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>HAVE_LIBIEEE</name></cpp:undef>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__CYGWIN__</name></cpp:ifdef>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_DL_IMPORT</name></cpp:ifdef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DL_IMPORT</name><parameter_list>(<param><type><name>RTYPE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>__declspec(dllimport) RTYPE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DL_EXPORT</name><parameter_list>(<param><type><name>RTYPE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>__declspec(dllexport) RTYPE</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DL_IMPORT</name><parameter_list>(<param><type><name>RTYPE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>__declspec(dllexport) RTYPE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DL_EXPORT</name><parameter_list>(<param><type><name>RTYPE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>__declspec(dllexport) RTYPE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Define the macros needed if on a UnixWare 7.x system. */</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__USLC__</name></expr></argument>)</argument_list></call> &amp;&amp; <call><name>defined</name><argument_list>(<argument><expr><name>__SCO_VERSION__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRICT_SYSV_CURSES</name></cpp:macro></cpp:define> <comment type="block">/* Don't use ncurses extensions */</comment>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DONT_HAVE_FSTAT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DONT_HAVE_STAT</name></cpp:macro>  <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLATFORM</name></cpp:macro> <cpp:value>"riscos"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* Py_PYCONFIG_H */</comment>
</unit>
