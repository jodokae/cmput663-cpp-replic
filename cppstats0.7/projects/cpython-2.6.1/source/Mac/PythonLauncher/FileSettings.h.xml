<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/cpython-2.6.1/source/Mac/PythonLauncher/FileSettings.h"><comment type="line">//</comment>
<comment type="line">//  FileSettings.h</comment>
<comment type="line">//  PythonLauncher</comment>
<comment type="line">//</comment>
<comment type="line">//  Created by Jack Jansen on Sun Jul 21 2002.</comment>
<comment type="line">//  Copyright (c) 2002 __MyCompanyName__. All rights reserved.</comment>
<comment type="line">//</comment>

<cpp:error>#<cpp:directive>import</cpp:directive> &lt;Foundation/Foundation.h&gt;</cpp:error>

@<expr_stmt><expr><name>protocol</name> <name>FileSettingsSource</name>
- (<name>NSString</name> *) <name>interpreter</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>honourhashbang</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>debug</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>verbose</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>inspect</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>optimize</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>nosite</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>tabs</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>NSString</name> *) <name>others</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>BOOL</name>) <name>with_terminal</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>NSString</name> *) <name>scriptargs</name></expr>;</expr_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>FileSettings</name> : <name>NSObject</name> &lt;<name>FileSettingsSource</name>&gt;
<block>{
    <expr><name>NSString</name> *<name>interpreter</name></expr>;	<comment type="line">// The pathname of the interpreter to use</comment>
    <expr><name>NSArray</name> *<name>interpreters</name></expr>;	<comment type="line">// List of known interpreters</comment>
    <expr><name>BOOL</name> <name>honourhashbang</name></expr>;	<comment type="line">// #! line overrides interpreter</comment>
    <expr><name>BOOL</name> <name>debug</name></expr>;			<comment type="line">// -d option: debug parser</comment>
    <expr><name>BOOL</name> <name>verbose</name></expr>;		<comment type="line">// -v option: verbose import</comment>
    <expr><name>BOOL</name> <name>inspect</name></expr>;		<comment type="line">// -i option: interactive mode after script</comment>
    <expr><name>BOOL</name> <name>optimize</name></expr>;		<comment type="line">// -O option: optimize bytecode</comment>
    <expr><name>BOOL</name> <name>nosite</name></expr>;		<comment type="line">// -S option: don't import site.py</comment>
    <expr><name>BOOL</name> <name>tabs</name></expr>;			<comment type="line">// -t option: warn about inconsistent tabs</comment>
    <expr><name>NSString</name> *<name>others</name></expr>;		<comment type="line">// other options</comment>
    <expr><name>NSString</name> *<name>scriptargs</name></expr>;	<comment type="line">// script arguments (not for preferences)</comment>
    <expr><name>BOOL</name> <name>with_terminal</name></expr>;		<comment type="line">// Run in terminal window</comment>

    <expr><name>FileSettings</name> *<name>origsource</name></expr>;
    <expr><name>NSString</name> *<name>prefskey</name></expr>;
}</block>

+ (<name>id</name>)<name>getDefaultsForFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>
<expr_stmt><expr>+ (<name>id</name>)<name>getFactorySettingsForFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>
<expr_stmt><expr>+ (<name>id</name>)<name>newSettingsForFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>

<comment type="line">//- (id)init;</comment>
<expr_stmt><expr>- (<name>id</name>)<name>initForFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>id</name>)<name>initForFSDefaultFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>id</name>)<name>initForDefaultFileType</name>: (<name>NSString</name> *)<name>filetype</name></expr>;</expr_stmt>
<comment type="line">//- (id)initWithFileSettings: (FileSettings *)source;</comment>

<expr_stmt><expr>- (<name>void</name>)<name>updateFromSource</name>: (<name>id</name> &lt;<name>FileSettingsSource</name>&gt;)<name>source</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>NSString</name> *)<name>commandLineForScript</name>: (<name>NSString</name> *)<name>script</name></expr>;</expr_stmt>

<comment type="line">//- (void)applyFactorySettingsForFileType: (NSString *)filetype;</comment>
<comment type="line">//- (void)saveDefaults;</comment>
<comment type="line">//- (void)applyUserDefaults: (NSString *)filetype;</comment>
<expr_stmt><expr>- (<name>void</name>)<name>applyValuesFromDict</name>: (<name>NSDictionary</name> *)<name>dict</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>void</name>)<name>reset</name></expr>;</expr_stmt>
<expr_stmt><expr>- (<name>NSArray</name> *) <name>interpreters</name></expr>;</expr_stmt>

@<macro><name>end</name></macro>
</unit>
