<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/libsvn_ra_serf/commit.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_uri.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;expat.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;serf.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_ra.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_dav.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_xml.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libsvn_ra/ra_loader.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_delta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_base64.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_version.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_dep_compat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ra_serf.h"</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>activity_url_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>checkout_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>resource_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name></type> <name>progress</name></decl>;</decl_stmt>
}</block></struct></type> <name>checkout_context_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>revprop_table</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_commit_callback2_t</name></type> <name>callback</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>callback_baton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>lock_tokens</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>keep_locks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>activity_url_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>baseline</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>checked_in_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>baseline_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>deleted_entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>copied_entries</name></decl>;</decl_stmt>
}</block></struct></type> <name>commit_context_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>commit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>changed_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>removed_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name></type> <name>progress</name></decl>;</decl_stmt>
}</block></struct></type> <name>proppatch_context_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lock_token</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>lock_token_hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>keep_locks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name></type> <name>progress</name></decl>;</decl_stmt>
}</block></struct></type> <name>delete_context_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>dir_context_t</name> <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>commit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>checkout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>checked_in_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>ref_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>added</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>dir_context_t</name> *</type><name>parent_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copy_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>copy_revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>changed_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>removed_props</name></decl>;</decl_stmt>
}</block></struct></type> <name>dir_context_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>commit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>added</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>parent_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>checkout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copy_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>copy_revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_file_t</name> *</type><name>svndiff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>result_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>changed_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>removed_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>put_url</name></decl>;</decl_stmt>
}</block></struct></type> <name>file_context_t</name>;</typedef>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>return_response_err</name><parameter_list>(<param><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>ctx</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>server_error</name>.<name>error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_REQUEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"%s of '%s': %d %s"</expr></argument>,
<argument><expr><name><name>handler</name>-&gt;<name>method</name></name></expr></argument>, <argument><expr><name><name>handler</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>status</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>reason</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECKOUT_HEADER</name></cpp:macro> <cpp:value>"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;D:checkout xmlns:D=\"DAV:\"&gt;&lt;D:activity-set&gt;&lt;D:href&gt;"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECKOUT_TRAILER</name></cpp:macro> <cpp:value>"&lt;/D:href&gt;&lt;/D:activity-set&gt;&lt;/D:checkout&gt;"</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>serf_bucket_t</name> *</type>
<name>create_checkout_body</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>body_bkt</name></decl>, *<decl><type ref="prev"/><name>tmp_bkt</name></decl>;</decl_stmt>
<expr_stmt><expr><name>body_bkt</name> = <call><name>serf_bucket_aggregate_create</name><argument_list>(<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>CHECKOUT_HEADER</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>CHECKOUT_HEADER</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>activity_url</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>activity_url_len</name></name></expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>CHECKOUT_TRAILER</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>CHECKOUT_TRAILER</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>body_bkt</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>handle_checkout</name><parameter_list>(<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>ctx</name> <init>= <expr><name>handler_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<expr_stmt><expr><name>status</name> = <call><name>svn_ra_serf__handle_status_only</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>, <argument><expr>&amp;<name><name>ctx</name>-&gt;<name>progress</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>progress</name>.<name>done</name></name> &amp;&amp; <name><name>ctx</name>-&gt;<name>progress</name>.<name>status</name></name> == 201</expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>hdrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uri_t</name></type> <name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>location</name></decl>;</decl_stmt>
<expr_stmt><expr><name>hdrs</name> = <call><name>serf_bucket_response_get_headers</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>location</name> = <call><name>serf_bucket_headers_get</name><argument_list>(<argument><expr><name>hdrs</name></expr></argument>, <argument><expr>"Location"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>location</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>apr_uri_parse</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr>&amp;<name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>resource_url</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>uri</name>.<name>path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>status</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type>
<name>relative_dir_path</name><parameter_list>(<param><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rel_path</name> <init>= <expr>""</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_array_header_t</name> *</type><name>components</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir_ptr</name> <init>= <expr><name>dir</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><name>components</name> = <call><name>apr_array_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>const <name>char</name> *</expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>dir_ptr</name> = <name>dir</name></expr>;</init> <condition><expr><name>dir_ptr</name></expr>;</condition> <incr><expr><name>dir_ptr</name> = <name><name>dir_ptr</name>-&gt;<name>parent_dir</name></name></expr></incr>)
<expr_stmt><expr><call><name>APR_ARRAY_PUSH</name><argument_list>(<argument><expr><name>components</name></expr></argument>, <argument><expr>const <name>char</name> *</expr></argument>)</argument_list></call> = <name><name>dir_ptr</name>-&gt;<name>name</name></name></expr>;</expr_stmt></for>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; <name><name>components</name>-&gt;<name>nelts</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<expr_stmt><expr><name>rel_path</name> = <call><name>svn_path_join</name><argument_list>(<argument><expr><name>rel_path</name></expr></argument>,
<argument><expr><call><name>APR_ARRAY_IDX</name><argument_list>(<argument><expr><name>components</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr>const <name>char</name> *</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<return>return <expr><name>rel_path</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type>
<name>relative_file_path</name><parameter_list>(<param><decl><type><name>file_context_t</name> *</type><name>f</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dir_path</name> <init>= <expr><call><name>relative_dir_path</name><argument_list>(<argument><expr><name><name>f</name>-&gt;<name>parent_dir</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>svn_path_join</name><argument_list>(<argument><expr><name>dir_path</name></expr></argument>, <argument><expr><name><name>f</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>checkout_dir</name><parameter_list>(<param><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>checkout_context_t</name> *</type><name>checkout_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>dir</name>-&gt;<name>checkout</name></name></expr>)</condition><then> <block>{
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>dir</name>-&gt;<name>parent_dir</name></name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>copied_entries</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>parent_dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name></name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name><name>dir</name>-&gt;<name>checkout</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>pool</name></name> = <name><name>dir</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>activity_url</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>activity_url_len</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url_len</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>parent_dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><call><name>svn_path_basename</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>copied_entries</name></name></expr></argument>,
<argument><expr><call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>, <argument><expr>(<name>void</name>*)1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>checkout_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>checkout_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>checkout_ctx</name>-&gt;<name>pool</name></name> = <name><name>dir</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>checkout_ctx</name>-&gt;<name>activity_url</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>checkout_ctx</name>-&gt;<name>activity_url_len</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url_len</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name><name>dir</name>-&gt;<name>parent_dir</name></name> &amp;&amp; !<name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>baseline</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>checkout_ctx</name>-&gt;<name>checkout_url</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>baseline_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>baseline</name></name> = <name>checkout_ctx</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name><name>checkout_ctx</name>-&gt;<name>checkout_url</name></name> = <name><name>dir</name>-&gt;<name>checked_in_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name></name> = <name>checkout_ctx</name></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_checkout_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name>checkout_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_type</name></name> = "text/xml"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>handle_checkout</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>checkout_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "CHECKOUT"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>checkout_ctx</name>-&gt;<name>checkout_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>checkout_ctx</name>-&gt;<name>progress</name>.<name>done</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_CONFLICT</name></expr>)</condition><then>
<expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><name>err</name></expr></argument>, <argument><expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Directory '%s' is out of date; try updating"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><call><name>relative_dir_path</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<return>return <expr><name>err</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>checkout_ctx</name>-&gt;<name>progress</name>.<name>status</name></name> != 201</expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>checkout_ctx</name>-&gt;<name>progress</name>.<name>status</name></name> == 404</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PATH_NOT_FOUND</name></expr></argument>,
<argument><expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>,
<argument><expr>&amp;<name><name>checkout_ctx</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Path '%s' not present"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PATH_NOT_FOUND</name></expr></argument>,
<argument><expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>,
<argument><expr>&amp;<name><name>checkout_ctx</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Directory '%s' is out of date; try updating"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><call><name>relative_dir_path</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>get_version_url</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>checked_in_url</name></decl></param>,
<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>relpath</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>parent_vsn_url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>root_checkout</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>session</name>-&gt;<name>wc_callbacks</name>-&gt;<name>get_wc_prop</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>current_version</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>session</name>-&gt;<name>wc_callbacks</name>-&gt;<name>get_wc_prop</name></name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>wc_callback_baton</name></name></expr></argument>,
<argument><expr><name>relpath</name></expr></argument>,
<argument><expr><name>SVN_RA_SERF__WC_CHECKED_IN_URL</name></expr></argument>,
<argument><expr>&amp;<name>current_version</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>current_version</name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>checked_in_url</name> = <name><name>current_version</name>-&gt;<name>data</name></name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
}</block></then></if>
<if>if <condition>(<expr><name>parent_vsn_url</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>root_checkout</name> = <name>parent_vsn_url</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>svn_ra_serf__propfind_context_t</name> *</type><name>propfind_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl>;</decl_stmt>
<expr_stmt><expr><name>props</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>propfind_ctx</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__deliver_props</name><argument_list>(<argument><expr>&amp;<name>propfind_ctx</name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name>session</name></expr></argument>,
<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>,
<argument><expr><name>base_revision</name></expr></argument>, <argument><expr>"0"</expr></argument>,
<argument><expr><name>checked_in_props</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__wait_for_props</name><argument_list>(<argument><expr><name>propfind_ctx</name></expr></argument>, <argument><expr><name>session</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>root_checkout</name> =
<call><name>svn_ra_serf__get_ver_prop</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>,
<argument><expr><name>base_revision</name></expr></argument>, <argument><expr>"DAV:"</expr></argument>, <argument><expr>"checked-in"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>root_checkout</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PATH_NOT_FOUND</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Path '%s' not present"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></else></if>
<expr_stmt><expr>*<name>checked_in_url</name> = <call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name>root_checkout</name></expr></argument>, <argument><expr><name>relpath</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>checkout_file</name><parameter_list>(<param><decl><type><name>file_context_t</name> *</type><name>file</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>file</name>-&gt;<name>parent_dir</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl>;</decl_stmt>
<expr_stmt><expr><name>dir</name> = <name><name>file</name>-&gt;<name>parent_dir</name></name></expr>;</expr_stmt>
<while>while <condition>(<expr><name>dir</name> &amp;&amp; ! <call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>commit</name>-&gt;<name>copied_entries</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{
<expr_stmt><expr><name>dir</name> = <name><name>dir</name>-&gt;<name>parent_dir</name></name></expr>;</expr_stmt>
}</block></while>
<if>if <condition>(<expr><name>dir</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff_path</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name></name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name><name>file</name>-&gt;<name>checkout</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>pool</name></name> = <name><name>file</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>activity_url</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>activity_url_len</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>activity_url_len</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>diff_path</name> = <call><name>svn_path_is_child</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><name>diff_path</name></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name></name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name><name>file</name>-&gt;<name>checkout</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>pool</name></name> = <name><name>file</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>activity_url</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>activity_url_len</name></name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>activity_url_len</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>get_version_url</name><argument_list>(<argument><expr>&amp;(<name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>checkout_url</name></name>)</expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>base_revision</name></name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_checkout_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name><name>file</name>-&gt;<name>checkout</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_type</name></name> = "text/xml"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>handle_checkout</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name><name>file</name>-&gt;<name>checkout</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "CHECKOUT"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>checkout_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>progress</name>.<name>done</name></name></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_CONFLICT</name></expr>)</condition><then>
<expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><name>err</name></expr></argument>, <argument><expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"File '%s' is out of date; try updating"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><call><name>relative_file_path</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<return>return <expr><name>err</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>progress</name>.<name>status</name></name> != 201</expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>progress</name>.<name>status</name></name> == 404</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PATH_NOT_FOUND</name></expr></argument>,
<argument><expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>,
<argument><expr>&amp;<name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Path '%s' not present"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PATH_NOT_FOUND</name></expr></argument>,
<argument><expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>,
<argument><expr>&amp;<name><name>file</name>-&gt;<name>checkout</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"File '%s' is out of date; try updating"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><call><name>relative_file_path</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>proppatch_walker</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ns</name></decl></param>, <param><decl><type><name>apr_ssize_t</name></type> <name>ns_len</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>apr_ssize_t</name></type> <name>name_len</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>val</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>body_bkt</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>tmp_bkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>binary_prop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>prop_name</name></decl>;</decl_stmt>
<if>if <condition>(<expr><call><name>svn_xml_is_xml_safe</name><argument_list>(<argument><expr><name><name>val</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name><name>val</name>-&gt;<name>len</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>binary_prop</name> = <name>FALSE</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>binary_prop</name> = <name>TRUE</name></expr>;</expr_stmt>
}</block></else></if>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>SVN_DAV_PROP_NS_SVN</name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then>
<expr_stmt><expr><name>prop_name</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>"S:"</expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>SVN_DAV_PROP_NS_CUSTOM</name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then>
<expr_stmt><expr><name>prop_name</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>"C:"</expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
<expr_stmt><expr><name>name_len</name> = <call><name>strlen</name><argument_list>(<argument><expr><name>prop_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>alloc</name> = <name><name>body_bkt</name>-&gt;<name>allocator</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>prop_name</name></expr></argument>, <argument><expr><name>name_len</name></expr></argument>, <argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>binary_prop</name> == <name>TRUE</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>tmp_bkt</name> =
<call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>" V:encoding=\"base64\""</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>" V:encoding=\"base64\""</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>binary_prop</name> == <name>TRUE</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>val</name> = <call><name>svn_base64_encode_string</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>svn_stringbuf_t</name> *</type><name>prop_buf</name> <init>= <expr><call><name>svn_stringbuf_create</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>svn_xml_escape_cdata_string</name><argument_list>(<argument><expr>&amp;<name>prop_buf</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>val</name> = <call><name>svn_string_create_from_buf</name><argument_list>(<argument><expr><name>prop_buf</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name><name>val</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name><name>val</name>-&gt;<name>len</name></name></expr></argument>, <argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;/"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;/"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>prop_name</name></expr></argument>, <argument><expr><name>name_len</name></expr></argument>, <argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>setup_proppatch_headers</name><parameter_list>(<param><decl><type><name>serf_bucket_t</name> *</type><name>headers</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>proppatch</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>proppatch</name>-&gt;<name>name</name></name> &amp;&amp; <name><name>proppatch</name>-&gt;<name>commit</name>-&gt;<name>lock_tokens</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token</name></decl>;</decl_stmt>
<expr_stmt><expr><name>token</name> = <call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>proppatch</name>-&gt;<name>commit</name>-&gt;<name>lock_tokens</name></name></expr></argument>, <argument><expr><name><name>proppatch</name>-&gt;<name>name</name></name></expr></argument>,
<argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>token</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token_header</name></decl>;</decl_stmt>
<expr_stmt><expr><name>token_header</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>"(&lt;"</expr></argument>, <argument><expr><name>token</name></expr></argument>, <argument><expr>"&gt;)"</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"If"</expr></argument>, <argument><expr><name>token_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
}</block></then></if>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROPPATCH_HEADER</name></cpp:macro> <cpp:value>"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;""&lt;D:propertyupdate xmlns:D=\"DAV:\" ""xmlns:V=\"" SVN_DAV_PROP_NS_DAV "\" ""xmlns:C=\"" SVN_DAV_PROP_NS_CUSTOM "\" ""xmlns:S=\"" SVN_DAV_PROP_NS_SVN "\"&gt;"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROPPATCH_TRAILER</name></cpp:macro> <cpp:value>"&lt;/D:propertyupdate&gt;"</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>serf_bucket_t</name> *</type>
<name>create_proppatch_body</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>body_bkt</name></decl>, *<decl><type ref="prev"/><name>tmp_bkt</name></decl>;</decl_stmt>
<expr_stmt><expr><name>body_bkt</name> = <call><name>serf_bucket_aggregate_create</name><argument_list>(<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>PROPPATCH_HEADER</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>PROPPATCH_HEADER</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>changed_props</name></name></expr></argument>)</argument_list></call> &gt; 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;D:set&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;D:set&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;D:prop&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;D:prop&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__walk_all_props</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>changed_props</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>SVN_INVALID_REVNUM</name></expr></argument>,
<argument><expr><name>proppatch_walker</name></expr></argument>, <argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;/D:prop&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;/D:prop&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;/D:set&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;/D:set&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr><call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>removed_props</name></name></expr></argument>)</argument_list></call> &gt; 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;D:remove&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;D:remove&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;D:prop&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;D:prop&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__walk_all_props</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>removed_props</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>SVN_INVALID_REVNUM</name></expr></argument>,
<argument><expr><name>proppatch_walker</name></expr></argument>, <argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;/D:prop&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;/D:prop&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr>"&lt;/D:remove&gt;"</expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>"&lt;/D:remove&gt;"</expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name>tmp_bkt</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>PROPPATCH_TRAILER</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>PROPPATCH_TRAILER</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body_bkt</name></expr></argument>, <argument><expr><name>tmp_bkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>body_bkt</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name>*</type>
<name>proppatch_resource</name><parameter_list>(<param><decl><type><name>proppatch_context_t</name> *</type><name>proppatch</name></decl></param>,
<param><decl><type><name>commit_context_t</name> *</type><name>commit</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "PROPPATCH"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>proppatch</name>-&gt;<name>path</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate</name></name> = <name>setup_proppatch_headers</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate_baton</name></name> = <name>proppatch</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_proppatch_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name>proppatch</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_multistatus_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = &amp;<name><name>proppatch</name>-&gt;<name>progress</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>proppatch</name>-&gt;<name>progress</name>.<name>done</name></name></expr></argument>,
<argument><expr><name><name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>proppatch</name>-&gt;<name>progress</name>.<name>status</name></name> != 207 ||
<name><name>proppatch</name>-&gt;<name>progress</name>.<name>server_error</name>.<name>error</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>err</name> = <call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>, <argument><expr>&amp;<name><name>proppatch</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_PROPPATCH_FAILED</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"At least one property change failed; repository is unchanged"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>serf_bucket_t</name> *</type>
<name>create_put_body</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>offset</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>apr_file_flush</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>APR_VERSION_AT_LEAST</name><argument_list>(<argument><expr>1, 3, 0</expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>apr_file_buffer_set</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name>offset</name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_file_seek</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>, <argument><expr><name>APR_SET</name></expr></argument>, <argument><expr>&amp;<name>offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>serf_bucket_file_create</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>, <argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>serf_bucket_t</name> *</type>
<name>create_empty_put_body</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<return>return <expr><call><name>SERF_BUCKET_SIMPLE_STRING</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>setup_put_headers</name><parameter_list>(<param><decl><type><name>serf_bucket_t</name> *</type><name>headers</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>base_checksum</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>SVN_DAV_BASE_FULLTEXT_MD5_HEADER</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>base_checksum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>result_checksum</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>SVN_DAV_RESULT_FULLTEXT_MD5_HEADER</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>result_checksum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>lock_tokens</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token</name></decl>;</decl_stmt>
<expr_stmt><expr><name>token</name> = <call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>lock_tokens</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>name</name></name></expr></argument>,
<argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>token</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token_header</name></decl>;</decl_stmt>
<expr_stmt><expr><name>token_header</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>"(&lt;"</expr></argument>, <argument><expr><name>token</name></expr></argument>, <argument><expr>"&gt;)"</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"If"</expr></argument>, <argument><expr><name>token_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
}</block></then></if>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>setup_copy_file_headers</name><parameter_list>(<param><decl><type><name>serf_bucket_t</name> *</type><name>headers</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>file</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uri_t</name></type> <name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>absolute_uri</name></decl>;</decl_stmt>
<expr_stmt><expr><name>uri</name> = <name><name>file</name>-&gt;<name>commit</name>-&gt;<name>session</name>-&gt;<name>repos_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>uri</name>.<name>path</name></name> = (<name>char</name>*)<name><name>file</name>-&gt;<name>put_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>absolute_uri</name> = <call><name>apr_uri_unparse</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>&amp;<name>uri</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Destination"</expr></argument>, <argument><expr><name>absolute_uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Depth"</expr></argument>, <argument><expr>"0"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Overwrite"</expr></argument>, <argument><expr>"T"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>setup_copy_dir_headers</name><parameter_list>(<param><decl><type><name>serf_bucket_t</name> *</type><name>headers</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uri_t</name></type> <name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>absolute_uri</name></decl>;</decl_stmt>
<expr_stmt><expr><name>uri</name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name>-&gt;<name>repos_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>uri</name>.<name>path</name></name> =
(<name>char</name>*)<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>parent_dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><call><name>svn_path_basename</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>absolute_uri</name> = <call><name>apr_uri_unparse</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>&amp;<name>uri</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Destination"</expr></argument>, <argument><expr><name>absolute_uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Depth"</expr></argument>, <argument><expr>"infinity"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"Overwrite"</expr></argument>, <argument><expr>"T"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name></name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name><name>dir</name>-&gt;<name>checkout</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>pool</name></name> = <name><name>dir</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>activity_url</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>activity_url_len</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>activity_url_len</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>uri</name>.<name>path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>copied_entries</name></name></expr></argument>,
<argument><expr><call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>,
<argument><expr>(<name>void</name>*)1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>setup_delete_headers</name><parameter_list>(<param><decl><type><name>serf_bucket_t</name> *</type><name>headers</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>delete_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>SVN_DAV_VERSION_NAME_HEADER</name></expr></argument>,
<argument><expr><call><name>apr_ltoa</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>revision</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>lock_token_hash</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>lock_token</name></name> = <call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>lock_token_hash</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>lock_token</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token_header</name></decl>;</decl_stmt>
<expr_stmt><expr><name>token_header</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr>"&lt;"</expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>path</name></name></expr></argument>, <argument><expr>"&gt; (&lt;"</expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>lock_token</name></name></expr></argument>, <argument><expr>"&gt;)"</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr>"If"</expr></argument>, <argument><expr><name>token_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>keep_locks</name></name></expr>)</condition><then>
<expr_stmt><expr><call><name>serf_bucket_headers_set</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>SVN_DAV_OPTIONS_HEADER</name></expr></argument>,
<argument><expr><name>SVN_DAV_OPTION_KEEP_LOCKS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></then></if>
}</block></then></if>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XML_HEADER</name></cpp:macro> <cpp:value>"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;"</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>serf_bucket_t</name> *</type>
<name>create_delete_body</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>serf_bucket_alloc_t</name> *</type><name>alloc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>delete_context_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>body</name></decl>, *<decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>
<expr_stmt><expr><name>body</name> = <call><name>serf_bucket_aggregate_create</name><argument_list>(<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> = <call><name>SERF_BUCKET_SIMPLE_STRING_LEN</name><argument_list>(<argument><expr><name>XML_HEADER</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>XML_HEADER</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>,
<argument><expr><name>alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>serf_bucket_aggregate_append</name><argument_list>(<argument><expr><name>body</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__merge_lock_token_list</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>lock_token_hash</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>body</name></expr></argument>, <argument><expr><name>alloc</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>body</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>svndiff_stream_write</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>,
<param><decl><type><name>apr_size_t</name> *</type><name>len</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>ctx</name> <init>= <expr><name>file_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<expr_stmt><expr><name>status</name> = <call><name>apr_file_write_full</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr>*<name>len</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_wrap_apr</name><argument_list>(<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Failed writing updated file"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>open_root</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>root_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>ctx</name> <init>= <expr><name>edit_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__options_context_t</name> *</type><name>opt_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__propfind_context_t</name> *</type><name>propfind_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>mkact_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>proppatch_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vcc_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_index_t</name> *</type><name>hi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>uuid</name></name> = <call><name>svn_uuid_generate</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__create_options_req</name><argument_list>(<argument><expr>&amp;<name>opt_ctx</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_ra_serf__context_run_wait</name><argument_list>(
<argument><expr><call><name>svn_ra_serf__get_options_done_ptr</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>svn_ra_serf__get_options_error</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call> ||
<call><name>svn_ra_serf__get_options_parser_error</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__get_options_error</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__get_options_parser_error</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>activity_str</name> = <call><name>svn_ra_serf__options_get_activity_collection</name><argument_list>(<argument><expr><name>opt_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>activity_str</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_OPTIONS_REQ_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"The OPTIONS response did not include the "
"requested activity-collection-set value"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>activity_url</name></name> = <call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name>activity_str</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>uuid</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>activity_url_len</name></name> = <call><name>strlen</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>activity_url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "MKACTIVITY"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>ctx</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>mkact_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>mkact_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>mkact_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>mkact_ctx</name>-&gt;<name>done</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>mkact_ctx</name>-&gt;<name>status</name></name> != 201</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_REQUEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"%s of '%s': %d %s (%s://%s)"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>handler</name>-&gt;<name>method</name></name></expr></argument>, <argument><expr><name><name>handler</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name><name>mkact_ctx</name>-&gt;<name>status</name></name></expr></argument>, <argument><expr><name><name>mkact_ctx</name>-&gt;<name>reason</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>scheme</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>hostinfo</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__discover_root</name><argument_list>(<argument><expr>&amp;<name>vcc_url</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>props</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>propfind_ctx</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__deliver_props</name><argument_list>(<argument><expr>&amp;<name>propfind_ctx</name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>conn</name></name></expr></argument>, <argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name>SVN_INVALID_REVNUM</name></expr></argument>, <argument><expr>"0"</expr></argument>,
<argument><expr><name>checked_in_props</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__wait_for_props</name><argument_list>(<argument><expr><name>propfind_ctx</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>baseline_url</name></name> = <call><name>svn_ra_serf__get_ver_prop</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>vcc_url</name></expr></argument>,
<argument><expr><name>SVN_INVALID_REVNUM</name></expr></argument>,
<argument><expr>"DAV:"</expr></argument>, <argument><expr>"checked-in"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name><name>ctx</name>-&gt;<name>baseline_url</name></name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_OPTIONS_REQ_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"The OPTIONS response did not include the "
"requested checked-in value"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>dir</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>dir_pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>dir</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>pool</name></name> = <name>dir_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>commit</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>base_revision</name></name> = <name>base_revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>name</name></name> = ""</expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>get_version_url</name><argument_list>(<argument><expr>&amp;<name><name>dir</name>-&gt;<name>checked_in_url</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>base_revision</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>checked_in_url</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>checked_in_url</name></name> = <name><name>dir</name>-&gt;<name>checked_in_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_dir</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>proppatch_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>proppatch_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name> = <name>dir_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>commit</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>baseline</name>-&gt;<name>resource_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>hi</name> = <call><name>apr_hash_first</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>revprop_table</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>hi</name></expr>;</condition>
<incr><expr><name>hi</name> = <call><name>apr_hash_next</name><argument_list>(<argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> *</type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_string_t</name> *</type><name>value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ns</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>apr_hash_this</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr>&amp;<name>key</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> = <name>key</name></expr>;</expr_stmt>
<expr_stmt><expr><name>value</name> = <name>val</name></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_SVN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_CUSTOM</name></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>changed_props</name></name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>proppatch_resource</name><argument_list>(<argument><expr><name>proppatch_ctx</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>commit</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>*<name>root_baton</name> = <name>dir</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>delete_entry</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name> <init>= <expr><name>parent_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>delete_context_t</name> *</type><name>delete_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_dir</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>delete_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>delete_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delete_ctx</name>-&gt;<name>path</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delete_ctx</name>-&gt;<name>revision</name></name> = <name>revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delete_ctx</name>-&gt;<name>lock_token_hash</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>lock_tokens</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delete_ctx</name>-&gt;<name>keep_locks</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>keep_locks</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = &amp;<name><name>delete_ctx</name>-&gt;<name>progress</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate</name></name> = <name>setup_delete_headers</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate_baton</name></name> = <name>delete_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "DELETE"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><call><name>svn_path_basename</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>delete_ctx</name>-&gt;<name>progress</name>.<name>done</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> &amp;&amp;
(<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_BAD_LOCK_TOKEN</name> ||
<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_NO_LOCK_TOKEN</name> ||
<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_LOCK_OWNER_MISMATCH</name> ||
<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_PATH_ALREADY_LOCKED</name>)</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_delete_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name>delete_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_type</name></name> = "text/xml"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delete_ctx</name>-&gt;<name>progress</name>.<name>done</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>delete_ctx</name>-&gt;<name>progress</name>.<name>done</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<return>return <expr><name>err</name></expr>;</return>
}</block></then></if></else></if>
<if>if <condition>(<expr><name><name>delete_ctx</name>-&gt;<name>progress</name>.<name>status</name></name> != 204 &amp;&amp;
<name><name>delete_ctx</name>-&gt;<name>progress</name>.<name>status</name></name> != 404</expr>)</condition><then> <block>{
<return>return <expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>, <argument><expr>&amp;<name><name>delete_ctx</name>-&gt;<name>progress</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>deleted_entries</name></name></expr></argument>,
<argument><expr><call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>,
<argument><expr>(<name>void</name>*)1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>add_directory</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>child_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>parent</name> <init>= <expr><name>parent_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>add_dir_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_dir</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dir</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>dir_pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>dir</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>pool</name></name> = <name>dir_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>parent_dir</name></name> = <name>parent</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>commit</name></name> = <name><name>parent</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>added</name></name> = <name>TRUE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>base_revision</name></name> = <name>SVN_INVALID_REVNUM</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>copy_revision</name></name> = <name>copyfrom_revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>copy_path</name></name> = <name>copyfrom_path</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>name</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>checked_in_url</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>parent</name>-&gt;<name>commit</name>-&gt;<name>checked_in_url</name></name></expr></argument>,
<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>add_dir_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>add_dir_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>add_dir_ctx</name></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name><name>dir</name>-&gt;<name>copy_path</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "MKCOL"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>parent</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><call><name>svn_path_basename</name><argument_list>(<argument><expr><name>path</name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>apr_uri_t</name></type> <name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vcc_url</name></decl>, *<decl><type ref="prev"/><name>rel_copy_path</name></decl>, *<decl><type ref="prev"/><name>basecoll_url</name></decl>, *<decl><type ref="prev"/><name>req_url</name></decl>;</decl_stmt>
<expr_stmt><expr><name>props</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> = <call><name>apr_uri_parse</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>copy_path</name></name></expr></argument>, <argument><expr>&amp;<name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_MALFORMED_DATA</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unable to parse URL '%s'"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>copy_path</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__discover_root</name><argument_list>(<argument><expr>&amp;<name>vcc_url</name></expr></argument>, <argument><expr>&amp;<name>rel_copy_path</name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>uri</name>.<name>path</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__retrieve_props</name><argument_list>(<argument><expr><name>props</name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>copy_revision</name></name></expr></argument>, <argument><expr>"0"</expr></argument>,
<argument><expr><name>baseline_props</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>basecoll_url</name> = <call><name>svn_ra_serf__get_ver_prop</name><argument_list>(<argument><expr><name>props</name></expr></argument>,
<argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>copy_revision</name></name></expr></argument>,
<argument><expr>"DAV:"</expr></argument>, <argument><expr>"baseline-collection"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>basecoll_url</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_OPTIONS_REQ_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"The OPTIONS response did not include the "
"requested baseline-collection value"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>req_url</name> = <call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name>basecoll_url</name></expr></argument>, <argument><expr><name>rel_copy_path</name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "COPY"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name>req_url</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate</name></name> = <name>setup_copy_dir_headers</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate_baton</name></name> = <name>dir</name></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>add_dir_ctx</name>-&gt;<name>done</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>add_dir_ctx</name>-&gt;<name>status</name></name> != 201 &amp;&amp;
<name><name>add_dir_ctx</name>-&gt;<name>status</name></name> != 204</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><name><name>add_dir_ctx</name>-&gt;<name>server_error</name>.<name>error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_REQUEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Adding a directory failed: %s on %s (%d)"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>handler</name>-&gt;<name>method</name></name></expr></argument>, <argument><expr><name><name>handler</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name><name>add_dir_ctx</name>-&gt;<name>status</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr>*<name>child_baton</name> = <name>dir</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>open_directory</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>child_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>parent</name> <init>= <expr><name>parent_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name></decl>;</decl_stmt>
<expr_stmt><expr><name>dir</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>dir_pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>dir</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>pool</name></name> = <name>dir_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>parent_dir</name></name> = <name>parent</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>commit</name></name> = <name><name>parent</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>added</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>base_revision</name></name> = <name>base_revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>name</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>get_version_url</name><argument_list>(<argument><expr>&amp;<name><name>dir</name>-&gt;<name>checked_in_url</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>base_revision</name></name></expr></argument>,
<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>checked_in_url</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>*<name>child_baton</name> = <name>dir</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>change_dir_prop</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>dir_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name> <init>= <expr><name>dir_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ns</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_dir</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_SVN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_CUSTOM</name></expr>;</expr_stmt>
}</block></else></if>
<if>if <condition>(<expr><name>value</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>value</name> = <call><name>svn_string_dup</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>changed_props</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>value</name> = <call><name>svn_string_create</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>removed_props</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>close_directory</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>dir_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name> <init>= <expr><name>dir_baton</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>changed_props</name></name></expr></argument>)</argument_list></call> ||
<call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>removed_props</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>proppatch_ctx</name></decl>;</decl_stmt>
<expr_stmt><expr><name>proppatch_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>proppatch_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>commit</name></name> = <name><name>dir</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>name</name></name> = <name><name>dir</name>-&gt;<name>name</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name> = <name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>changed_props</name></name> = <name><name>dir</name>-&gt;<name>changed_props</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>removed_props</name></name> = <name><name>dir</name>-&gt;<name>removed_props</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>proppatch_resource</name><argument_list>(<argument><expr><name>proppatch_ctx</name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>commit</name></name></expr></argument>, <argument><expr><name><name>dir</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>absent_directory</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>0</expr></cpp:if>
dir_context_t *ctx = parent_baton;
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>add_file</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copy_path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copy_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>file_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>file_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>dir</name> <init>= <expr><name>parent_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>new_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>deleted_parent</name> <init>= <expr><name>path</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_dir</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>new_file</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>file_pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>new_file</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>pool</name></name> = <name>file_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dir</name>-&gt;<name>ref_count</name></name>++</expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>parent_dir</name></name> = <name>dir</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>commit</name></name> = <name><name>dir</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>name</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>added</name></name> = <name>TRUE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>base_revision</name></name> = <name>SVN_INVALID_REVNUM</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>copy_path</name></name> = <name>copy_path</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>copy_revision</name></name> = <name>copy_revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while <condition>(<expr><name>deleted_parent</name> &amp;&amp; <name><name>deleted_parent</name><index>[<expr>0</expr>]</index></name> != '\0'</expr>)</condition> <block>{
<if>if <condition>(<expr><call><name>apr_hash_get</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>commit</name>-&gt;<name>deleted_entries</name></name></expr></argument>,
<argument><expr><name>deleted_parent</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<break>break;</break>
}</block></then></if>
<expr_stmt><expr><name>deleted_parent</name> = <call><name>svn_path_dirname</name><argument_list>(<argument><expr><name>deleted_parent</name></expr></argument>, <argument><expr><name>file_pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></while><empty_stmt>;</empty_stmt>
<if>if <condition>(<expr>! ((<name><name>dir</name>-&gt;<name>added</name></name> &amp;&amp; !<name><name>dir</name>-&gt;<name>copy_path</name></name>) ||
(<name>deleted_parent</name> &amp;&amp; <name><name>deleted_parent</name><index>[<expr>0</expr>]</index></name> != '\0'))</expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>head_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>new_file</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>new_file</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "HEAD"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>commit</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>,
<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>head_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>head_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>head_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>head_ctx</name>-&gt;<name>done</name></name></expr></argument>,
<argument><expr><name><name>new_file</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>head_ctx</name>-&gt;<name>status</name></name> != 404</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_ALREADY_EXISTS</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"File '%s' already exists"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>put_url</name></name> =
<call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name><name>dir</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr></argument>,
<argument><expr><call><name>svn_path_basename</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>*<name>file_baton</name> = <name>new_file</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>open_file</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>file_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>file_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_context_t</name> *</type><name>ctx</name> <init>= <expr><name>parent_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>new_file</name></decl>;</decl_stmt>
<expr_stmt><expr><name>new_file</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>file_pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>new_file</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>pool</name></name> = <name>file_pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>ref_count</name></name>++</expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>parent_dir</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>commit</name></name> = <name><name>ctx</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>name</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>added</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>base_revision</name></name> = <name>base_revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>new_file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>checkout_file</name><argument_list>(<argument><expr><name>new_file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_file</name>-&gt;<name>put_url</name></name> = <name><name>new_file</name>-&gt;<name>checkout</name>-&gt;<name>resource_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>file_baton</name> = <name>new_file</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>apply_textdelta</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_checksum</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler_baton</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>ctx</name> <init>= <expr><name>file_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_ra_callbacks2_t</name> *</type><name>wc_callbacks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>wc_callback_baton</name></decl>;</decl_stmt>
<expr_stmt><expr><name>wc_callbacks</name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name>-&gt;<name>wc_callbacks</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>wc_callback_baton</name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name>-&gt;<name>wc_callback_baton</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>wc_callbacks</name>-&gt;<name>open_tmp_file</name></name><argument_list>(<argument><expr>&amp;<name><name>ctx</name>-&gt;<name>svndiff</name></name></expr></argument>,
<argument><expr><name>wc_callback_baton</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>stream</name></name> = <call><name>svn_stream_create</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_stream_set_write</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>stream</name></name></expr></argument>, <argument><expr><name>svndiff_stream_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_txdelta_to_svndiff</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>stream</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>, <argument><expr><name>handler</name></expr></argument>, <argument><expr><name>handler_baton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>base_checksum</name></name> = <name>base_checksum</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>change_file_prop</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>file</name> <init>= <expr><name>file_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ns</name></decl>;</decl_stmt>
<expr_stmt><expr><name>name</name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_SVN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_CUSTOM</name></expr>;</expr_stmt>
}</block></else></if>
<if>if <condition>(<expr><name>value</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>value</name> = <call><name>svn_string_dup</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>changed_props</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>put_url</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>value</name> = <call><name>svn_string_create</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>file</name>-&gt;<name>removed_props</name></name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>put_url</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>file</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>close_file</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>text_checksum</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>file_context_t</name> *</type><name>ctx</name> <init>= <expr><name>file_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>put_empty_file</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>result_checksum</name></name> = <name>text_checksum</name></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>copy_path</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>copy_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uri_t</name></type> <name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vcc_url</name></decl>, *<decl><type ref="prev"/><name>rel_copy_path</name></decl>, *<decl><type ref="prev"/><name>basecoll_url</name></decl>, *<decl><type ref="prev"/><name>req_url</name></decl>;</decl_stmt>
<expr_stmt><expr><name>props</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> = <call><name>apr_uri_parse</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>copy_path</name></name></expr></argument>, <argument><expr>&amp;<name>uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_MALFORMED_DATA</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unable to parse URL '%s'"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>copy_path</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__discover_root</name><argument_list>(<argument><expr>&amp;<name>vcc_url</name></expr></argument>, <argument><expr>&amp;<name>rel_copy_path</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>uri</name>.<name>path</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__retrieve_props</name><argument_list>(<argument><expr><name>props</name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>copy_revision</name></name></expr></argument>, <argument><expr>"0"</expr></argument>,
<argument><expr><name>baseline_props</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>basecoll_url</name> = <call><name>svn_ra_serf__get_ver_prop</name><argument_list>(<argument><expr><name>props</name></expr></argument>,
<argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>copy_revision</name></name></expr></argument>,
<argument><expr>"DAV:"</expr></argument>, <argument><expr>"baseline-collection"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>basecoll_url</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_OPTIONS_REQ_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"The OPTIONS response did not include the "
"requested baseline-collection value"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>req_url</name> = <call><name>svn_path_url_add_component</name><argument_list>(<argument><expr><name>basecoll_url</name></expr></argument>, <argument><expr><name>rel_copy_path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "COPY"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name>req_url</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>copy_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>copy_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>copy_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate</name></name> = <name>setup_copy_file_headers</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate_baton</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>copy_ctx</name>-&gt;<name>done</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>copy_ctx</name>-&gt;<name>status</name></name> != 201 &amp;&amp; <name><name>copy_ctx</name>-&gt;<name>status</name></name> != 204</expr>)</condition><then> <block>{
<return>return <expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>, <argument><expr><name>copy_ctx</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block></then></if>
<if>if <condition>(<expr>(!<name><name>ctx</name>-&gt;<name>stream</name></name>) &amp;&amp; <name><name>ctx</name>-&gt;<name>added</name></name> &amp;&amp; (!<name><name>ctx</name>-&gt;<name>copy_path</name></name>)</expr>)</condition><then>
<expr_stmt><expr><name>put_empty_file</name> = <name>TRUE</name></expr>;</expr_stmt></then></if>
<if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>stream</name></name> || <name>put_empty_file</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>put_ctx</name></decl>;</decl_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "PUT"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>put_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>put_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>put_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>put_ctx</name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>put_empty_file</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_empty_put_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_type</name></name> = "text/plain"</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate</name></name> = <name>create_put_body</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_delegate_baton</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>body_type</name></name> = "application/vnd.svn-svndiff"</expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate</name></name> = <name>setup_put_headers</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>header_delegate_baton</name></name> = <name>ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>put_ctx</name>-&gt;<name>done</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>put_ctx</name>-&gt;<name>status</name></name> != 204 &amp;&amp; <name><name>put_ctx</name>-&gt;<name>status</name></name> != 201</expr>)</condition><then> <block>{
<return>return <expr><call><name>return_response_err</name><argument_list>(<argument><expr><name>handler</name></expr></argument>, <argument><expr><name>put_ctx</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block></then></if>
<if>if <condition>(<expr><call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>changed_props</name></name></expr></argument>)</argument_list></call> ||
<call><name>apr_hash_count</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>removed_props</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>proppatch</name></decl>;</decl_stmt>
<expr_stmt><expr><name>proppatch</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>proppatch</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>pool</name></name> = <name><name>ctx</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>name</name></name> = <name><name>ctx</name>-&gt;<name>name</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>put_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>commit</name></name> = <name><name>ctx</name>-&gt;<name>commit</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>changed_props</name></name> = <name><name>ctx</name>-&gt;<name>changed_props</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch</name>-&gt;<name>removed_props</name></name> = <name><name>ctx</name>-&gt;<name>removed_props</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>proppatch_resource</name><argument_list>(<argument><expr><name>proppatch</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>commit</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>absent_file</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>0</expr></cpp:if>
dir_context_t *ctx = parent_baton;
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>close_edit</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>ctx</name> <init>= <expr><name>edit_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__merge_context_t</name> *</type><name>merge_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>delete_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name> *</type><name>merge_done</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__merge_create_req</name><argument_list>(<argument><expr>&amp;<name>merge_ctx</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>activity_url</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>activity_url_len</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>lock_tokens</name></name></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>keep_locks</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>merge_done</name> = <call><name>svn_ra_serf__merge_get_done_ptr</name><argument_list>(<argument><expr><name>merge_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr><name>merge_done</name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>svn_ra_serf__merge_get_status</name><argument_list>(<argument><expr><name>merge_ctx</name></expr></argument>)</argument_list></call> != 200</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>ctx</name>-&gt;<name>callback</name></name><argument_list>(<argument><expr><call><name>svn_ra_serf__merge_get_commit_info</name><argument_list>(<argument><expr><name>merge_ctx</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>ctx</name>-&gt;<name>callback_baton</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "DELETE"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>ctx</name>-&gt;<name>conn</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>ctx</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>delete_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>delete_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>delete_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>delete_ctx</name>-&gt;<name>done</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>delete_ctx</name>-&gt;<name>status</name></name> != 204</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>abort_edit</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>ctx</name> <init>= <expr><name>edit_baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__handler_t</name> *</type><name>handler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__simple_request_context_t</name> *</type><name>delete_ctx</name></decl>;</decl_stmt>
<if>if <condition>(<expr>! <name><name>ctx</name>-&gt;<name>activity_url</name></name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><name>handler</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>handler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>method</name></name> = "DELETE"</expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>path</name></name> = <name><name>ctx</name>-&gt;<name>activity_url</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>conn</name></name> = <name><name>ctx</name>-&gt;<name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>session</name></name> = <name><name>ctx</name>-&gt;<name>session</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>delete_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>delete_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_handler</name></name> = <name>svn_ra_serf__handle_status_only</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>handler</name>-&gt;<name>response_baton</name></name> = <name>delete_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__request_create</name><argument_list>(<argument><expr><name>handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__context_run_wait</name><argument_list>(<argument><expr>&amp;<name><name>delete_ctx</name>-&gt;<name>done</name></name></expr></argument>, <argument><expr><name><name>ctx</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>delete_ctx</name>-&gt;<name>status</name></name> != 204 &amp;&amp;
<name><name>delete_ctx</name>-&gt;<name>status</name></name> != 403 &amp;&amp;
<name><name>delete_ctx</name>-&gt;<name>status</name></name> != 404</expr>
)</condition><then> <block>{
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_ra_serf__get_commit_editor</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>ra_session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>ret_editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>revprop_table</name></decl></param>,
<param><decl><type><name>svn_commit_callback2_t</name></type> <name>callback</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>lock_tokens</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>keep_locks</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name> <init>= <expr><name><name>ra_session</name>-&gt;<name>priv</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_delta_editor_t</name> *</type><name>editor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_index_t</name> *</type><name>hi</name></decl>;</decl_stmt>
<expr_stmt><expr><name>ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>session</name></name> = <name>session</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>conn</name></name> = <name><name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>revprop_table</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>hi</name> = <call><name>apr_hash_first</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>revprop_table</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>hi</name></expr>;</condition> <incr><expr><name>hi</name> = <call><name>apr_hash_next</name><argument_list>(<argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> *</type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_ssize_t</name></type> <name>klen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>val</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>apr_hash_this</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr>&amp;<name>key</name></expr></argument>, <argument><expr>&amp;<name>klen</name></expr></argument>, <argument><expr>&amp;<name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>revprop_table</name></name></expr></argument>, <argument><expr><call><name>apr_pstrdup</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>klen</name></expr></argument>,
<argument><expr><call><name>svn_string_dup</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>callback</name></name> = <name>callback</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>callback_baton</name></name> = <name>callback_baton</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>lock_tokens</name></name> = <name>lock_tokens</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>keep_locks</name></name> = <name>keep_locks</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>deleted_entries</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name>-&gt;<name>copied_entries</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>editor</name> = <call><name>svn_delta_default_editor</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>open_root</name></name> = <name>open_root</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>delete_entry</name></name> = <name>delete_entry</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>add_directory</name></name> = <name>add_directory</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>open_directory</name></name> = <name>open_directory</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>change_dir_prop</name></name> = <name>change_dir_prop</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>close_directory</name></name> = <name>close_directory</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>absent_directory</name></name> = <name>absent_directory</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>add_file</name></name> = <name>add_file</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>open_file</name></name> = <name>open_file</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>apply_textdelta</name></name> = <name>apply_textdelta</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>change_file_prop</name></name> = <name>change_file_prop</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>close_file</name></name> = <name>close_file</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>absent_file</name></name> = <name>absent_file</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>close_edit</name></name> = <name>close_edit</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>editor</name>-&gt;<name>abort_edit</name></name> = <name>abort_edit</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>ret_editor</name> = <name>editor</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>edit_baton</name> = <name>ctx</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_ra_serf__change_rev_prop</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>ra_session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name> <init>= <expr><name><name>ra_session</name>-&gt;<name>priv</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_serf__propfind_context_t</name> *</type><name>propfind_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>proppatch_context_t</name> *</type><name>proppatch_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>commit_context_t</name> *</type><name>commit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vcc_url</name></decl>, *<decl><type ref="prev"/><name>checked_in_href</name></decl>, *<decl><type ref="prev"/><name>ns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>commit</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>commit</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>commit</name>-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>commit</name>-&gt;<name>session</name></name> = <name>session</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>commit</name>-&gt;<name>conn</name></name> = <name><name>session</name>-&gt;<name>conns</name><index>[<expr>0</expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__discover_root</name><argument_list>(<argument><expr>&amp;<name>vcc_url</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name><name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>commit</name>-&gt;<name>conn</name></name></expr></argument>,
<argument><expr><name><name>commit</name>-&gt;<name>session</name>-&gt;<name>repos_url</name>.<name>path</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>props</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>propfind_ctx</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__deliver_props</name><argument_list>(<argument><expr>&amp;<name>propfind_ctx</name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>commit</name>-&gt;<name>session</name></name></expr></argument>,
<argument><expr><name><name>commit</name>-&gt;<name>conn</name></name></expr></argument>, <argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name>rev</name></expr></argument>, <argument><expr>"0"</expr></argument>,
<argument><expr><name>checked_in_props</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_serf__wait_for_props</name><argument_list>(<argument><expr><name>propfind_ctx</name></expr></argument>, <argument><expr><name><name>commit</name>-&gt;<name>session</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>checked_in_href</name> = <call><name>svn_ra_serf__get_ver_prop</name><argument_list>(<argument><expr><name>props</name></expr></argument>, <argument><expr><name>vcc_url</name></expr></argument>, <argument><expr><name>rev</name></expr></argument>,
<argument><expr>"DAV:"</expr></argument>, <argument><expr>"href"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_SVN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>name</name> += <sizeof>sizeof<argument_list>(<argument><expr><name>SVN_PROP_PREFIX</name></expr></argument>)</argument_list></sizeof> - 1</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>ns</name> = <name>SVN_DAV_PROP_NS_CUSTOM</name></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name>proppatch_ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>proppatch_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>commit</name></name> = <name>commit</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name> = <name>checked_in_href</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>changed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>proppatch_ctx</name>-&gt;<name>removed_props</name></name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>value</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>changed_props</name></name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>value</name> = <call><name>svn_string_create</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__set_prop</name><argument_list>(<argument><expr><name><name>proppatch_ctx</name>-&gt;<name>removed_props</name></name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>ns</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name>err</name> = <call><name>proppatch_resource</name><argument_list>(<argument><expr><name>proppatch_ctx</name></expr></argument>, <argument><expr><name>commit</name></expr></argument>, <argument><expr><name><name>proppatch_ctx</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then>
<return>return
<expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_REQUEST_FAILED</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"DAV request failed; it's possible that the repository's "
"pre-revprop-change hook either failed or is non-existent"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
