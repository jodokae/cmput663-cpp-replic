<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_ra_serf/auth.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;serf.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_base64.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ra_serf.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"win32_auth_sspi.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>handle_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_hdr</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_attr</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>init_basic_connection</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>setup_request_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>hdrs_bkt</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>handle_proxy_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_hdr</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_attr</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>init_proxy_basic_connection</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>setup_request_proxy_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>hdrs_bkt</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>svn_ra_serf__auth_protocol_t</name></type> <name><name>serf_auth_protocols</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr>401</expr>,
<expr>"Basic"</expr>,
<expr><name>init_basic_connection</name></expr>,
<expr><name>handle_basic_auth</name></expr>,
<expr><name>setup_request_basic_auth</name></expr>,
}</block></expr>,
<expr><block>{
<expr>407</expr>,
<expr>"Basic"</expr>,
<expr><name>init_proxy_basic_connection</name></expr>,
<expr><name>handle_proxy_basic_auth</name></expr>,
<expr><name>setup_request_proxy_basic_auth</name></expr>,
}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SVN_RA_SERF_SSPI_ENABLED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><block>{
<expr>401</expr>,
<expr>"NTLM"</expr>,
<expr><name>init_sspi_connection</name></expr>,
<expr><name>handle_sspi_auth</name></expr>,
<expr><name>setup_request_sspi_auth</name></expr>,
}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{ <expr>0</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><name>void</name></type>
<name>svn_ra_serf__encode_auth_header</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type> <name>protocol</name></decl></param>, <param><decl><type><name>char</name> **</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type> <name>data</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>data_len</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>encoded_len</name></decl>, <decl><type ref="prev"/><name>proto_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type> <name>ptr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>encoded_len</name> = <call><name>apr_base64_encode_len</name><argument_list>(<argument><expr><name>data_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>proto_len</name> = <call><name>strlen</name><argument_list>(<argument><expr><name>protocol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>*<name>header</name> = <call><name>apr_palloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>encoded_len</name> + <name>proto_len</name> + 1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> = *<name>header</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_cpystrn</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>protocol</name></expr></argument>, <argument><expr><name>proto_len</name> + 1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> += <name>proto_len</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>ptr</name>++ = ' '</expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_base64_encode</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>data_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_ra_serf__handle_auth</name><parameter_list>(<param><decl><type><name>int</name></type> <name>code</name></decl></param>,
<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>serf_bucket_t</name> *</type><name>hdrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_ra_serf__auth_protocol_t</name> *</type><name>prot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>auth_name</name></decl>, *<decl><type ref="prev"/><name>auth_attr</name></decl>, *<decl><type ref="prev"/><name>auth_hdr</name></decl>, *<decl><type ref="prev"/><name>header</name></decl>, *<decl><type ref="prev"/><name>header_attr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>cached_err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>hdrs</name> = <call><name>serf_bucket_response_get_headers</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>code</name> == 401</expr>)</condition><then>
<expr_stmt><expr><name>auth_hdr</name> = (<name>char</name>*)<call><name>serf_bucket_headers_get</name><argument_list>(<argument><expr><name>hdrs</name></expr></argument>, <argument><expr>"WWW-Authenticate"</expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr><name>code</name> == 407</expr>)</condition><then>
<expr_stmt><expr><name>auth_hdr</name> = (<name>char</name>*)<call><name>serf_bucket_headers_get</name><argument_list>(<argument><expr><name>hdrs</name></expr></argument>, <argument><expr>"Proxy-Authenticate"</expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
<if>if <condition>(<expr>!<name>auth_hdr</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>session</name>-&gt;<name>auth_protocol</name></name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_AUTHN_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"%s Authentication failed"</expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>auth_protocol</name>-&gt;<name>auth_name</name></name></expr></argument>)</argument_list></call></expr>;</return></then>
<else>else
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_AUTHN_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></else></if>
}</block></then></if>
<expr_stmt><expr><name>header</name> = <call><name>apr_strtok</name><argument_list>(<argument><expr><name>auth_hdr</name></expr></argument>, <argument><expr>","</expr></argument>, <argument><expr>&amp;<name>header_attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while <condition>(<expr><name>header</name></expr>)</condition> <block>{
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>proto_found</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>auth_name</name> = <call><name>apr_strtok</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr>" "</expr></argument>, <argument><expr>&amp;<name>auth_attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cached_err</name> = <name>SVN_NO_ERROR</name></expr>;</expr_stmt>
<for>for (<init><expr><name>prot</name> = <name>serf_auth_protocols</name></expr>;</init> <condition><expr><name><name>prot</name>-&gt;<name>code</name></name> != 0</expr>;</condition> <incr><expr>++<name>prot</name></expr></incr>) <block>{
<if>if <condition>(<expr><name>code</name> == <name><name>prot</name>-&gt;<name>code</name></name> &amp;&amp; <call><name>strcmp</name><argument_list>(<argument><expr><name>auth_name</name></expr></argument>, <argument><expr><name><name>prot</name>-&gt;<name>auth_name</name></name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_serf__auth_handler_func_t</name></type> <name>handler</name> <init>= <expr><name><name>prot</name>-&gt;<name>handle_func</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>code</name> == 401 &amp;&amp; <name><name>session</name>-&gt;<name>auth_protocol</name></name> != <name>prot</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name><name>prot</name>-&gt;<name>init_conn_func</name></name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> == <name>SVN_NO_ERROR</name></expr>)</condition><then>
<expr_stmt><expr><name><name>session</name>-&gt;<name>auth_protocol</name></name> = <name>prot</name></expr>;</expr_stmt></then>
<else>else
<expr_stmt><expr><name><name>session</name>-&gt;<name>auth_protocol</name></name> = <name>NULL</name></expr>;</expr_stmt></else></if>
}</block></then> <else>else <if>if <condition>(<expr><name>code</name> == 407 &amp;&amp; <name><name>session</name>-&gt;<name>proxy_auth_protocol</name></name> != <name>prot</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name><name>prot</name>-&gt;<name>init_conn_func</name></name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> == <name>SVN_NO_ERROR</name></expr>)</condition><then>
<expr_stmt><expr><name><name>session</name>-&gt;<name>proxy_auth_protocol</name></name> = <name>prot</name></expr>;</expr_stmt></then>
<else>else
<expr_stmt><expr><name><name>session</name>-&gt;<name>proxy_auth_protocol</name></name> = <name>NULL</name></expr>;</expr_stmt></else></if>
}</block></then></if></else></if>
<if>if <condition>(<expr><name>err</name> == <name>SVN_NO_ERROR</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>proto_found</name> = <name>TRUE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>handler</name><argument_list>(<argument><expr><name>session</name></expr></argument>, <argument><expr><name>conn</name></expr></argument>, <argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>,
<argument><expr><name>header</name></expr></argument>, <argument><expr><name>auth_attr</name></expr></argument>, <argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>proto_found</name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>prot</name> = <name>NULL</name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>cached_err</name></expr>)</condition><then>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>cached_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<expr_stmt><expr><name>cached_err</name> = <name>err</name></expr>;</expr_stmt>
}</block></then></if>
<break>break;</break>
}</block></then></if>
}</block></for>
<if>if <condition>(<expr><name>proto_found</name></expr>)</condition><then>
<break>break;</break></then></if>
<expr_stmt><expr><name>header</name> = <call><name>apr_strtok</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>","</expr></argument>, <argument><expr>&amp;<name>header_attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></while>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><name>cached_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>prot</name> || <name><name>prot</name>-&gt;<name>auth_name</name></name> == <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_AUTHN_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"%s authentication not supported.\n"
"Authentication failed"</expr></argument>, <argument><expr><name>auth_name</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>handle_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_hdr</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_attr</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>void</name> *</type><name>creds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>last</name></decl>, *<decl><type ref="prev"/><name>realm_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_auth_cred_simple_t</name> *</type><name>simple_creds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>tmp_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_port_t</name></type> <name>port</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>session</name>-&gt;<name>realm</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>char</name> *</type><name>attr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>attr</name> = <call><name>apr_strtok</name><argument_list>(<argument><expr><name>auth_attr</name></expr></argument>, <argument><expr>"="</expr></argument>, <argument><expr>&amp;<name>last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>attr</name></expr></argument>, <argument><expr>"realm"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>realm_name</name> = <call><name>apr_strtok</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>"="</expr></argument>, <argument><expr>&amp;<name>last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>realm_name</name><index>[<expr>0</expr>]</index></name> == '\"'</expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>realm_len</name></decl>;</decl_stmt>
<expr_stmt><expr><name>realm_len</name> = <call><name>strlen</name><argument_list>(<argument><expr><name>realm_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>realm_name</name><index>[<expr><name>realm_len</name> - 1</expr>]</index></name> == '\"'</expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>realm_name</name><index>[<expr><name>realm_len</name> - 1</expr>]</index></name> = '\0'</expr>;</expr_stmt>
<expr_stmt><expr><name>realm_name</name>++</expr>;</expr_stmt>
}</block></then></if>
}</block></then></if>
}</block></then> <else>else <block>{
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_MALFORMED_DATA</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Missing 'realm' attribute in Authorization header."</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></else></if>
<if>if <condition>(<expr>!<name>realm_name</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_RA_DAV_MALFORMED_DATA</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Missing 'realm' attribute in Authorization header."</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>port_str</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>port</name> = <name><name>session</name>-&gt;<name>repos_url</name>.<name>port</name></name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>port</name> = <call><name>apr_uri_port_of_scheme</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>scheme</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name><name>session</name>-&gt;<name>realm</name></name> = <call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"&lt;%s://%s:%d&gt; %s"</expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>scheme</name></name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>repos_url</name>.<name>hostname</name></name></expr></argument>,
<argument><expr><name>port</name></expr></argument>,
<argument><expr><name>realm_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr>!<name><name>session</name>-&gt;<name>auth_state</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_auth_first_credentials</name><argument_list>(<argument><expr>&amp;<name>creds</name></expr></argument>,
<argument><expr>&amp;<name><name>session</name>-&gt;<name>auth_state</name></name></expr></argument>,
<argument><expr><name>SVN_AUTH_CRED_SIMPLE</name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>realm</name></name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>wc_callbacks</name>-&gt;<name>auth_baton</name></name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_auth_next_credentials</name><argument_list>(<argument><expr>&amp;<name>creds</name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>auth_state</name></name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><name><name>session</name>-&gt;<name>auth_attempts</name></name>++</expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>creds</name> || <name><name>session</name>-&gt;<name>auth_attempts</name></name> &gt; 4</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_AUTHN_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"No more credentials or we tried too many times.\n"
"Authentication failed"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>simple_creds</name> = <name>creds</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr><name><name>simple_creds</name>-&gt;<name>username</name></name></expr></argument>, <argument><expr>":"</expr></argument>, <argument><expr><name><name>simple_creds</name>-&gt;<name>password</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_len</name> = <call><name>strlen</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_ra_serf__encode_auth_header</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>auth_protocol</name>-&gt;<name>auth_name</name></name></expr></argument>,
<argument><expr>&amp;<name><name>session</name>-&gt;<name>auth_value</name></name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>tmp_len</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>session</name>-&gt;<name>auth_header</name></name> = "Authorization"</expr>;</expr_stmt>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; <name><name>session</name>-&gt;<name>num_conns</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<expr_stmt><expr><name><name>session</name>-&gt;<name>conns</name><index>[<expr><name>i</name></expr>]</index></name>-&gt;<name>auth_header</name> = <name><name>session</name>-&gt;<name>auth_header</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>session</name>-&gt;<name>conns</name><index>[<expr><name>i</name></expr>]</index></name>-&gt;<name>auth_value</name> = <name><name>session</name>-&gt;<name>auth_value</name></name></expr>;</expr_stmt>
}</block></for>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>init_basic_connection</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><name><name>conn</name>-&gt;<name>auth_header</name></name> = <name><name>session</name>-&gt;<name>auth_header</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conn</name>-&gt;<name>auth_value</name></name> = <name><name>session</name>-&gt;<name>auth_value</name></name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>setup_request_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>hdrs_bkt</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>conn</name>-&gt;<name>auth_header</name></name> &amp;&amp; <name><name>conn</name>-&gt;<name>auth_value</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>serf_bucket_headers_setn</name><argument_list>(<argument><expr><name>hdrs_bkt</name></expr></argument>, <argument><expr><name><name>conn</name>-&gt;<name>auth_header</name></name></expr></argument>, <argument><expr><name><name>conn</name>-&gt;<name>auth_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>handle_proxy_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>response</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_hdr</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>auth_attr</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>tmp_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><name>tmp</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>proxy_username</name></name></expr></argument>, <argument><expr>":"</expr></argument>,
<argument><expr><name><name>session</name>-&gt;<name>proxy_password</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp_len</name> = <call><name>strlen</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>session</name>-&gt;<name>proxy_auth_attempts</name></name>++</expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>session</name>-&gt;<name>proxy_auth_attempts</name></name> &gt; 1</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_AUTHN_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Proxy authentication failed"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>svn_ra_serf__encode_auth_header</name><argument_list>(<argument><expr><name><name>session</name>-&gt;<name>proxy_auth_protocol</name>-&gt;<name>auth_name</name></name></expr></argument>,
<argument><expr>&amp;<name><name>session</name>-&gt;<name>proxy_auth_value</name></name></expr></argument>,
<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>tmp_len</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>session</name>-&gt;<name>proxy_auth_header</name></name> = "Proxy-Authorization"</expr>;</expr_stmt>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; <name><name>session</name>-&gt;<name>num_conns</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<expr_stmt><expr><name><name>session</name>-&gt;<name>conns</name><index>[<expr><name>i</name></expr>]</index></name>-&gt;<name>proxy_auth_header</name> = <name><name>session</name>-&gt;<name>proxy_auth_header</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>session</name>-&gt;<name>conns</name><index>[<expr><name>i</name></expr>]</index></name>-&gt;<name>proxy_auth_value</name> = <name><name>session</name>-&gt;<name>proxy_auth_value</name></name></expr>;</expr_stmt>
}</block></for>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>init_proxy_basic_connection</name><parameter_list>(<param><decl><type><name>svn_ra_serf__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><name><name>conn</name>-&gt;<name>proxy_auth_header</name></name> = <name><name>session</name>-&gt;<name>proxy_auth_header</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conn</name>-&gt;<name>proxy_auth_value</name></name> = <name><name>session</name>-&gt;<name>proxy_auth_value</name></name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>setup_request_proxy_basic_auth</name><parameter_list>(<param><decl><type><name>svn_ra_serf__connection_t</name> *</type><name>conn</name></decl></param>,
<param><decl><type><name>serf_bucket_t</name> *</type><name>hdrs_bkt</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>conn</name>-&gt;<name>proxy_auth_header</name></name> &amp;&amp; <name><name>conn</name>-&gt;<name>proxy_auth_value</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>serf_bucket_headers_setn</name><argument_list>(<argument><expr><name>hdrs_bkt</name></expr></argument>, <argument><expr><name><name>conn</name>-&gt;<name>proxy_auth_header</name></name></expr></argument>,
<argument><expr><name><name>conn</name>-&gt;<name>proxy_auth_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
