<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/tests/libsvn_client/client-test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_mergeinfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_client/mergeinfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../svn_test.h"</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>unparsed_mergeinfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>remains</name></decl>;</decl_stmt>
}</block></struct></type> <name>mergeinfo_catalog_item</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_ITEMS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <name>mergeinfo_catalog_item</name></type> <name><name>elide_testcases</name><index>[]</index><index>[<expr><name>MAX_ITEMS</name></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><block>{<expr>"/foo"</expr>, <expr>"/bar: 1-4"</expr>, <expr><name>TRUE</name></expr>}</block></expr>,
<expr><block>{<expr>"/foo/beep/baz"</expr>, <expr>"/bar/beep/baz: 1-4"</expr>, <expr><name>FALSE</name></expr>}</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>
}</block></expr>,
<expr><block>{ <expr><block>{<expr>"/foo"</expr>, <expr>"/bar: 1-4"</expr>, <expr><name>TRUE</name></expr>}</block></expr>,
<expr><block>{<expr>"/foo/beep/baz"</expr>, <expr>"/blaa/beep/baz: 1-4"</expr>, <expr><name>TRUE</name></expr>}</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>
}</block></expr>,
<expr><block>{ <expr><block>{<expr>"/"</expr>, <expr>"/gah: 1-4"</expr>, <expr><name>TRUE</name></expr>}</block></expr>,
<expr><block>{<expr>"/foo/beep/baz"</expr>, <expr>"/gah/foo/beep/baz: 1-4"</expr>, <expr><name>FALSE</name></expr>}</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>test_elide_mergeinfo_catalog</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>iterpool</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "test svn_client__elide_mergeinfo_catalog"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><name>iterpool</name> = <call><name>svn_pool_create</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>i</name> = 0</expr>;</init>
<condition><expr><name>i</name> &lt; <sizeof>sizeof<argument_list>(<argument><expr><name>elide_testcases</name></expr></argument>)</argument_list></sizeof> / <sizeof>sizeof<argument_list>(<argument><expr><name><name>elide_testcases</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</condition>
<incr><expr><name>i</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>catalog</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mergeinfo_catalog_item</name> *</type><name>item</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>iterpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>catalog</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>iterpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>item</name> = <name><name>elide_testcases</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</init> <condition><expr><name><name>item</name>-&gt;<name>path</name></name></expr>;</condition> <incr><expr><name>item</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>mergeinfo</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_mergeinfo_parse</name><argument_list>(<argument><expr>&amp;<name>mergeinfo</name></expr></argument>, <argument><expr><name><name>item</name>-&gt;<name>unparsed_mergeinfo</name></name></expr></argument>,
<argument><expr><name>iterpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name>catalog</name></expr></argument>, <argument><expr><name><name>item</name>-&gt;<name>path</name></name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>, <argument><expr><name>mergeinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_client__elide_mergeinfo_catalog</name><argument_list>(<argument><expr><name>catalog</name></expr></argument>, <argument><expr><name>iterpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>item</name> = <name><name>elide_testcases</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</init> <condition><expr><name><name>item</name>-&gt;<name>path</name></name></expr>;</condition> <incr><expr><name>item</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>mergeinfo</name> <init>= <expr><call><name>apr_hash_get</name><argument_list>(<argument><expr><name>catalog</name></expr></argument>, <argument><expr><name><name>item</name>-&gt;<name>path</name></name></expr></argument>,
<argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>item</name>-&gt;<name>remains</name></name> &amp;&amp; !<name>mergeinfo</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Elision for test case #%d incorrectly "
"elided '%s'"</expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>item</name>-&gt;<name>path</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr>!<name><name>item</name>-&gt;<name>remains</name></name> &amp;&amp; <name>mergeinfo</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Elision for test case #%d failed to "
"elide '%s'"</expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>item</name>-&gt;<name>path</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></for>
}</block></for>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>iterpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type>struct <name>svn_test_descriptor_t</name></type> <name><name>test_funcs</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>SVN_TEST_NULL</name></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>test_elide_mergeinfo_catalog</name></expr></argument>)</argument_list></call></expr>,
<expr><name>SVN_TEST_NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
