<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/tests/libsvn_fs_base/fs-base-test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_time.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_md5.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../svn_test.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../svn_test_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_fs_base/id.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_fs_base/trail.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_fs_base/bdb/txn-table.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_fs_base/bdb/nodes-table.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_fs_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../libsvn_delta/delta.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_STR</name><parameter_list>(<param><type><name>ps</name></type></param>, <param><type><name>s</name></type></param>)</parameter_list></cpp:macro> <cpp:value>((ps)-&gt;data = (s), (ps)-&gt;len = strlen(s))</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>create_berkeley_filesystem</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "svn_fs_create_berkeley"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-create-berkeley"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>berkeley_error_handler</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>errpfx</name></decl></param>, <param><decl><type><name>char</name> *</type><name>msg</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr>"%s%s\n"</expr></argument>, <argument><expr><name>errpfx</name> ? <name>errpfx</name> : ""</expr></argument>, <argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>open_berkeley_filesystem</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>, *<decl><type ref="prev"/><name>fs2</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "open an existing Berkeley DB filesystem"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-open-berkeley"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__fs_new</name><argument_list>(<argument><expr>&amp;<name>fs2</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_open_berkeley</name><argument_list>(<argument><expr><name>fs2</name></expr></argument>, <argument><expr>"test-repo-open-berkeley"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_set_berkeley_errcall</name><argument_list>(<argument><expr><name>fs2</name></expr></argument>, <argument><expr><name>berkeley_error_handler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_entry</name><parameter_list>(<param><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name> *</type><name>present</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_dirent_t</name> *</type><name>ent</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_dir_entries</name><argument_list>(<argument><expr>&amp;<name>entries</name></expr></argument>, <argument><expr><name>root</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ent</name> = <call><name>apr_hash_get</name><argument_list>(<argument><expr><name>entries</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>ent</name></expr>)</condition><then>
<expr_stmt><expr>*<name>present</name> = <name>TRUE</name></expr>;</expr_stmt></then>
<else>else
<expr_stmt><expr>*<name>present</name> = <name>FALSE</name></expr>;</expr_stmt></else></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_entry_present</name><parameter_list>(<param><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>present</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>&amp;<name>present</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>present</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"entry \"%s\" absent when it should be present"</expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_entry_absent</name><parameter_list>(<param><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>present</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>&amp;<name>present</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>present</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"entry \"%s\" present when it should be absent"</expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<struct>struct <name>check_id_args</name> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>present</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>txn_body_check_id</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>check_id_args</name> *</type><name>args</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>node_revision_t</name> *</type><name>noderev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_fs_bdb__get_node_revision</name><argument_list>(<argument><expr>&amp;<name>noderev</name></expr></argument>, <argument><expr><name><name>args</name>-&gt;<name>fs</name></name></expr></argument>, <argument><expr><name><name>args</name>-&gt;<name>id</name></name></expr></argument>,
<argument><expr><name>trail</name></expr></argument>, <argument><expr><name><name>trail</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> &amp;&amp; (<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_ID_NOT_FOUND</name>)</expr>)</condition><then>
<expr_stmt><expr><name><name>args</name>-&gt;<name>present</name></name> = <name>FALSE</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr>! <name>err</name></expr>)</condition><then>
<expr_stmt><expr><name><name>args</name>-&gt;<name>present</name></name> = <name>TRUE</name></expr>;</expr_stmt></then>
<else>else <block>{
<decl_stmt><decl><type><name>svn_string_t</name> *</type><name>id_str</name> <init>= <expr><call><name>svn_fs_unparse_id</name><argument_list>(<argument><expr><name><name>args</name>-&gt;<name>id</name></name></expr></argument>, <argument><expr><name><name>trail</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr>"error looking for node revision id \"%s\""</expr></argument>, <argument><expr><name><name>id_str</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></else></if></else></if>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_id</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl></param>, <param><decl><type><name>svn_boolean_t</name> *</type><name>present</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>check_id_args</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>args</name>.<name>id</name></name> = <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name>.<name>fs</name></name> = <name>fs</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_base__retry_txn</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>txn_body_check_id</name></expr></argument>, <argument><expr>&amp;<name>args</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>args</name>.<name>present</name></name></expr>)</condition><then>
<expr_stmt><expr>*<name>present</name> = <name>TRUE</name></expr>;</expr_stmt></then>
<else>else
<expr_stmt><expr>*<name>present</name> = <name>FALSE</name></expr>;</expr_stmt></else></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_id_present</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>present</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr>&amp;<name>present</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>present</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_string_t</name> *</type><name>id_str</name> <init>= <expr><call><name>svn_fs_unparse_id</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"node revision id \"%s\" absent when should be present"</expr></argument>,
<argument><expr><name><name>id_str</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>check_id_absent</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>present</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr>&amp;<name>present</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>present</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_string_t</name> *</type><name>id_str</name> <init>= <expr><call><name>svn_fs_unparse_id</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"node revision id \"%s\" present when should be absent"</expr></argument>,
<argument><expr><name><name>id_str</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>abort_txn</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn1</name></decl>, *<decl><type ref="prev"/><name>txn2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn1_root</name></decl>, *<decl><type ref="prev"/><name>txn2_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn1_name</name></decl>, *<decl><type ref="prev"/><name>txn2_name</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "abort a transaction"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-abort-txn"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn1</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn2</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn1_root</name></expr></argument>, <argument><expr><name>txn1</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn2_root</name></expr></argument>, <argument><expr><name>txn2</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_name</name><argument_list>(<argument><expr>&amp;<name>txn1_name</name></expr></argument>, <argument><expr><name>txn1</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_name</name><argument_list>(<argument><expr>&amp;<name>txn2_name</name></expr></argument>, <argument><expr><name>txn2</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn1_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn2_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name>
*</type><name>t1_root_id</name></decl>, *<decl><type ref="prev"/><name>t2_root_id</name></decl>,
*<decl><type ref="prev"/><name>t1_iota_id</name></decl>, *<decl><type ref="prev"/><name>t2_iota_id</name></decl>,
*<decl><type ref="prev"/><name>t1_A_id</name></decl>, *<decl><type ref="prev"/><name>t2_A_id</name></decl>,
*<decl><type ref="prev"/><name>t1_mu_id</name></decl>, *<decl><type ref="prev"/><name>t2_mu_id</name></decl>,
*<decl><type ref="prev"/><name>t1_B_id</name></decl>, *<decl><type ref="prev"/><name>t2_B_id</name></decl>,
*<decl><type ref="prev"/><name>t1_lambda_id</name></decl>, *<decl><type ref="prev"/><name>t2_lambda_id</name></decl>,
*<decl><type ref="prev"/><name>t1_E_id</name></decl>, *<decl><type ref="prev"/><name>t2_E_id</name></decl>,
*<decl><type ref="prev"/><name>t1_alpha_id</name></decl>, *<decl><type ref="prev"/><name>t2_alpha_id</name></decl>,
*<decl><type ref="prev"/><name>t1_beta_id</name></decl>, *<decl><type ref="prev"/><name>t2_beta_id</name></decl>,
*<decl><type ref="prev"/><name>t1_F_id</name></decl>, *<decl><type ref="prev"/><name>t2_F_id</name></decl>,
*<decl><type ref="prev"/><name>t1_C_id</name></decl>, *<decl><type ref="prev"/><name>t2_C_id</name></decl>,
*<decl><type ref="prev"/><name>t1_D_id</name></decl>, *<decl><type ref="prev"/><name>t2_D_id</name></decl>,
*<decl><type ref="prev"/><name>t1_gamma_id</name></decl>, *<decl><type ref="prev"/><name>t2_gamma_id</name></decl>,
*<decl><type ref="prev"/><name>t1_H_id</name></decl>, *<decl><type ref="prev"/><name>t2_H_id</name></decl>,
*<decl><type ref="prev"/><name>t1_chi_id</name></decl>, *<decl><type ref="prev"/><name>t2_chi_id</name></decl>,
*<decl><type ref="prev"/><name>t1_psi_id</name></decl>, *<decl><type ref="prev"/><name>t2_psi_id</name></decl>,
*<decl><type ref="prev"/><name>t1_omega_id</name></decl>, *<decl><type ref="prev"/><name>t2_omega_id</name></decl>,
*<decl><type ref="prev"/><name>t1_G_id</name></decl>, *<decl><type ref="prev"/><name>t2_G_id</name></decl>,
*<decl><type ref="prev"/><name>t1_pi_id</name></decl>, *<decl><type ref="prev"/><name>t2_pi_id</name></decl>,
*<decl><type ref="prev"/><name>t1_rho_id</name></decl>, *<decl><type ref="prev"/><name>t2_rho_id</name></decl>,
*<decl><type ref="prev"/><name>t1_tau_id</name></decl>, *<decl><type ref="prev"/><name>t2_tau_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_root_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_root_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_iota_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_iota_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_A_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_A_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_mu_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_mu_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_B_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_B_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_lambda_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B/lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_lambda_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B/lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_E_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B/E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_E_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B/E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_alpha_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B/E/alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_alpha_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B/E/alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_beta_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B/E/beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_beta_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B/E/beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_F_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_F_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_C_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_C_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_D_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_D_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_gamma_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_gamma_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_H_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_H_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_chi_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/H/chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_chi_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/H/chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_psi_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/H/psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_psi_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/H/psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_omega_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/H/omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_omega_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/H/omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_G_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_G_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_pi_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_pi_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_rho_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_rho_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t1_tau_id</name></expr></argument>, <argument><expr><name>txn1_root</name></expr></argument>, <argument><expr>"/A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>t2_tau_id</name></expr></argument>, <argument><expr><name>txn2_root</name></expr></argument>, <argument><expr>"/A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn2</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_root_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_A_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_mu_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_B_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_lambda_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_E_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_alpha_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_beta_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_F_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_H_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_chi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_psi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_omega_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t2_tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_root_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_A_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_mu_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_B_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_lambda_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_E_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_alpha_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_beta_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_F_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_H_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_chi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_psi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_omega_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>t1_tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn2_again</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_fs_open_txn</name><argument_list>(<argument><expr>&amp;<name>txn2_again</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>txn2_name</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> &amp;&amp; (<name><name>err</name>-&gt;<name>apr_err</name></name> != <name>SVN_ERR_FS_NO_SUCH_TRANSACTION</name>)</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr>"opening non-existent txn got wrong error"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr>! <name>err</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"opening non-existent txn failed to get error"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if></else></if>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn3_name</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn3</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_name</name><argument_list>(<argument><expr>&amp;<name>txn3_name</name></expr></argument>, <argument><expr><name>txn3</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>(<call><name>strcmp</name><argument_list>(<argument><expr><name>txn3_name</name></expr></argument>, <argument><expr><name>txn2_name</name></expr></argument>)</argument_list></call> == 0)
|| (<call><name>strcmp</name><argument_list>(<argument><expr><name>txn3_name</name></expr></argument>, <argument><expr><name>txn1_name</name></expr></argument>)</argument_list></call> == 0)</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"txn name \"%s\" was recycled"</expr></argument>, <argument><expr><name>txn3_name</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block>
<block>{
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn4_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>new_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn4</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_name</name><argument_list>(<argument><expr>&amp;<name>txn4_name</name></expr></argument>, <argument><expr><name>txn4</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr>&amp;<name>conflict</name></expr></argument>, <argument><expr>&amp;<name>new_rev</name></expr></argument>, <argument><expr><name>txn4</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn4</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>err</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"expected error trying to abort a committed txn; got none"</expr></argument>)</argument_list></call></expr>;</return></then>
<else>else <if>if <condition>(<expr><name><name>err</name>-&gt;<name>apr_err</name></name> != <name>SVN_ERR_FS_TRANSACTION_NOT_MUTABLE</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr>"got an unexpected error trying to abort a committed txn"</expr></argument>)</argument_list></call></expr>;</return></then>
<else>else
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if>
}</block>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>delete_mutables</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "delete mutable nodes from directories"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-del-from-dir"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>gamma_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>pi_id</name></decl>, *<decl><type ref="prev"/><name>rho_id</name></decl>, *<decl><type ref="prev"/><name>tau_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>pi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>rho_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>tau_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>tau_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>tau_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>G_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>G_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>C_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>C_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>root_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>root_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> &amp;&amp; (<name><name>err</name>-&gt;<name>apr_err</name></name> != <name>SVN_ERR_FS_ROOT_DIR</name>)</expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>err</name></expr></argument>,
<argument><expr>"deleting root directory got wrong error"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr>! <name>err</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_FS_GENERAL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"deleting root directory failed to get error"</expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if></else></if>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>root_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>iota_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>iota_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>delete</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>new_rev</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "delete nodes tree"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-del-tree"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>iota_id</name></decl>, *<decl><type ref="prev"/><name>gamma_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>svn_test__tree_entry_t</name></type> <name><name>expected_entries</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr>"A"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/mu"</expr>, <expr>"This is the file 'mu'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/lambda"</expr>, <expr>"This is the file 'lambda'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E/alpha"</expr>, <expr>"This is the file 'alpha'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E/beta"</expr>, <expr>"This is the file 'beta'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/C"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/F"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/pi"</expr>, <expr>"This is the file 'pi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/rho"</expr>, <expr>"This is the file 'rho'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/tau"</expr>, <expr>"This is the file 'tau'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/chi"</expr>, <expr>"This is the file 'chi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/psi"</expr>, <expr>"This is the file 'psi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/omega"</expr>, <expr>"This is the file 'omega'.\n"</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>iota_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__validate_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>expected_entries</name></expr></argument>, <argument><expr>18</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>A_id</name></decl>, *<decl><type ref="prev"/><name>mu_id</name></decl>, *<decl><type ref="prev"/><name>B_id</name></decl>, *<decl><type ref="prev"/><name>lambda_id</name></decl>, *<decl><type ref="prev"/><name>E_id</name></decl>, *<decl><type ref="prev"/><name>alpha_id</name></decl>,
*<decl><type ref="prev"/><name>beta_id</name></decl>, *<decl><type ref="prev"/><name>F_id</name></decl>, *<decl><type ref="prev"/><name>C_id</name></decl>, *<decl><type ref="prev"/><name>D_id</name></decl>, *<decl><type ref="prev"/><name>gamma_id</name></decl>, *<decl><type ref="prev"/><name>H_id</name></decl>, *<decl><type ref="prev"/><name>chi_id</name></decl>,
*<decl><type ref="prev"/><name>psi_id</name></decl>, *<decl><type ref="prev"/><name>omega_id</name></decl>, *<decl><type ref="prev"/><name>G_id</name></decl>, *<decl><type ref="prev"/><name>pi_id</name></decl>, *<decl><type ref="prev"/><name>rho_id</name></decl>, *<decl><type ref="prev"/><name>tau_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>A_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>mu_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>B_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>lambda_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>E_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>alpha_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>beta_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>F_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>C_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>D_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>H_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>chi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>psi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>omega_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>G_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>pi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>rho_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>tau_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>F_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>A_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>mu_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>B_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>lambda_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>E_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>alpha_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>beta_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>H_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>chi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>psi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>omega_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>svn_test__tree_entry_t</name></type> <name><name>expected_entries</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr>"iota"</expr>, <expr>"This is the file 'iota'.\n"</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__validate_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>expected_entries</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
}</block>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>new_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>new_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>A_id</name></decl>, *<decl><type ref="prev"/><name>mu_id</name></decl>, *<decl><type ref="prev"/><name>B_id</name></decl>, *<decl><type ref="prev"/><name>lambda_id</name></decl>, *<decl><type ref="prev"/><name>E_id</name></decl>, *<decl><type ref="prev"/><name>alpha_id</name></decl>,
*<decl><type ref="prev"/><name>beta_id</name></decl>, *<decl><type ref="prev"/><name>F_id</name></decl>, *<decl><type ref="prev"/><name>C_id</name></decl>, *<decl><type ref="prev"/><name>D_id</name></decl>, *<decl><type ref="prev"/><name>gamma_id</name></decl>, *<decl><type ref="prev"/><name>H_id</name></decl>, *<decl><type ref="prev"/><name>chi_id</name></decl>,
*<decl><type ref="prev"/><name>psi_id</name></decl>, *<decl><type ref="prev"/><name>omega_id</name></decl>, *<decl><type ref="prev"/><name>G_id</name></decl>, *<decl><type ref="prev"/><name>pi_id</name></decl>, *<decl><type ref="prev"/><name>rho_id</name></decl>, *<decl><type ref="prev"/><name>tau_id</name></decl>, *<decl><type ref="prev"/><name>sigma_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/sigma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__set_file_contents</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G/sigma"</expr></argument>,
<argument><expr>"This is another file 'sigma'.\n"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>A_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>mu_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>B_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>lambda_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>E_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>alpha_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>beta_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>F_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>C_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>D_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>H_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>chi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>psi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>omega_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>G_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>pi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>rho_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>tau_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>sigma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/sigma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"sigma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>A_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>mu_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>B_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>lambda_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>E_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>alpha_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>beta_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>F_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>H_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>chi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>psi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>omega_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_absent</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>sigma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>svn_test__tree_entry_t</name></type> <name><name>expected_entries</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr>"iota"</expr>, <expr>"This is the file 'iota'.\n"</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__validate_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>expected_entries</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
}</block>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>new_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>iota_id</name></decl>, *<decl><type ref="prev"/><name>gamma_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>iota_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"iota"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>iota_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>svn_test__tree_entry_t</name></type> <name><name>expected_entries</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr>"A"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/mu"</expr>, <expr>"This is the file 'mu'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/lambda"</expr>, <expr>"This is the file 'lambda'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E/alpha"</expr>, <expr>"This is the file 'alpha'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/E/beta"</expr>, <expr>"This is the file 'beta'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/B/F"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/C"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/pi"</expr>, <expr>"This is the file 'pi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/rho"</expr>, <expr>"This is the file 'rho'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/G/tau"</expr>, <expr>"This is the file 'tau'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H"</expr>, <expr>0</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/chi"</expr>, <expr>"This is the file 'chi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/psi"</expr>, <expr>"This is the file 'psi'.\n"</expr> }</block></expr>,
<expr><block>{ <expr>"A/D/H/omega"</expr>, <expr>"This is the file 'omega'.\n"</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__validate_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>expected_entries</name></expr></argument>, <argument><expr>18</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
}</block>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>new_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>A_id</name></decl>, *<decl><type ref="prev"/><name>mu_id</name></decl>, *<decl><type ref="prev"/><name>B_id</name></decl>, *<decl><type ref="prev"/><name>lambda_id</name></decl>, *<decl><type ref="prev"/><name>E_id</name></decl>, *<decl><type ref="prev"/><name>alpha_id</name></decl>,
*<decl><type ref="prev"/><name>beta_id</name></decl>, *<decl><type ref="prev"/><name>F_id</name></decl>, *<decl><type ref="prev"/><name>C_id</name></decl>, *<decl><type ref="prev"/><name>D_id</name></decl>, *<decl><type ref="prev"/><name>gamma_id</name></decl>, *<decl><type ref="prev"/><name>H_id</name></decl>, *<decl><type ref="prev"/><name>chi_id</name></decl>,
*<decl><type ref="prev"/><name>psi_id</name></decl>, *<decl><type ref="prev"/><name>omega_id</name></decl>, *<decl><type ref="prev"/><name>G_id</name></decl>, *<decl><type ref="prev"/><name>pi_id</name></decl>, *<decl><type ref="prev"/><name>rho_id</name></decl>, *<decl><type ref="prev"/><name>tau_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>A_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>mu_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"mu"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>B_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"B"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>lambda_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"lambda"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>E_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"E"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>alpha_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"alpha"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>beta_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/E/beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B/E"</expr></argument>, <argument><expr>"beta"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>F_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/B/F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/B"</expr></argument>, <argument><expr>"F"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>C_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"C"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>D_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr>"D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>gamma_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"gamma"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>H_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"H"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>chi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"chi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>psi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"psi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>omega_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/H/omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/H"</expr></argument>, <argument><expr>"omega"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>G_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr>"G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>pi_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"pi"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>rho_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"rho"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>tau_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"/A/D/G/tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_present</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr>"tau"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_delete</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_entry_absent</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>A_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>mu_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>B_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>lambda_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>E_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>alpha_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>beta_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>F_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>C_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>gamma_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>H_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>chi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>psi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>omega_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>G_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>pi_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>rho_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>check_id_present</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>tau_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>static</specifier> <name>svn_test__tree_entry_t</name></type> <name><name>expected_entries</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr>"iota"</expr>, <expr>"This is the file 'iota'.\n"</expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__validate_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>expected_entries</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
}</block>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<struct>struct <name>node_created_rev_args</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>canonicalize_abspath</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name><name>paths</name><index>[<expr>21</expr>]</index><index>[<expr>2</expr>]</index></name> <init>=
<expr><block>{ <expr><block>{ <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr>""</expr>, <expr>"/"</expr> }</block></expr>,
<expr><block>{ <expr>"/"</expr>, <expr>"/"</expr> }</block></expr>,
<expr><block>{ <expr>"//"</expr>, <expr>"/"</expr> }</block></expr>,
<expr><block>{ <expr>"///"</expr>, <expr>"/"</expr> }</block></expr>,
<expr><block>{ <expr>"foo"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"foo/"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"foo//"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"/foo"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"/foo/"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"/foo//"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"//foo//"</expr>, <expr>"/foo"</expr> }</block></expr>,
<expr><block>{ <expr>"foo/bar"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"foo/bar/"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"foo/bar//"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"foo//bar"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"foo//bar/"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"foo//bar//"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"/foo//bar//"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"//foo//bar//"</expr>, <expr>"/foo/bar"</expr> }</block></expr>,
<expr><block>{ <expr>"///foo///bar///baz///"</expr>, <expr>"/foo/bar/baz"</expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "test svn_fs__canonicalize_abspath"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; (<sizeof>sizeof<argument_list>(<argument><expr><name>paths</name></expr></argument>)</argument_list></sizeof> / 2 / <sizeof>sizeof<argument_list>(<argument><expr>const <name>char</name> *</expr></argument>)</argument_list></sizeof>)</expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>input</name> <init>= <expr><name><name>paths</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>output</name> <init>= <expr><name><name>paths</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>1</expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>actual</name> <init>= <expr><call><name>svn_fs__canonicalize_abspath</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>(! <name>output</name>) &amp;&amp; (! <name>actual</name>)</expr>)</condition><then>
<continue>continue;</continue></then></if>
<if>if <condition>(<expr>(! <name>output</name>) &amp;&amp; <name>actual</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"expected NULL path; got '%s'"</expr></argument>, <argument><expr><name>actual</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><name>output</name> &amp;&amp; (! <name>actual</name>)</expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"expected '%s' path; got NULL"</expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><name>actual</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"expected '%s' path; got '%s'"</expr></argument>,
<argument><expr><name>output</name></expr></argument>, <argument><expr><name>actual</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></for>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>create_within_copy</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>spool</name> <init>= <expr><call><name>svn_pool_create</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>, *<decl><type ref="prev"/><name>rev_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>youngest_rev</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "create new items within a copied directory"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-create-within-copy"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_copy</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D3"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_copy</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G2"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_copy</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D2"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_dir</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G2/I"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D/G2/up"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_dir</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D2/I"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D2/up"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_dir</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D2/G2/I"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D2/G2/up"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D3/down"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_dir</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D3/J"</expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name><name>pathgroup</name><index>[<expr>4</expr>]</index><index>[<expr>3</expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr>"A/D/G2"</expr>,
<expr>"A/D/G2/I"</expr>,
<expr>"A/D/G2/up"</expr>
}</block></expr>,
<expr><block>{
<expr>"A/D2"</expr>,
<expr>"A/D2/I"</expr>,
<expr>"A/D2/up"</expr>
}</block></expr>,
<expr><block>{
<expr>"A/D2/G2"</expr>,
<expr>"A/D2/G2/I"</expr>,
<expr>"A/D2/G2/up"</expr>
}</block></expr>,
<expr><block>{
<expr>"A/D3"</expr>,
<expr>"A/D3/down"</expr>,
<expr>"A/D3/J"</expr>
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; 4</expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>lead_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lead_copy_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>lead_id</name></expr></argument>, <argument><expr><name>rev_root</name></expr></argument>, <argument><expr><name><name>pathgroup</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>0</expr>]</index></name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>lead_copy_id</name> = <call><name>svn_fs_base__id_copy_id</name><argument_list>(<argument><expr><name>lead_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for (<init><expr><name>j</name> = 1</expr>;</init> <condition><expr><name>j</name> &lt; 3</expr>;</condition> <incr><expr><name>j</name>++</expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copy_id</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>id</name></expr></argument>, <argument><expr><name>rev_root</name></expr></argument>, <argument><expr><name><name>pathgroup</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>copy_id</name> = <call><name>svn_fs_base__id_copy_id</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>copy_id</name></expr></argument>, <argument><expr><name>lead_copy_id</name></expr></argument>)</argument_list></call> != 0</expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"'%s' id: expected copy_id '%s'; got copy_id '%s'"</expr></argument>,
<argument><expr><name><name>pathgroup</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name>lead_copy_id</name></expr></argument>, <argument><expr><name>copy_id</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></for>
}</block></for>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>spool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>skip_deltas</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>, *<decl><type ref="prev"/><name>rev_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>subpool</name> <init>= <expr><call><name>svn_pool_create</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>youngest_rev</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>one_line</name> <init>= <expr>"This is a line in file 'f'.\n"</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_stringbuf_t</name> *</type><name>f</name> <init>= <expr><call><name>svn_stringbuf_create</name><argument_list>(<argument><expr><name>one_line</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "test skip deltas"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-skip-deltas"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_make_file</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"f"</expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__set_file_contents</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"f"</expr></argument>, <argument><expr><name><name>f</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_deltify_revision</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while <condition>(<expr><name>youngest_rev</name> &lt;= 128</expr>)</condition> <block>{
<expr_stmt><expr><call><name>svn_stringbuf_appendcstr</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>one_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__set_file_contents</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"f"</expr></argument>, <argument><expr><name><name>f</name>-&gt;<name>data</name></name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_deltify_revision</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></while>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr>1</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__get_file_contents</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"f"</expr></argument>, <argument><expr>&amp;<name>f</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>one_line</name></expr></argument>, <argument><expr><name><name>f</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></call> != 0</expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Wrong contents. Expected:\n '%s'\nGot:\n '%s'\n"</expr></argument>,
<argument><expr><name>one_line</name></expr></argument>, <argument><expr><name><name>f</name>-&gt;<name>data</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<struct>struct <name>get_txn_args</name> <block>{
<decl_stmt><decl><type><name>transaction_t</name> **</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>txn_body_get_txn</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>get_txn_args</name> *</type><name>args</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>svn_fs_bdb__get_txn</name><argument_list>(<argument><expr><name><name>args</name>-&gt;<name>txn</name></name></expr></argument>, <argument><expr><name><name>args</name>-&gt;<name>fs</name></name></expr></argument>, <argument><expr><name><name>args</name>-&gt;<name>txn_name</name></name></expr></argument>,
<argument><expr><name>trail</name></expr></argument>, <argument><expr><name><name>trail</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>redundant_copy</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>transaction_t</name> *</type><name>transaction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>, *<decl><type ref="prev"/><name>rev_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>old_D_id</name></decl>, *<decl><type ref="prev"/><name>new_D_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>youngest_rev</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>get_txn_args</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>msg</name> = "ensure no-op for redundant copies"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_fs</name><argument_list>(<argument><expr>&amp;<name>fs</name></expr></argument>, <argument><expr>"test-repo-redundant-copy"</expr></argument>,
<argument><expr>"bdb"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_test__create_greek_tree</name><argument_list>(<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_commit_txn</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>youngest_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_begin_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_name</name><argument_list>(<argument><expr>&amp;<name>txn_name</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_revision_root</name><argument_list>(<argument><expr>&amp;<name>rev_root</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>youngest_rev</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_copy</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"A"</expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"Z"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name>.<name>fs</name></name> = <name>fs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name>.<name>txn_name</name></name> = <name>txn_name</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name>.<name>txn</name></name> = &amp;<name>transaction</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_base__retry_txn</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>txn_body_get_txn</name></expr></argument>, <argument><expr>&amp;<name>args</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>transaction</name>-&gt;<name>copies</name>-&gt;<name>nelts</name></name> != 1</expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Expected 1 copy; got %d"</expr></argument>,
<argument><expr><name><name>transaction</name>-&gt;<name>copies</name>-&gt;<name>nelts</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>old_D_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_copy</name><argument_list>(<argument><expr><name>rev_root</name></expr></argument>, <argument><expr>"A/D/G"</expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"Z/D/G"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_base__retry_txn</name><argument_list>(<argument><expr><name>fs</name></expr></argument>, <argument><expr><name>txn_body_get_txn</name></expr></argument>, <argument><expr>&amp;<name>args</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>transaction</name>-&gt;<name>copies</name>-&gt;<name>nelts</name></name> != 1</expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Expected only 1 copy; got %d"</expr></argument>,
<argument><expr><name><name>transaction</name>-&gt;<name>copies</name>-&gt;<name>nelts</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>new_D_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>, <argument><expr>"A/D"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <call><name>svn_string_compare</name><argument_list>(<argument><expr><call><name>svn_fs_unparse_id</name><argument_list>(<argument><expr><name>old_D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_fs_unparse_id</name><argument_list>(<argument><expr><name>new_D_id</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name>
<argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"Expected equivalent node-rev-ids; got differing ones"</expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type>struct <name>svn_test_descriptor_t</name></type> <name><name>test_funcs</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>SVN_TEST_NULL</name></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>create_berkeley_filesystem</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>open_berkeley_filesystem</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>delete_mutables</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>delete</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>abort_txn</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>create_within_copy</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>canonicalize_abspath</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>skip_deltas</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>redundant_copy</name></expr></argument>)</argument_list></call></expr>,
<expr><name>SVN_TEST_NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
