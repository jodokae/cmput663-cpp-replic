<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/tests/libsvn_subr/compat-test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_version.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../svn_test.h"</cpp:file></cpp:include>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>test_version_compatibility</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>msg</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>msg_only</name></decl></param>,
<param><decl><type><name>svn_test_opts_t</name> *</type><name>opts</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<struct>struct <name>version_pair</name> <block>{
<decl_stmt><decl><type><name>svn_version_t</name></type> <name>my_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_version_t</name></type> <name>lib_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>result</name></decl>;</decl_stmt>
}</block> <decl><name><name>versions</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>2</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>2</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"cev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"eev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>TRUE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>2</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
<expr><block>{ <expr><block>{<expr>1</expr>, <expr>0</expr>, <expr>0</expr>, <expr>"dev"</expr>}</block></expr>, <expr><block>{<expr>2</expr>, <expr>0</expr>, <expr>0</expr>, <expr>""</expr>}</block></expr>, <expr><name>FALSE</name></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>
<expr_stmt><expr>*<name>msg</name> = "svn_ver_compatible"</expr>;</expr_stmt>
<if>if <condition>(<expr><name>msg_only</name></expr>)</condition><then>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>
<for>for (<init><expr><name>i</name> = 0</expr>;</init> <condition><expr><name>i</name> &lt; <sizeof>sizeof<argument_list>(<argument><expr><name>versions</name></expr></argument>)</argument_list></sizeof>/<sizeof>sizeof<argument_list>(<argument><expr><name><name>versions</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr>++<name>i</name></expr></incr>) <block>{
<if>if <condition>(<expr><call><name>svn_ver_compatible</name><argument_list>(<argument><expr>&amp;<name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name>my_version</name></expr></argument>,
<argument><expr>&amp;<name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name>lib_version</name></expr></argument>)</argument_list></call> != <name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name>result</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name>
<argument_list>(<argument><expr><name>SVN_ERR_TEST_FAILED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>"svn_ver_compatible (%d.%d.%d(%s), %d.%d.%d(%s)) failed"</expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>my_version</name>.<name>major</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>my_version</name>.<name>minor</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>my_version</name>.<name>patch</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>my_version</name>.<name>tag</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>lib_version</name>.<name>major</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>lib_version</name>.<name>minor</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>lib_version</name>.<name>patch</name></name></expr></argument>,
<argument><expr><name><name>versions</name><index>[<expr><name>i</name></expr>]</index></name>.<name><name>lib_version</name>.<name>tag</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></for>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type>struct <name>svn_test_descriptor_t</name></type> <name><name>test_funcs</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>SVN_TEST_NULL</name></expr>,
<expr><call><name>SVN_TEST_PASS</name><argument_list>(<argument><expr><name>test_version_compatibility</name></expr></argument>)</argument_list></call></expr>,
<expr><name>SVN_TEST_NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
