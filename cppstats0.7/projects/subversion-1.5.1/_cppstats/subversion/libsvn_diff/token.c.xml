<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_diff/token.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_general.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_diff.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"diff.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DIFF__HASH_SIZE</name></cpp:macro> <cpp:value>127</cpp:value></cpp:define>
<struct>struct <name>svn_diff__node_t</name> <block>{
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>right</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uint32_t</name></type> <name>hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>token</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>svn_diff__tree_t</name> <block>{
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name><name>root</name><index>[<expr><name>SVN_DIFF__HASH_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><name>void</name></type>
<name>svn_diff__tree_create</name><parameter_list>(<param><decl><type><name>svn_diff__tree_t</name> **</type><name>tree</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr>*<name>tree</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>**<name>tree</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>(*<name>tree</name>)-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>svn_diff__tree_insert_token</name><parameter_list>(<param><decl><type><name>svn_diff__node_t</name> **</type><name>node</name></decl></param>, <param><decl><type><name>svn_diff__tree_t</name> *</type><name>tree</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_diff_fns_t</name> *</type><name>vtable</name></decl></param>,
<param><decl><type><name>apr_uint32_t</name></type> <name>hash</name></decl></param>, <param><decl><type><name>void</name> *</type><name>token</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>new_node</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__node_t</name> **</type><name>node_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rv</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name>token</name></expr>)</condition><then>
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt></then></if>
<expr_stmt><expr><name>parent</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>node_ref</name> = &amp;<name><name>tree</name>-&gt;<name>root</name><index>[<expr><name>hash</name> % <name>SVN_DIFF__HASH_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
<while>while <condition>(<expr>*<name>node_ref</name> != <name>NULL</name></expr>)</condition> <block>{
<expr_stmt><expr><name>parent</name> = *<name>node_ref</name></expr>;</expr_stmt>
<expr_stmt><expr><name>rv</name> = <name>hash</name> - <name><name>parent</name>-&gt;<name>hash</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>rv</name></expr>)</condition><then>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>vtable</name>-&gt;<name>token_compare</name></name><argument_list>(<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name><name>parent</name>-&gt;<name>token</name></name></expr></argument>, <argument><expr><name>token</name></expr></argument>, <argument><expr>&amp;<name>rv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<if>if <condition>(<expr><name>rv</name> == 0</expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>vtable</name>-&gt;<name>token_discard</name></name> != <name>NULL</name></expr>)</condition><then>
<expr_stmt><expr><call><name><name>vtable</name>-&gt;<name>token_discard</name></name><argument_list>(<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name><name>parent</name>-&gt;<name>token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<expr_stmt><expr><name><name>parent</name>-&gt;<name>token</name></name> = <name>token</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>node</name> = <name>parent</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><name>rv</name> &gt; 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>node_ref</name> = &amp;<name><name>parent</name>-&gt;<name>left</name></name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>node_ref</name> = &amp;<name><name>parent</name>-&gt;<name>right</name></name></expr>;</expr_stmt>
}</block></else></if></else></if>
}</block></while>
<expr_stmt><expr><name>new_node</name> = <call><name>apr_palloc</name><argument_list>(<argument><expr><name><name>tree</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>new_node</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_node</name>-&gt;<name>parent</name></name> = <name>parent</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_node</name>-&gt;<name>left</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_node</name>-&gt;<name>right</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_node</name>-&gt;<name>hash</name></name> = <name>hash</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_node</name>-&gt;<name>token</name></name> = <name>token</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>node</name> = *<name>node_ref</name> = <name>new_node</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_diff__get_tokens</name><parameter_list>(<param><decl><type><name>svn_diff__position_t</name> **</type><name>position_list</name></decl></param>,
<param><decl><type><name>svn_diff__tree_t</name> *</type><name>tree</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_diff_fns_t</name> *</type><name>vtable</name></decl></param>,
<param><decl><type><name>svn_diff_datasource_e</name></type> <name>datasource</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_diff__position_t</name> *</type><name>start_position</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__position_t</name> *</type><name>position</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__position_t</name> **</type><name>position_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_diff__node_t</name> *</type><name>node</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>token</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_uint32_t</name></type> <name>hash</name></decl>;</decl_stmt>
<expr_stmt><expr>*<name>position_list</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>vtable</name>-&gt;<name>datasource_open</name></name><argument_list>(<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name>datasource</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>position_ref</name> = &amp;<name>start_position</name></expr>;</expr_stmt>
<expr_stmt><expr><name>offset</name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name>hash</name> = 0</expr>;</expr_stmt>
<while>while <condition>(<expr>1</expr>)</condition> <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>vtable</name>-&gt;<name>datasource_get_next_token</name></name><argument_list>(<argument><expr>&amp;<name>hash</name></expr></argument>, <argument><expr>&amp;<name>token</name></expr></argument>,
<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name>datasource</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>token</name> == <name>NULL</name></expr>)</condition><then>
<break>break;</break></then></if>
<expr_stmt><expr><name>offset</name>++</expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_diff__tree_insert_token</name><argument_list>(<argument><expr>&amp;<name>node</name></expr></argument>, <argument><expr><name>tree</name></expr></argument>,
<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name>vtable</name></expr></argument>,
<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>position</name> = <call><name>apr_palloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>position</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>position</name>-&gt;<name>next</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>position</name>-&gt;<name>node</name></name> = <name>node</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>position</name>-&gt;<name>offset</name></name> = <name>offset</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>position_ref</name> = <name>position</name></expr>;</expr_stmt>
<expr_stmt><expr><name>position_ref</name> = &amp;<name><name>position</name>-&gt;<name>next</name></name></expr>;</expr_stmt>
}</block></while>
<expr_stmt><expr>*<name>position_ref</name> = <name>start_position</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>vtable</name>-&gt;<name>datasource_close</name></name><argument_list>(<argument><expr><name>diff_baton</name></expr></argument>, <argument><expr><name>datasource</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>*<name>position_list</name> = <name>position</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
