<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_config.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type>struct <name>svn_config_t</name></type> <name>svn_config_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_CATEGORY_SERVERS</name></cpp:macro> <cpp:value>"servers"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_GROUPS</name></cpp:macro> <cpp:value>"groups"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_GLOBAL</name></cpp:macro> <cpp:value>"global"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_PROXY_HOST</name></cpp:macro> <cpp:value>"http-proxy-host"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_PROXY_PORT</name></cpp:macro> <cpp:value>"http-proxy-port"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_PROXY_USERNAME</name></cpp:macro> <cpp:value>"http-proxy-username"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_PROXY_PASSWORD</name></cpp:macro> <cpp:value>"http-proxy-password"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_PROXY_EXCEPTIONS</name></cpp:macro> <cpp:value>"http-proxy-exceptions"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_TIMEOUT</name></cpp:macro> <cpp:value>"http-timeout"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_COMPRESSION</name></cpp:macro> <cpp:value>"http-compression"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_NEON_DEBUG_MASK</name></cpp:macro> <cpp:value>"neon-debug-mask"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_AUTH_TYPES</name></cpp:macro> <cpp:value>"http-auth-types"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_SSL_AUTHORITY_FILES</name></cpp:macro> <cpp:value>"ssl-authority-files"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_SSL_TRUST_DEFAULT_CA</name></cpp:macro> <cpp:value>"ssl-trust-default-ca"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_SSL_CLIENT_CERT_FILE</name></cpp:macro> <cpp:value>"ssl-client-cert-file"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_SSL_CLIENT_CERT_PASSWORD</name></cpp:macro> <cpp:value>"ssl-client-cert-password"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_SSL_PKCS11_PROVIDER</name></cpp:macro> <cpp:value>"ssl-pkcs11-provider"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_HTTP_LIBRARY</name></cpp:macro> <cpp:value>"http-library"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_CATEGORY_CONFIG</name></cpp:macro> <cpp:value>"config"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_AUTH</name></cpp:macro> <cpp:value>"auth"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_STORE_PASSWORDS</name></cpp:macro> <cpp:value>"store-passwords"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_STORE_AUTH_CREDS</name></cpp:macro> <cpp:value>"store-auth-creds"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_HELPERS</name></cpp:macro> <cpp:value>"helpers"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_EDITOR_CMD</name></cpp:macro> <cpp:value>"editor-cmd"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_DIFF_CMD</name></cpp:macro> <cpp:value>"diff-cmd"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_DIFF3_CMD</name></cpp:macro> <cpp:value>"diff3-cmd"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_DIFF3_HAS_PROGRAM_ARG</name></cpp:macro> <cpp:value>"diff3-has-program-arg"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_MERGE_TOOL_CMD</name></cpp:macro> <cpp:value>"merge-tool-cmd"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_MISCELLANY</name></cpp:macro> <cpp:value>"miscellany"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_GLOBAL_IGNORES</name></cpp:macro> <cpp:value>"global-ignores"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_LOG_ENCODING</name></cpp:macro> <cpp:value>"log-encoding"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_USE_COMMIT_TIMES</name></cpp:macro> <cpp:value>"use-commit-times"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_TEMPLATE_ROOT</name></cpp:macro> <cpp:value>"template-root"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_ENABLE_AUTO_PROPS</name></cpp:macro> <cpp:value>"enable-auto-props"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_NO_UNLOCK</name></cpp:macro> <cpp:value>"no-unlock"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_MIMETYPES_FILE</name></cpp:macro> <cpp:value>"mime-types-file"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_PRESERVED_CF_EXTS</name></cpp:macro> <cpp:value>"preserved-conflict-file-exts"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_INTERACTIVE_CONFLICTS</name></cpp:macro> <cpp:value>"interactive-conflicts"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_TUNNELS</name></cpp:macro> <cpp:value>"tunnels"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_AUTO_PROPS</name></cpp:macro> <cpp:value>"auto-props"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_GENERAL</name></cpp:macro> <cpp:value>"general"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_ANON_ACCESS</name></cpp:macro> <cpp:value>"anon-access"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_AUTH_ACCESS</name></cpp:macro> <cpp:value>"auth-access"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_PASSWORD_DB</name></cpp:macro> <cpp:value>"password-db"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_REALM</name></cpp:macro> <cpp:value>"realm"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_AUTHZ_DB</name></cpp:macro> <cpp:value>"authz-db"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_SASL</name></cpp:macro> <cpp:value>"sasl"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_USE_SASL</name></cpp:macro> <cpp:value>"use-sasl"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_MIN_SSF</name></cpp:macro> <cpp:value>"min-encryption"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_OPTION_MAX_SSF</name></cpp:macro> <cpp:value>"max-encryption"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_SECTION_USERS</name></cpp:macro> <cpp:value>"users"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_1</name></cpp:macro> <cpp:value>"*.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_2</name></cpp:macro> <cpp:value>"*.rej *~ #*#.#* .*.swp .DS_Store"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_DEFAULT_GLOBAL_IGNORES</name></cpp:macro> <cpp:value>SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_1 " " SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_TRUE</name></cpp:macro> <cpp:value>"TRUE"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_FALSE</name></cpp:macro> <cpp:value>"FALSE"</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_get_config</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>cfg_hash</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_read</name><parameter_list>(<param><decl><type><name>svn_config_t</name> **</type><name>cfgp</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>file</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>must_exist</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_merge</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>file</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>must_exist</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_config_get</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>valuep</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>option</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>default_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_config_set</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>option</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_get_bool</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><name>svn_boolean_t</name> *</type><name>valuep</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>option</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>default_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_config_set_bool</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>option</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>value</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_boolean_t</name></type> (*<name>svn_config_section_enumerator_t</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>int</name></type> <name>svn_config_enumerate_sections</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><name>svn_config_section_enumerator_t</name></type> <name>callback</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_boolean_t</name></type> (*<name>svn_config_section_enumerator2_t</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>int</name></type> <name>svn_config_enumerate_sections2</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><name>svn_config_section_enumerator2_t</name></type> <name>callback</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_boolean_t</name></type> (*<name>svn_config_enumerator_t</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>int</name></type> <name>svn_config_enumerate</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>,
<param><decl><type><name>svn_config_enumerator_t</name></type> <name>callback</name></decl></param>, <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_boolean_t</name></type> (*<name>svn_config_enumerator2_t</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>int</name></type> <name>svn_config_enumerate2</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>,
<param><decl><type><name>svn_config_enumerator2_t</name></type> <name>callback</name></decl></param>, <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_config_has_section</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>section</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_config_find_group</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>key</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>master_section</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_config_get_server_setting</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name>*</type> <name>server_group</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name>*</type> <name>option_name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name>*</type> <name>default_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_get_server_setting_int</name><parameter_list>(<param><decl><type><name>svn_config_t</name> *</type><name>cfg</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>server_group</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>option_name</name></decl></param>,
<param><decl><type><name>apr_int64_t</name></type> <name>default_value</name></decl></param>,
<param><decl><type><name>apr_int64_t</name> *</type><name>result_value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_config_ensure</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_CONFIG_REALMSTRING_KEY</name></cpp:macro> <cpp:value>"svn:realmstring"</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_config_read_auth_data</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>hash</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cred_kind</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realmstring</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_config_write_auth_data</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>hash</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cred_kind</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realmstring</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
