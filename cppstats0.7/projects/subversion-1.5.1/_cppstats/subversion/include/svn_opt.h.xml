<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_opt.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_OPTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_OPTS_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_getopt.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(<name>svn_opt_subcommand_t</name>)
<parameter_list>(<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>, <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_OPT_MAX_ALIASES</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_OPT_MAX_OPTIONS</name></cpp:macro> <cpp:value>50</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_OPT_FIRST_LONGOPT_ID</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>svn_opt_subcommand_desc2_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_subcommand_t</name> *</type><name>cmd_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name><name>aliases</name><index>[<expr><name>SVN_OPT_MAX_ALIASES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>help</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>valid_options</name><index>[<expr><name>SVN_OPT_MAX_OPTIONS</name></expr>]</index></name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>optch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>desc</name></decl>;</decl_stmt>
}</block> <decl><name><name>desc_overrides</name><index>[<expr><name>SVN_OPT_MAX_OPTIONS</name></expr>]</index></name></decl>;</struct>
}</block></struct></type> <name>svn_opt_subcommand_desc2_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_opt_subcommand_desc_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_subcommand_t</name> *</type><name>cmd_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name><name>aliases</name><index>[<expr><name>SVN_OPT_MAX_ALIASES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>help</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>valid_options</name><index>[<expr><name>SVN_OPT_MAX_OPTIONS</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_opt_subcommand_desc_t</name>;</typedef>
<function_decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type>
<name>svn_opt_get_canonical_subcommand2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cmd_name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type>
<name>svn_opt_get_canonical_subcommand</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cmd_name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type>
<name>svn_opt_get_option_from_code2</name><parameter_list>(<param><decl><type><name>int</name></type> <name>code</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>option_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>command</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type>
<name>svn_opt_get_option_from_code</name><parameter_list>(<param><decl><type><name>int</name></type> <name>code</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>option_table</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_opt_subcommand_takes_option3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>command</name></decl></param>,
<param><decl><type><name>int</name></type> <name>option_code</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>int</name> *</type><name>global_options</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_opt_subcommand_takes_option2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>command</name></decl></param>,
<param><decl><type><name>int</name></type> <name>option_code</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_opt_subcommand_takes_option</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type><name>command</name></decl></param>,
<param><decl><type><name>int</name></type> <name>option_code</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_print_generic_help2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>cmd_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>opt_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>footer</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>FILE</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_print_generic_help</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type><name>cmd_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>opt_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>footer</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>FILE</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_format_option</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>string</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>opt</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>doc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_subcommand_help3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>subcommand</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>options_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>int</name> *</type><name>global_options</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_subcommand_help2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>subcommand</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>options_table</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_opt_subcommand_help</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>subcommand</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>options_table</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<enum>enum <name>svn_opt_revision_kind</name> <block>{
<decl><name>svn_opt_revision_unspecified</name></decl>,
<decl><name>svn_opt_revision_number</name></decl>,
<decl><name>svn_opt_revision_date</name></decl>,
<decl><name>svn_opt_revision_committed</name></decl>,
<decl><name>svn_opt_revision_previous</name></decl>,
<decl><name>svn_opt_revision_base</name></decl>,
<decl><name>svn_opt_revision_working</name></decl>,
<decl><name>svn_opt_revision_head</name></decl>
}</block>;</enum>
<typedef>typedef <type><union>union <name>svn_opt_revision_value_t</name> <block>{
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>date</name></decl>;</decl_stmt>
}</block></union></type> <name>svn_opt_revision_value_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_opt_revision_t</name> <block>{
<enum>enum <name>svn_opt_revision_kind</name> <name>kind</name>;</enum>
<decl_stmt><decl><type><name>svn_opt_revision_value_t</name></type> <name>value</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_opt_revision_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_opt_revision_range_t</name> <block>{
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>end</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_opt_revision_range_t</name>;</typedef>
<function_decl><type><name>int</name></type> <name>svn_opt_parse_revision</name><parameter_list>(<param><decl><type><name>svn_opt_revision_t</name> *</type><name>start_revision</name></decl></param>,
<param><decl><type><name>svn_opt_revision_t</name> *</type><name>end_revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>arg</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type>
<name>svn_opt_parse_revision_to_range</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>opt_ranges</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>arg</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_resolve_revisions</name><parameter_list>(<param><decl><type><name>svn_opt_revision_t</name> *</type><name>peg_rev</name></decl></param>,
<param><decl><type><name>svn_opt_revision_t</name> *</type><name>op_rev</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>is_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>notice_local_mods</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_args_to_target_array3</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>targets_p</name></decl></param>,
<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>known_targets</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_args_to_target_array2</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>targets_p</name></decl></param>,
<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>known_targets</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_args_to_target_array</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>targets_p</name></decl></param>,
<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>known_targets</name></decl></param>,
<param><decl><type><name>svn_opt_revision_t</name> *</type><name>start_revision</name></decl></param>,
<param><decl><type><name>svn_opt_revision_t</name> *</type><name>end_revision</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>extract_revisions</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_opt_push_implicit_dot_target</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>targets</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_parse_num_args</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>args_p</name></decl></param>,
<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>int</name></type> <name>num_args</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_parse_all_args</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>args_p</name></decl></param>,
<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_parse_path</name><parameter_list>(<param><decl><type><name>svn_opt_revision_t</name> *</type><name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>truepath</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_print_help3</name><parameter_list>(<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>pgm_name</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>print_version</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>quiet</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>version_footer</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>cmd_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>option_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>int</name> *</type><name>global_options</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>footer</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_print_help2</name><parameter_list>(<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>pgm_name</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>print_version</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>quiet</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>version_footer</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc2_t</name> *</type><name>cmd_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>option_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>footer</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_opt_print_help</name><parameter_list>(<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>pgm_name</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>print_version</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>quiet</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>version_footer</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_subcommand_desc_t</name> *</type><name>cmd_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_getopt_option_t</name> *</type><name>option_table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>footer</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
