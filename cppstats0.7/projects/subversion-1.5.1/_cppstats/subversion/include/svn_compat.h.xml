<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_compat.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_COMPAT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_COMPAT_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_hash.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>void</name></type> <name>svn_compat_wrap_commit_callback</name><parameter_list>(<param><decl><type><name>svn_commit_callback2_t</name> *</type><name>callback2</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>callback2_baton</name></decl></param>,
<param><decl><type><name>svn_commit_callback_t</name></type> <name>callback</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_compat_log_revprops_clear</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>revprops</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_array_header_t</name> *</type>
<name>svn_compat_log_revprops_in</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_compat_log_revprops_out</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>author</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>message</name></decl></param>, <param><decl><type><name>apr_hash_t</name> *</type><name>revprops</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_compat_wrap_log_receiver</name><parameter_list>(<param><decl><type><name>svn_log_entry_receiver_t</name> *</type><name>receiver2</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>receiver2_baton</name></decl></param>,
<param><decl><type><name>svn_log_message_receiver_t</name></type> <name>receiver</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>receiver_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
