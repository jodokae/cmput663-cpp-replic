<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_mergeinfo.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_MERGEINFO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_MERGEINFO_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_hash.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_MERGEINFO_NONINHERITABLE_STR</name></cpp:macro> <cpp:value>"*"</cpp:value></cpp:define>
<typedef>typedef <type><name>apr_hash_t</name> *</type><name>svn_mergeinfo_t</name>;</typedef>
<typedef>typedef <type><name>apr_hash_t</name> *</type><name>svn_mergeinfo_catalog_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_parse</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name> *</type><name>mergeinfo</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>input</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_diff</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name> *</type><name>deleted</name></decl></param>, <param><decl><type><name>svn_mergeinfo_t</name> *</type><name>added</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergefrom</name></decl></param>, <param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeto</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>consider_inheritance</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_merge</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo</name></decl></param>, <param><decl><type><name>svn_mergeinfo_t</name></type> <name>changes</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_remove</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name> *</type><name>mergeinfo</name></decl></param>, <param><decl><type><name>svn_mergeinfo_t</name></type> <name>eraser</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>whiteboard</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_diff</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>deleted</name></decl></param>, <param><decl><type><name>apr_array_header_t</name> **</type><name>added</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>from</name></decl></param>, <param><decl><type><name>apr_array_header_t</name> *</type><name>to</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>consider_inheritance</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_merge</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>rangelist</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>changes</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_remove</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>output</name></decl></param>, <param><decl><type><name>apr_array_header_t</name> *</type><name>eraser</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>whiteboard</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>consider_inheritance</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_intersect</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name> *</type><name>mergeinfo</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo1</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo2</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_intersect</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>rangelist</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>rangelist1</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>rangelist2</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>consider_inheritance</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_reverse</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>rangelist</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_to_string</name><parameter_list>(<param><decl><type><name>svn_string_t</name> **</type><name>output</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>rangelist</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_rangelist_inheritable</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>inheritable_rangelist</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>rangelist</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_inheritable</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name> *</type><name>inheritable_mergeinfo</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_to_string</name><parameter_list>(<param><decl><type><name>svn_string_t</name> **</type><name>output</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinput</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_mergeinfo_sort</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_mergeinfo_t</name></type>
<name>svn_mergeinfo_dup</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_t</name></type> <name>mergeinfo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_array_header_t</name> *</type>
<name>svn_rangelist_dup</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>rangelist</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <block>{
<decl><name>svn_mergeinfo_explicit</name></decl>,
<decl><name>svn_mergeinfo_inherited</name></decl>,
<decl><name>svn_mergeinfo_nearest_ancestor</name></decl>
}</block></enum></type> <name>svn_mergeinfo_inheritance_t</name>;</typedef>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>svn_inheritance_to_word</name><parameter_list>(<param><decl><type><name>svn_mergeinfo_inheritance_t</name></type> <name>inherit</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_mergeinfo_inheritance_t</name></type>
<name>svn_inheritance_from_word</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>word</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
