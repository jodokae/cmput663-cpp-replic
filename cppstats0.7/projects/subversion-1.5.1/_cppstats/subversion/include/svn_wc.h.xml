<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_wc.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_WC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_hash.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_delta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_ra.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>const</specifier> <name>svn_version_t</name> *</type><name>svn_wc_version</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_FROM_NF</name></cpp:macro> <cpp:value>0x00000000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_TO_NF</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_FORCE_EOL_REPAIR</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_NO_OUTPUT_CLEANUP</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_FORCE_COPY</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_TRANSLATE_USE_GLOBAL_TMP</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define>
<typedef>typedef <type>struct <name>svn_wc_adm_access_t</name></type> <name>svn_wc_adm_access_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_open3</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_open2</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_open</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>tree_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_open3</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_open2</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_open</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>tree_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_open_anchor</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>anchor_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>target_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_retrieve</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_retrieve</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_try3</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_try2</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>int</name></type> <name>levels_to_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_adm_probe_try</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> **</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>associated</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_lock</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>tree_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc_adm_close</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_wc_adm_access_path</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_pool_t</name> *</type><name>svn_wc_adm_access_pool</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc_adm_locked</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_locked</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>locked</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc_is_adm_dir</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_wc_get_adm_dir</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc_set_adm_dir</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type>struct <name>svn_wc_traversal_info_t</name></type> <name>svn_wc_traversal_info_t</name>;</typedef>
<function_decl><type><name>svn_wc_traversal_info_t</name> *</type><name>svn_wc_init_traversal_info</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_wc_edited_externals</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>externals_old</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>externals_new</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_wc_traversed_depths</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>depths</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_wc_external_item2_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>peg_revision</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_external_item2_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_external_item_create</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_external_item2_t</name> **</type><name>item</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_wc_external_item2_t</name> *</type>
<name>svn_wc_external_item2_dup</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_external_item2_t</name> *</type><name>item</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_wc_external_item_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>revision</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_external_item_t</name>;</typedef>
<function_decl><type><name>svn_wc_external_item_t</name> *</type>
<name>svn_wc_external_item_dup</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_external_item_t</name> *</type><name>item</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_parse_externals_description3</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>externals_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>parent_directory</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>desc</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>canonicalize_url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_parse_externals_description2</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>externals_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>parent_directory</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>desc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_parse_externals_description</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>externals_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>parent_directory</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>desc</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <name>svn_wc_notify_action_t</name> <block>{
<decl><name>svn_wc_notify_add</name> <init>= <expr>0</expr></init></decl>,
<decl><name>svn_wc_notify_copy</name></decl>,
<decl><name>svn_wc_notify_delete</name></decl>,
<decl><name>svn_wc_notify_restore</name></decl>,
<decl><name>svn_wc_notify_revert</name></decl>,
<decl><name>svn_wc_notify_failed_revert</name></decl>,
<decl><name>svn_wc_notify_resolved</name></decl>,
<decl><name>svn_wc_notify_skip</name></decl>,
<decl><name>svn_wc_notify_update_delete</name></decl>,
<decl><name>svn_wc_notify_update_add</name></decl>,
<decl><name>svn_wc_notify_update_update</name></decl>,
<decl><name>svn_wc_notify_update_completed</name></decl>,
<decl><name>svn_wc_notify_update_external</name></decl>,
<decl><name>svn_wc_notify_status_completed</name></decl>,
<decl><name>svn_wc_notify_status_external</name></decl>,
<decl><name>svn_wc_notify_commit_modified</name></decl>,
<decl><name>svn_wc_notify_commit_added</name></decl>,
<decl><name>svn_wc_notify_commit_deleted</name></decl>,
<decl><name>svn_wc_notify_commit_replaced</name></decl>,
<decl><name>svn_wc_notify_commit_postfix_txdelta</name></decl>,
<decl><name>svn_wc_notify_blame_revision</name></decl>,
<decl><name>svn_wc_notify_locked</name></decl>,
<decl><name>svn_wc_notify_unlocked</name></decl>,
<decl><name>svn_wc_notify_failed_lock</name></decl>,
<decl><name>svn_wc_notify_failed_unlock</name></decl>,
<decl><name>svn_wc_notify_exists</name></decl>,
<decl><name>svn_wc_notify_changelist_set</name></decl>,
<decl><name>svn_wc_notify_changelist_clear</name></decl>,
<decl><name>svn_wc_notify_changelist_moved</name></decl>,
<decl><name>svn_wc_notify_merge_begin</name></decl>,
<decl><name>svn_wc_notify_foreign_merge_begin</name></decl>,
<decl><name>svn_wc_notify_update_replace</name></decl>
}</block></enum></type> <name>svn_wc_notify_action_t</name>;</typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_notify_state_t</name> <block>{
<decl><name>svn_wc_notify_state_inapplicable</name> <init>= <expr>0</expr></init></decl>,
<decl><name>svn_wc_notify_state_unknown</name></decl>,
<decl><name>svn_wc_notify_state_unchanged</name></decl>,
<decl><name>svn_wc_notify_state_missing</name></decl>,
<decl><name>svn_wc_notify_state_obstructed</name></decl>,
<decl><name>svn_wc_notify_state_changed</name></decl>,
<decl><name>svn_wc_notify_state_merged</name></decl>,
<decl><name>svn_wc_notify_state_conflicted</name></decl>
}</block></enum></type> <name>svn_wc_notify_state_t</name>;</typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_notify_lock_state_t</name> <block>{
<decl><name>svn_wc_notify_lock_state_inapplicable</name> <init>= <expr>0</expr></init></decl>,
<decl><name>svn_wc_notify_lock_state_unknown</name></decl>,
<decl><name>svn_wc_notify_lock_state_unchanged</name></decl>,
<decl><name>svn_wc_notify_lock_state_locked</name></decl>,
<decl><name>svn_wc_notify_lock_state_unlocked</name></decl>
}</block></enum></type> <name>svn_wc_notify_lock_state_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_notify_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_lock_t</name> *</type><name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_notify_state_t</name></type> <name>content_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_notify_state_t</name></type> <name>prop_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_notify_lock_state_t</name></type> <name>lock_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>changelist_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_merge_range_t</name> *</type><name>merge_range</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_notify_t</name>;</typedef>
<function_decl><type><name>svn_wc_notify_t</name> *</type>
<name>svn_wc_create_notify</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_wc_notify_t</name> *</type>
<name>svn_wc_dup_notify</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_notify_t</name> *</type><name>notify</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>void</name></type> (*<name>svn_wc_notify_func2_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_notify_t</name> *</type><name>notify</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (*<name>svn_wc_notify_func_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>,
<param><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>content_state</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>prop_state</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_get_file_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>fetched_rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_conflict_action_t</name> <block>{
<decl><name>svn_wc_conflict_action_edit</name></decl>,
<decl><name>svn_wc_conflict_action_add</name></decl>,
<decl><name>svn_wc_conflict_action_delete</name></decl>
}</block></enum></type> <name>svn_wc_conflict_action_t</name>;</typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_conflict_reason_t</name> <block>{
<decl><name>svn_wc_conflict_reason_edited</name></decl>,
<decl><name>svn_wc_conflict_reason_obstructed</name></decl>,
<decl><name>svn_wc_conflict_reason_deleted</name></decl>,
<decl><name>svn_wc_conflict_reason_missing</name></decl>,
<decl><name>svn_wc_conflict_reason_unversioned</name></decl>
}</block></enum></type> <name>svn_wc_conflict_reason_t</name>;</typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_conflict_kind_t</name> <block>{
<decl><name>svn_wc_conflict_kind_text</name></decl>,
<decl><name>svn_wc_conflict_kind_property</name></decl>
}</block></enum></type> <name>svn_wc_conflict_kind_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_conflict_description_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_node_kind_t</name></type> <name>node_kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_conflict_kind_t</name></type> <name>kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>property_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>is_binary</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_adm_access_t</name> *</type><name>access</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_conflict_action_t</name></type> <name>action</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_conflict_reason_t</name></type> <name>reason</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>their_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>my_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>merged_file</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_conflict_description_t</name>;</typedef>
<typedef>typedef <type><enum>enum <name>svn_wc_conflict_choice_t</name> <block>{
<decl><name>svn_wc_conflict_choose_postpone</name></decl>,
<decl><name>svn_wc_conflict_choose_base</name></decl>,
<decl><name>svn_wc_conflict_choose_theirs_full</name></decl>,
<decl><name>svn_wc_conflict_choose_mine_full</name></decl>,
<decl><name>svn_wc_conflict_choose_theirs_conflict</name></decl>,
<decl><name>svn_wc_conflict_choose_mine_conflict</name></decl>,
<decl><name>svn_wc_conflict_choose_merged</name></decl>
}</block></enum></type> <name>svn_wc_conflict_choice_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_conflict_result_t</name> <block>{
<decl_stmt><decl><type><name>svn_wc_conflict_choice_t</name></type> <name>choice</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>merged_file</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_conflict_result_t</name>;</typedef>
<function_decl><type><name>svn_wc_conflict_result_t</name> *</type>
<name>svn_wc_create_conflict_result</name><parameter_list>(<param><decl><type><name>svn_wc_conflict_choice_t</name></type> <name>choice</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>merged_file</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_conflict_resolver_func_t</name>)
<parameter_list>(<param><decl><type><name>svn_wc_conflict_result_t</name> **</type><name>result</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_conflict_description_t</name> *</type><name>description</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_diff_callbacks2_t</name> <block>{
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_changed</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>contentstate</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>propstate</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev1</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>originalprops</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_added</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>contentstate</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>propstate</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev1</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>originalprops</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_deleted</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>originalprops</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>dir_added</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>dir_deleted</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>dir_props_changed</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>original_props</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_wc_diff_callbacks2_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_diff_callbacks_t</name> <block>{
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_changed</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev1</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_added</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev1</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>file_deleted</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tmpfile2</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype1</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mimetype2</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>dir_added</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>dir_deleted</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>props_changed</name>)<parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>original_props</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_wc_diff_callbacks_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_check_wc</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>int</name> *</type><name>wc_format</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_has_binary_prop</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>has_binary_prop</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_text_modified_p</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>modified_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>filename</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force_comparison</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_props_modified_p</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>modified_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_ADM_DIR_NAME</name></cpp:macro> <cpp:value>".svn"</cpp:value></cpp:define>
<typedef>typedef <type><enum>enum <name>svn_wc_schedule_t</name> <block>{
<decl><name>svn_wc_schedule_normal</name></decl>,
<decl><name>svn_wc_schedule_add</name></decl>,
<decl><name>svn_wc_schedule_delete</name></decl>,
<decl><name>svn_wc_schedule_replace</name></decl>
}</block></enum></type> <name>svn_wc_schedule_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_ENTRY_WORKING_SIZE_UNKNOWN</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>svn_wc_entry_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_schedule_t</name></type> <name>schedule</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>copied</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>deleted</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>absent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>incomplete</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_old</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_new</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_wrk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>prejfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>text_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>prop_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>cmt_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>cmt_date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cmt_author</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lock_token</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lock_owner</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lock_comment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>lock_creation_date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>has_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>has_prop_mods</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cachable_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>present_props</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>changelist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>working_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>keep_local</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_entry_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_WC_ENTRY_THIS_DIR</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_entry</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> **</type><name>entry</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>show_hidden</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_entries_read</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>entries</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>show_hidden</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_wc_entry_t</name> *</type>
<name>svn_wc_entry_dup</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_conflicted_p</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>text_conflicted_p</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name> *</type><name>prop_conflicted_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dir_path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_ancestry</name><parameter_list>(<param><decl><type><name>char</name> **</type><name>url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_wc_entry_callbacks2_t</name> <block>{
<function_decl><type><name>svn_error_t</name> *</type>(*<name>found_entry</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>handle_error</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_error_t</name> *</type><name>err</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_wc_entry_callbacks2_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_entry_callbacks_t</name> <block>{
<function_decl><type><name>svn_error_t</name> *</type>(*<name>found_entry</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_wc_entry_callbacks_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_walk_entries3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_callbacks2_t</name>
*</type><name>walk_callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>show_hidden</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_walk_entries2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_callbacks_t</name>
*</type><name>walk_callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>show_hidden</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_walk_entries</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_callbacks_t</name>
*</type><name>walk_callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>walk_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>show_hidden</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_mark_missing_deleted</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_ensure_adm3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_ensure_adm2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_ensure_adm</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_maybe_set_repos_root</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<enum>enum <name>svn_wc_status_kind</name> <block>{
<decl><name>svn_wc_status_none</name> <init>= <expr>1</expr></init></decl>,
<decl><name>svn_wc_status_unversioned</name></decl>,
<decl><name>svn_wc_status_normal</name></decl>,
<decl><name>svn_wc_status_added</name></decl>,
<decl><name>svn_wc_status_missing</name></decl>,
<decl><name>svn_wc_status_deleted</name></decl>,
<decl><name>svn_wc_status_replaced</name></decl>,
<decl><name>svn_wc_status_modified</name></decl>,
<decl><name>svn_wc_status_merged</name></decl>,
<decl><name>svn_wc_status_conflicted</name></decl>,
<decl><name>svn_wc_status_ignored</name></decl>,
<decl><name>svn_wc_status_obstructed</name></decl>,
<decl><name>svn_wc_status_external</name></decl>,
<decl><name>svn_wc_status_incomplete</name></decl>
}</block>;</enum>
<typedef>typedef <type><struct>struct <name>svn_wc_status2_t</name> <block>{
<decl_stmt><decl><type><name>svn_wc_entry_t</name> *</type><name>entry</name></decl>;</decl_stmt>
<enum>enum <name>svn_wc_status_kind</name> <name>text_status</name>;</enum>
<enum>enum <name>svn_wc_status_kind</name> <name>prop_status</name>;</enum>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>locked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>copied</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>switched</name></decl>;</decl_stmt>
<enum>enum <name>svn_wc_status_kind</name> <name>repos_text_status</name>;</enum>
<enum>enum <name>svn_wc_status_kind</name> <name>repos_prop_status</name>;</enum>
<decl_stmt><decl><type><name>svn_lock_t</name> *</type><name>repos_lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>ood_last_cmt_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>ood_last_cmt_date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_node_kind_t</name></type> <name>ood_kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ood_last_cmt_author</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_wc_status2_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_wc_status_t</name> <block>{
<decl_stmt><decl><type><name>svn_wc_entry_t</name> *</type><name>entry</name></decl>;</decl_stmt>
<enum>enum <name>svn_wc_status_kind</name> <name>text_status</name>;</enum>
<enum>enum <name>svn_wc_status_kind</name> <name>prop_status</name>;</enum>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>locked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>copied</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>switched</name></decl>;</decl_stmt>
<enum>enum <name>svn_wc_status_kind</name> <name>repos_text_status</name>;</enum>
<enum>enum <name>svn_wc_status_kind</name> <name>repos_prop_status</name>;</enum>
}</block></struct></type> <name>svn_wc_status_t</name>;</typedef>
<function_decl><type><name>svn_wc_status2_t</name> *</type>
<name>svn_wc_dup_status2</name><parameter_list>(<param><decl><type><name>svn_wc_status2_t</name> *</type><name>orig_stat</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_wc_status_t</name> *</type>
<name>svn_wc_dup_status</name><parameter_list>(<param><decl><type><name>svn_wc_status_t</name> *</type><name>orig_stat</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_status2</name><parameter_list>(<param><decl><type><name>svn_wc_status2_t</name> **</type><name>status</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_status</name><parameter_list>(<param><decl><type><name>svn_wc_status_t</name> **</type><name>status</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>void</name></type> (*<name>svn_wc_status_func2_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_status2_t</name> *</type><name>status</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (*<name>svn_wc_status_func_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_status_t</name> *</type><name>status</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_status_editor3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>set_locks_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>edit_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>get_all</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>no_ignore</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>ignore_patterns</name></decl></param>,
<param><decl><type><name>svn_wc_status_func2_t</name></type> <name>status_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>status_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_status_editor2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>set_locks_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>edit_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>config</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>get_all</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>no_ignore</name></decl></param>,
<param><decl><type><name>svn_wc_status_func2_t</name></type> <name>status_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>status_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_status_editor</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>edit_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>config</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>get_all</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>no_ignore</name></decl></param>,
<param><decl><type><name>svn_wc_status_func_t</name></type> <name>status_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>status_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_status_set_repos_locks</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>set_locks_baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>locks</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_root</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_copy2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>dst_parent</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_basename</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_copy</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>dst_parent</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_basename</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_delete3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>keep_local</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_delete2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_delete</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_add2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_rev</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_add</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_rev</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_add_repos_file2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>new_text_base_path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>new_text_path</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>new_base_props</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>new_props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_rev</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_add_repos_file</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>new_text_path</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>new_props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_rev</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_remove_from_revision_control</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>destroy_wf</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>instant_error</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_resolved_conflict3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_text</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_props</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_wc_conflict_choice_t</name></type> <name>conflict_choice</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_resolved_conflict2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_text</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_props</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_resolved_conflict</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_text</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>resolve_props</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type>struct <name>svn_wc_committed_queue_t</name></type> <name>svn_wc_committed_queue_t</name>;</typedef>
<function_decl><type><name>svn_wc_committed_queue_t</name> *</type>
<name>svn_wc_committed_queue_create</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_queue_committed</name><parameter_list>(<param><decl><type><name>svn_wc_committed_queue_t</name> **</type><name>queue</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>wcprop_changes</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_lock</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_changelist</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> *</type><name>digest</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_process_committed_queue</name><parameter_list>(<param><decl><type><name>svn_wc_committed_queue_t</name> *</type><name>queue</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_author</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_process_committed4</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_author</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>wcprop_changes</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_lock</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_changelist</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> *</type><name>digest</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_process_committed3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_author</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>wcprop_changes</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_lock</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> *</type><name>digest</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_process_committed2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_author</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>wcprop_changes</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>remove_lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_process_committed</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev_author</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>wcprop_changes</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_crawl_revisions3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter3_t</name> *</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>restore_files</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>depth_compatibility_trick</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_crawl_revisions2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter2_t</name> *</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>restore_files</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_crawl_revisions</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter_t</name> *</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>restore_files</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>traversal_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_is_wc_root</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>wc_root</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_actual_target</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>target</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_update_editor3</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>depth_is_sticky</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>allow_unver_obstructions</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_conflict_resolver_func_t</name></type> <name>conflict_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>conflict_baton</name></decl></param>,
<param><decl><type><name>svn_wc_get_file_t</name></type> <name>fetch_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>fetch_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>preserved_exts</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_update_editor2</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_update_editor</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_switch_editor3</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>switch_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>depth_is_sticky</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>allow_unver_obstructions</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_conflict_resolver_func_t</name></type> <name>conflict_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>conflict_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>preserved_exts</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_switch_editor2</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>switch_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_switch_editor</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>target_revision</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>switch_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_wc_traversal_info_t</name> *</type><name>ti</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_prop_list</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_prop_get</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_prop_set2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>skip_checks</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_prop_set</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc_is_normal_prop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc_is_wc_prop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc_is_entry_prop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_canonicalize_svn_prop_get_file_t</name>)
<parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>mime_type</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_canonicalize_svn_prop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>propval_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>propname</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>propval</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>skip_some_checks</name></decl></param>,
<param><decl><type><name>svn_wc_canonicalize_svn_prop_get_file_t</name></type> <name>prop_getter</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>getter_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_diff_editor4</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks2_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_text_base</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>reverse_order</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>changelists</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_diff_editor3</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks2_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_text_base</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>reverse_order</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_diff_editor2</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_text_base</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>reverse_order</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_diff_editor</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_text_base</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>reverse_order</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_diff4</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks2_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>changelists</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_diff3</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks2_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_diff2</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_diff</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_diff_callbacks_t</name> *</type><name>callbacks</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_prop_diffs</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>propchanges</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>original_props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <name>svn_wc_merge_outcome_t</name> <block>{
<decl><name>svn_wc_merge_unchanged</name></decl>,
<decl><name>svn_wc_merge_merged</name></decl>,
<decl><name>svn_wc_merge_conflict</name></decl>,
<decl><name>svn_wc_merge_no_merge</name></decl>
}</block></enum></type> <name>svn_wc_merge_outcome_t</name>;</typedef>
<decl_stmt><decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge3</name><argument_list>(<argument>enum <expr><name>svn_wc_merge_outcome_t</name> *<name>merge_outcome</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>left</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>merge_target</name></expr></argument>,
<argument><expr><name>svn_wc_adm_access_t</name> *<name>adm_access</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>left_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>target_label</name></expr></argument>,
<argument><expr><name>svn_boolean_t</name> <name>dry_run</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>diff3_cmd</name></expr></argument>,
<argument><expr>const <name>apr_array_header_t</name> *<name>merge_options</name></expr></argument>,
<argument><expr>const <name>apr_array_header_t</name> *<name>prop_diff</name></expr></argument>,
<argument><expr><name>svn_wc_conflict_resolver_func_t</name> <name>conflict_func</name></expr></argument>,
<argument><expr><name>void</name> *<name>conflict_baton</name></expr></argument>,
<argument><expr><name>apr_pool_t</name> *<name>pool</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge2</name><argument_list>(<argument>enum <expr><name>svn_wc_merge_outcome_t</name> *<name>merge_outcome</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>left</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>merge_target</name></expr></argument>,
<argument><expr><name>svn_wc_adm_access_t</name> *<name>adm_access</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>left_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>target_label</name></expr></argument>,
<argument><expr><name>svn_boolean_t</name> <name>dry_run</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>diff3_cmd</name></expr></argument>,
<argument><expr>const <name>apr_array_header_t</name> *<name>merge_options</name></expr></argument>,
<argument><expr><name>apr_pool_t</name> *<name>pool</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge</name><argument_list>(<argument><expr>const <name>char</name> *<name>left</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>merge_target</name></expr></argument>,
<argument><expr><name>svn_wc_adm_access_t</name> *<name>adm_access</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>left_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>right_label</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>target_label</name></expr></argument>,
<argument><expr><name>svn_boolean_t</name> <name>dry_run</name></expr></argument>,
<argument>enum <expr><name>svn_wc_merge_outcome_t</name> *<name>merge_outcome</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>diff3_cmd</name></expr></argument>,
<argument><expr><name>apr_pool_t</name> *<name>pool</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge_props2</name><parameter_list>(<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>baseprops</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>base_merge</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>dry_run</name></decl></param>,
<param><decl><type><name>svn_wc_conflict_resolver_func_t</name></type> <name>conflict_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>conflict_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge_props</name><parameter_list>(<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>baseprops</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>base_merge</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>dry_run</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_merge_prop_diffs</name><parameter_list>(<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>base_merge</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>dry_run</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_pristine_copy_path</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>pristine_path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_cleanup2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_cleanup</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>optional_adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_relocation_validator3_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>root_url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_relocation_validator2_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>root</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_wc_relocation_validator_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_relocate3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>from</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>to</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_relocation_validator3_t</name></type> <name>validator</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>validator_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_relocate2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>from</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>to</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_relocation_validator2_t</name></type> <name>validator</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>validator_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_relocate</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>from</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>to</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recurse</name></decl></param>,
<param><decl><type><name>svn_wc_relocation_validator_t</name></type> <name>validator</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>validator_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_revert3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent_access</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>changelists</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_revert2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recursive</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_revert</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>parent_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>recursive</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>use_commit_times</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_create_tmp_file2</name><parameter_list>(<param><decl><type><name>apr_file_t</name> **</type><name>fp</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>new_name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_io_file_del_t</name></type> <name>delete_when</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_create_tmp_file</name><parameter_list>(<param><decl><type><name>apr_file_t</name> **</type><name>fp</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>delete_on_close</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_translated_file2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>xlated_path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>versioned_file</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_uint32_t</name></type> <name>flags</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_translated_file</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>xlated_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vfile</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force_repair</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_translated_stream</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> **</type><name>stream</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>versioned_file</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_uint32_t</name></type> <name>flags</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_transmit_text_deltas2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>tempfile</name></decl></param>,
<param><decl><type><name>unsigned</name> <name>char</name></type> <name><name>digest</name><index>[]</index></name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>fulltext</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_transmit_text_deltas</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>fulltext</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>tempfile</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_transmit_prop_deltas</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>tempfile</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_default_ignores</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>patterns</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>config</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_get_ignores</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>patterns</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>config</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_wc_match_ignore_list</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>str</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>list</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_add_lock</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_lock_t</name> *</type><name>lock</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_remove_lock</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_wc_revision_status_t</name> <block>{
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>min_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>max_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>switched</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>modified</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>sparse_checkout</name></decl>;</decl_stmt>
}</block></struct></type>
<name>svn_wc_revision_status_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_revision_status</name><parameter_list>(<param><decl><type><name>svn_wc_revision_status_t</name> **</type><name>result_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>wc_path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>trail_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>committed</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc_set_changelist</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>changelist</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>svn_wc_notify_func2_t</name></type> <name>notify_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>notify_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
