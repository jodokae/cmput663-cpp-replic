<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/private/svn_dep_compat.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_DEP_COMPAT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DEP_COMPAT_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_version.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>APR_VERSION_AT_LEAST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APR_VERSION_AT_LEAST</name><parameter_list>(<param><type><name>major</name></type></param>,<param><type><name>minor</name></type></param>,<param><type><name>patch</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(((major) &lt; APR_MAJOR_VERSION) || ((major) == APR_MAJOR_VERSION &amp;&amp; (minor) &lt; APR_MINOR_VERSION) || ((major) == APR_MAJOR_VERSION &amp;&amp; (minor) == APR_MINOR_VERSION &amp;&amp; (patch) &lt;= APR_PATCH_VERSION))</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SERF_VERSION_AT_LEAST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SERF_VERSION_AT_LEAST</name><parameter_list>(<param><type><name>major</name></type></param>,<param><type><name>minor</name></type></param>,<param><type><name>patch</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(((major) &lt; SERF_MAJOR_VERSION) || ((major) == SERF_MAJOR_VERSION &amp;&amp; (minor) &lt; SERF_MINOR_VERSION) || ((major) == SERF_MAJOR_VERSION &amp;&amp; (minor) == SERF_MINOR_VERSION &amp;&amp; (patch) &lt;= SERF_PATCH_VERSION))</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
