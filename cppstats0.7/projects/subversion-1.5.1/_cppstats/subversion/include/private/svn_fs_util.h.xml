<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/private/svn_fs_util.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_FS_UTIL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS_UTIL_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>svn_fs__canonicalize_abspath</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_fs__check_fs</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>, <param><decl><type><name>svn_boolean_t</name></type> <name>expect_open</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__NOT_FOUND</name><parameter_list>(<param><type><name>root</name></type></param>, <param><type><name>path</name></type></param>)</parameter_list></cpp:macro> <cpp:value>( root-&gt;is_txn_root ? svn_error_createf (SVN_ERR_FS_NOT_FOUND, 0, _("File not found: transaction '%s', path '%s'"), root-&gt;txn, path) : svn_error_createf (SVN_ERR_FS_NOT_FOUND, 0, _("File not found: revision %ld, path '%s'"), root-&gt;rev, path) )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ALREADY_EXISTS</name><parameter_list>(<param><type><name>root</name></type></param>, <param><type><name>path_str</name></type></param>)</parameter_list></cpp:macro> <cpp:value>( root-&gt;is_txn_root ? svn_error_createf (SVN_ERR_FS_ALREADY_EXISTS, 0, _("File already exists: filesystem '%s', transaction '%s', path '%s'"), root-&gt;fs-&gt;path, root-&gt;txn, path_str) : svn_error_createf (SVN_ERR_FS_ALREADY_EXISTS, 0, _("File already exists: filesystem '%s', revision %ld, path '%s'"), root-&gt;fs-&gt;path, root-&gt;rev, path_str) )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__NOT_TXN</name><parameter_list>(<param><type><name>root</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_create (SVN_ERR_FS_NOT_TXN_ROOT, NULL, _("Root object must be a transaction root"))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_NOT_MUTABLE</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>rev</name></type></param>, <param><type><name>path_in_repo</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_NOT_MUTABLE, 0, _("File is not mutable: filesystem '%s', revision %ld, path '%s'"), fs-&gt;path, rev, path_in_repo)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_NOT_DIRECTORY</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>path_in_repo</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_NOT_DIRECTORY, 0, _("'%s' is not a directory in filesystem '%s'"), path_in_repo, fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_NOT_FILE</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>path_in_repo</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_NOT_FILE, 0, _("'%s' is not a file in filesystem '%s'"), path_in_repo, fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_PATH_ALREADY_LOCKED</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>lock</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_PATH_ALREADY_LOCKED, 0, _("Path '%s' is already locked by user '%s' in filesystem '%s'"), lock-&gt;path, lock-&gt;owner, fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_NO_SUCH_LOCK</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>path_in_repo</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_NO_SUCH_LOCK, 0, _("No lock on path '%s' in filesystem '%s'"), path_in_repo, fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_LOCK_EXPIRED</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>token</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_LOCK_EXPIRED, 0, _("Lock has expired: lock-token '%s' in filesystem '%s'"), token, fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_NO_USER</name><parameter_list>(<param><type><name>fs</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_NO_USER, 0, _("No username is currently associated with filesystem '%s'"), fs-&gt;path)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_FS__ERR_LOCK_OWNER_MISMATCH</name><parameter_list>(<param><type><name>fs</name></type></param>, <param><type><name>username</name></type></param>, <param><type><name>lock_owner</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_error_createf (SVN_ERR_FS_LOCK_OWNER_MISMATCH, 0, _("User '%s' is trying to use a lock owned by '%s' in " "filesystem '%s'"), username, lock_owner, fs-&gt;path)</cpp:value></cpp:define>
<function_decl><type><name>char</name> *</type>
<name>svn_fs__next_entry_name</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>next_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
