<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/include/svn_subst.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_SUBST_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_SUBST_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><enum>enum <name>svn_subst_eol_style</name> <block>{
<decl><name>svn_subst_eol_style_unknown</name></decl>,
<decl><name>svn_subst_eol_style_none</name></decl>,
<decl><name>svn_subst_eol_style_native</name></decl>,
<decl><name>svn_subst_eol_style_fixed</name></decl>
}</block></enum></type> <name>svn_subst_eol_style_t</name>;</typedef>
<function_decl><type><name>void</name></type>
<name>svn_subst_eol_style_from_value</name><parameter_list>(<param><decl><type><name>svn_subst_eol_style_t</name> *</type><name>style</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>eol</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_subst_translation_required</name><parameter_list>(<param><decl><type><name>svn_subst_eol_style_t</name></type> <name>style</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>special</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force_eol_check</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_subst_keywords_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>author</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>id</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_subst_keywords_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_build_keywords2</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>kw</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>keywords_string</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_time_t</name></type> <name>date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>author</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_build_keywords</name><parameter_list>(<param><decl><type><name>svn_subst_keywords_t</name> *</type><name>kw</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>keywords_string</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_time_t</name></type> <name>date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>author</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_subst_keywords_differ2</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>a</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>b</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>compare_values</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_subst_keywords_differ</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>a</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>b</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>compare_values</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_stream3</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_stream_t</name> *</type>
<name>svn_subst_stream_translated</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_stream_translated_to_normal_form</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> **</type><name>stream</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>source</name></decl></param>,
<param><decl><type><name>svn_subst_eol_style_t</name></type> <name>eol_style</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>always_repair_eols</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_stream_from_specialfile</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> **</type><name>stream</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_stream2</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_stream</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_copy_and_translate3</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>special</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_copy_and_translate2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>special</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_copy_and_translate</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_cstring2</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_cstring</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>dst</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>repair</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_subst_keywords_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>expand</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_translate_to_normal_form</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
<param><decl><type><name>svn_subst_eol_style_t</name></type> <name>eol_style</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>always_repair_eols</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>special</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_subst_stream_detranslated</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> **</type><name>stream_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>svn_subst_eol_style_t</name></type> <name>eol_style</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>eol_str</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>always_repair_eols</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>keywords</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>special</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_subst_translate_string</name><parameter_list>(<param><decl><type><name>svn_string_t</name> **</type><name>new_value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>encoding</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_subst_detranslate_string</name><parameter_list>(<param><decl><type><name>svn_string_t</name> **</type><name>new_value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>for_output</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
