<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/include/svn_delta.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_DELTA_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DELTA_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_version.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>const</specifier> <name>svn_version_t</name> *</type><name>svn_delta_version</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<enum>enum <name>svn_delta_action</name> <block>{
<decl><name>svn_txdelta_source</name></decl>,
<decl><name>svn_txdelta_target</name></decl>,
<decl><name>svn_txdelta_new</name></decl>
}</block>;</enum>
<typedef>typedef <type><struct>struct <name>svn_txdelta_op_t</name> <block>{
<enum>enum <name>svn_delta_action</name> <name>action_code</name>;</enum>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>length</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_txdelta_op_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>svn_txdelta_window_t</name> <block>{
<decl_stmt><decl><type><name>svn_filesize_t</name></type> <name>sview_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>sview_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>tview_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_ops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>src_ops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_txdelta_op_t</name> *</type><name>ops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>new_data</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_txdelta_window_t</name>;</typedef>
<function_decl><type><name>svn_txdelta_window_t</name> *</type>
<name>svn_txdelta_window_dup</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_txdelta_window_t</name> *</type><name>window</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_txdelta_window_t</name> *</type>
<name>svn_txdelta_compose_windows</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_txdelta_window_t</name> *</type><name>window_A</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_txdelta_window_t</name> *</type><name>window_B</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>svn_txdelta_apply_instructions</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> *</type><name>window</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>sbuf</name></decl></param>, <param><decl><type><name>char</name> *</type><name>tbuf</name></decl></param>,
<param><decl><type><name>apr_size_t</name> *</type><name>tlen</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_txdelta_window_handler_t</name>)
<parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> *</type><name>window</name></decl></param>, <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type>struct <name>svn_txdelta_stream_t</name></type> <name>svn_txdelta_stream_t</name>;</typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>
(*<name>svn_txdelta_next_window_fn_t</name>)<parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> **</type><name>window</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> *</type>
(*<name>svn_txdelta_md5_digest_fn_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>svn_txdelta_stream_t</name> *</type>
<name>svn_txdelta_stream_create</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>svn_txdelta_next_window_fn_t</name></type> <name>next_window</name></decl></param>,
<param><decl><type><name>svn_txdelta_md5_digest_fn_t</name></type> <name>md5_digest</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_next_window</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> **</type><name>window</name></decl></param>,
<param><decl><type><name>svn_txdelta_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> *</type><name>svn_txdelta_md5_digest</name><parameter_list>(<param><decl><type><name>svn_txdelta_stream_t</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_txdelta</name><parameter_list>(<param><decl><type><name>svn_txdelta_stream_t</name> **</type><name>stream</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>source</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_stream_t</name> *</type><name>svn_txdelta_target_push</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>source</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_send_string</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>string</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_send_stream</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>unsigned</name> <name>char</name> *</type><name>digest</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_send_txstream</name><parameter_list>(<param><decl><type><name>svn_txdelta_stream_t</name> *</type><name>txstream</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_txdelta_apply</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>source</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>unsigned</name> <name>char</name> *</type><name>result_digest</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>error_info</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_txdelta_to_svndiff2</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>output</name></decl></param>,
<param><decl><type><name>int</name></type> <name>svndiff_version</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>svn_txdelta_to_svndiff</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_stream_t</name> *</type><name>svn_txdelta_parse_svndiff</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>error_on_early_close</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_read_svndiff_window</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> **</type><name>window</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>int</name></type> <name>svndiff_version</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_txdelta_skip_svndiff_window</name><parameter_list>(<param><decl><type><name>apr_file_t</name> *</type><name>file</name></decl></param>,
<param><decl><type><name>int</name></type> <name>svndiff_version</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>svn_delta_editor_t</name> <block>{
<function_decl><type><name>svn_error_t</name> *</type>(*<name>set_target_revision</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>target_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>open_root</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>root_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>delete_entry</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>add_directory</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>child_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>open_directory</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>dir_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>child_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>change_dir_prop</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>dir_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>close_directory</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>dir_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>absent_directory</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>add_file</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>copyfrom_path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>copyfrom_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>file_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>file_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>open_file</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>base_revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>file_pool</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>file_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>apply_textdelta</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_checksum</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>change_file_prop</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>close_file</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>file_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>text_checksum</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>absent_file</name>)<parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>close_edit</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>(*<name>abort_edit</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_delta_editor_t</name>;</typedef>
<function_decl><type><name>svn_delta_editor_t</name> *</type><name>svn_delta_default_editor</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_delta_noop_window_handler</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_t</name> *</type><name>window</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_delta_get_cancellation_editor</name><parameter_list>(<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wrapped_editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wrapped_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_delta_depth_filter_editor</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wrapped_editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wrapped_edit_baton</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>requested_depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>has_target</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_delta_path_driver_cb_func_t</name>)
<parameter_list>(<param><decl><type><name>void</name> **</type><name>dir_baton</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>parent_baton</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_delta_path_driver</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>paths</name></decl></param>,
<param><decl><type><name>svn_delta_path_driver_cb_func_t</name></type> <name>callback_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_file_rev_handler_t</name>)
<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>rev_props</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>result_of_merge</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>delta_handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>delta_baton</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>prop_diffs</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_file_rev_handler_old_t</name>)
<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>rev_props</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>delta_handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>delta_baton</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>prop_diffs</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>void</name></type>
<name>svn_compat_wrap_file_rev_handler</name><parameter_list>(<param><decl><type><name>svn_file_rev_handler_t</name> *</type><name>handler2</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler2_baton</name></decl></param>,
<param><decl><type><name>svn_file_rev_handler_old_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
