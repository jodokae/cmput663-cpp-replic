<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_wc/revision_status.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_wc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<struct>struct <name>status_baton</name> <block>{
<decl_stmt><decl><type><name>svn_wc_revision_status_t</name> *</type><name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>committed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>wc_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>wc_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>analyze_status</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_status2_t</name> *</type><name>status</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>status_baton</name> *</type><name>sb</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>! <name><name>status</name>-&gt;<name>entry</name></name></expr>)</condition><then>
<return>return;</return></then></if>
<if>if <condition>(<expr><name><name>status</name>-&gt;<name>text_status</name></name> != <name>svn_wc_status_added</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>item_rev</name> <init>= <expr>(<name><name>sb</name>-&gt;<name>committed</name></name>
? <name><name>status</name>-&gt;<name>entry</name>-&gt;<name>cmt_rev</name></name>
: <name><name>status</name>-&gt;<name>entry</name>-&gt;<name>revision</name></name>)</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>min_rev</name></name> == <name>SVN_INVALID_REVNUM</name>
|| <name>item_rev</name> &lt; <name><name>sb</name>-&gt;<name>result</name>-&gt;<name>min_rev</name></name></expr>)</condition><then>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>min_rev</name></name> = <name>item_rev</name></expr>;</expr_stmt></then></if>
<if>if <condition>(<expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>max_rev</name></name> == <name>SVN_INVALID_REVNUM</name>
|| <name>item_rev</name> &gt; <name><name>sb</name>-&gt;<name>result</name>-&gt;<name>max_rev</name></name></expr>)</condition><then>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>max_rev</name></name> = <name>item_rev</name></expr>;</expr_stmt></then></if>
}</block></then></if>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>switched</name></name> |= <name><name>status</name>-&gt;<name>switched</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>modified</name></name> |= (<name><name>status</name>-&gt;<name>text_status</name></name> != <name>svn_wc_status_normal</name>)</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>modified</name></name> |= (<name><name>status</name>-&gt;<name>prop_status</name></name> != <name>svn_wc_status_normal</name>
&amp;&amp; <name><name>status</name>-&gt;<name>prop_status</name></name> != <name>svn_wc_status_none</name>)</expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>result</name>-&gt;<name>sparse_checkout</name></name> |= (<name><name>status</name>-&gt;<name>entry</name>-&gt;<name>depth</name></name> != <name>svn_depth_infinity</name>)</expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>sb</name>-&gt;<name>wc_path</name></name>
&amp;&amp; (! <name><name>sb</name>-&gt;<name>wc_url</name></name>)
&amp;&amp; (<call><name>strcmp</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>sb</name>-&gt;<name>wc_path</name></name></expr></argument>)</argument_list></call> == 0)
&amp;&amp; (<name><name>status</name>-&gt;<name>entry</name></name>)</expr>)</condition><then>
<expr_stmt><expr><name><name>sb</name>-&gt;<name>wc_url</name></name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>sb</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>status</name>-&gt;<name>entry</name>-&gt;<name>url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_wc_revision_status</name><parameter_list>(<param><decl><type><name>svn_wc_revision_status_t</name> **</type><name>result_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>wc_path</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>trail_url</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>committed</name></decl></param>,
<param><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>status_baton</name></type> <name>sb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_adm_access_t</name> *</type><name>anchor_access</name></decl>, *<decl><type ref="prev"/><name>target_access</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>edit_baton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>edit_revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_wc_revision_status_t</name> *</type><name>result</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>**<name>result_p</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr>*<name>result_p</name> = <name>result</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name>-&gt;<name>min_rev</name></name> = <name>SVN_INVALID_REVNUM</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name>-&gt;<name>max_rev</name></name> = <name>SVN_INVALID_REVNUM</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name>-&gt;<name>switched</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name>-&gt;<name>modified</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name>-&gt;<name>sparse_checkout</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>.<name>result</name></name> = <name>result</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>.<name>committed</name></name> = <name>committed</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>.<name>wc_path</name></name> = <name>wc_path</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>.<name>wc_url</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name>.<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_open_anchor</name><argument_list>(<argument><expr>&amp;<name>anchor_access</name></expr></argument>, <argument><expr>&amp;<name>target_access</name></expr></argument>, <argument><expr>&amp;<name>target</name></expr></argument>,
<argument><expr><name>wc_path</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr>-1</expr></argument>,
<argument><expr><name>cancel_func</name></expr></argument>, <argument><expr><name>cancel_baton</name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_get_status_editor3</name><argument_list>(<argument><expr>&amp;<name>editor</name></expr></argument>, <argument><expr>&amp;<name>edit_baton</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>&amp;<name>edit_revision</name></expr></argument>, <argument><expr><name>anchor_access</name></expr></argument>, <argument><expr><name>target</name></expr></argument>,
<argument><expr><name>svn_depth_infinity</name></expr></argument>,
<argument><expr><name>TRUE</name></expr></argument> ,
<argument><expr><name>FALSE</name></expr></argument> ,
<argument><expr><name>NULL</name></expr></argument> ,
<argument><expr><name>analyze_status</name></expr></argument>, <argument><expr>&amp;<name>sb</name></expr></argument>,
<argument><expr><name>cancel_func</name></expr></argument>, <argument><expr><name>cancel_baton</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument> ,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name><name>editor</name>-&gt;<name>close_edit</name></name><argument_list>(<argument><expr><name>edit_baton</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_close</name><argument_list>(<argument><expr><name>anchor_access</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>(! <name><name>result</name>-&gt;<name>switched</name></name>) &amp;&amp; (<name>trail_url</name> != <name>NULL</name>)</expr>)</condition><then> <block>{
<if>if <condition>(<expr>! <name><name>sb</name>.<name>wc_url</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>result</name>-&gt;<name>switched</name></name> = <name>TRUE</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>len1</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name>trail_url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>len2</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>sb</name>.<name>wc_url</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name>len1</name> &gt; <name>len2</name>) || <call><name>strcmp</name><argument_list>(<argument><expr><name><name>sb</name>.<name>wc_url</name></name> + <name>len2</name> - <name>len1</name></expr></argument>, <argument><expr><name>trail_url</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name><name>result</name>-&gt;<name>switched</name></name> = <name>TRUE</name></expr>;</expr_stmt></then></if>
}</block></else></if>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
