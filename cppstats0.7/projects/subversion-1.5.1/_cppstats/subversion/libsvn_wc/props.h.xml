<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_wc/props.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_LIBSVN_WC_PROPS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_WC_PROPS_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_props.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><enum>enum <name>svn_wc__props_kind_t</name> <block>{
<decl><name>svn_wc__props_base</name> <init>= <expr>0</expr></init></decl>,
<decl><name>svn_wc__props_revert</name></decl>,
<decl><name>svn_wc__props_wcprop</name></decl>,
<decl><name>svn_wc__props_working</name></decl>
}</block></enum></type> <name>svn_wc__props_kind_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__has_props</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>has_props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__merge_props</name><parameter_list>(<param><decl><type><name>svn_wc_notify_state_t</name> *</type><name>state</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>server_baseprops</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>base_props</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>working_props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>propchanges</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>base_merge</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>dry_run</name></decl></param>,
<param><decl><type><name>svn_wc_conflict_resolver_func_t</name></type> <name>conflict_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>conflict_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>svn_stringbuf_t</name> **</type><name>entry_accum</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__wcprop_list</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>wcprops</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>entryname</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__wcprop_set</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force_write</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc__has_special_property</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_wc__has_magic_property</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>properties</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__install_props</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>base_props</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>props</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>write_base_props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_revert_props_create</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>destroy_baseprops</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_revert_props_restore</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_props_delete</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc__props_kind_t</name></type> <name>props_kind</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__props_delete</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc__props_kind_t</name></type> <name>props_kind</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__props_flush</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc__props_kind_t</name></type> <name>props_kind</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__working_props_committed</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>sync_entries</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__props_last_modified</name><parameter_list>(<param><decl><type><name>apr_time_t</name> *</type><name>mod_time</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc__props_kind_t</name></type> <name>props_kind</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__has_prop_mods</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>prop_mods</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__load_props</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>base_props_p</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>props_p</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>revert_props_p</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
