<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/svn/revert-cmd.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error_codes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<function><type><name>svn_error_t</name> *</type>
<name>svn_cl__revert</name><parameter_list>(<param><decl><type><name>apr_getopt_t</name> *</type><name>os</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_cl__opt_state_t</name> *</type><name>opt_state</name> <init>= <expr>((<name>svn_cl__cmd_baton_t</name> *) <name>baton</name>)-&gt;<name>opt_state</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_client_ctx_t</name> *</type><name>ctx</name> <init>= <expr>((<name>svn_cl__cmd_baton_t</name> *) <name>baton</name>)-&gt;<name>ctx</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_array_header_t</name> *</type><name>targets</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_cl__args_to_target_array_print_reserved</name><argument_list>(<argument><expr>&amp;<name>targets</name></expr></argument>, <argument><expr><name>os</name></expr></argument>,
<argument><expr><name><name>opt_state</name>-&gt;<name>targets</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name><name>targets</name>-&gt;<name>nelts</name></name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_CL_INSUFFICIENT_ARGS</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr>! <name><name>opt_state</name>-&gt;<name>quiet</name></name></expr>)</condition><then>
<expr_stmt><expr><call><name>svn_cl__get_notifier</name><argument_list>(<argument><expr>&amp;<name><name>ctx</name>-&gt;<name>notify_func2</name></name></expr></argument>, <argument><expr>&amp;<name><name>ctx</name>-&gt;<name>notify_baton2</name></name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>,
<argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<if>if <condition>(<expr><name><name>opt_state</name>-&gt;<name>depth</name></name> == <name>svn_depth_unknown</name></expr>)</condition><then>
<expr_stmt><expr><name><name>opt_state</name>-&gt;<name>depth</name></name> = <name>svn_depth_empty</name></expr>;</expr_stmt></then></if>
<expr_stmt><expr><name>err</name> = <call><name>svn_client_revert2</name><argument_list>(<argument><expr><name>targets</name></expr></argument>, <argument><expr><name><name>opt_state</name>-&gt;<name>depth</name></name></expr></argument>,
<argument><expr><name><name>opt_state</name>-&gt;<name>changelists</name></name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name>
&amp;&amp; (<name><name>err</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_WC_NOT_LOCKED</name>)
&amp;&amp; (! <call><name>SVN_DEPTH_IS_RECURSIVE</name><argument_list>(<argument><expr><name><name>opt_state</name>-&gt;<name>depth</name></name></expr></argument>)</argument_list></call>)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name>svn_error_quick_wrap</name>
<argument_list>(<argument><expr><name>err</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Try 'svn revert --depth infinity' instead?"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>err</name></expr>;</return>
}</block></function>
</unit>
