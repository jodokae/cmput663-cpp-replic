<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_delta/compat.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_delta.h"</cpp:file></cpp:include>
<struct>struct <name>file_rev_handler_wrapper_baton</name> <block>{
<decl_stmt><decl><type><name>void</name> *</type><name>baton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_file_rev_handler_old_t</name></type> <name>handler</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>file_rev_handler_wrapper</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>rev_props</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>result_of_merge</name></decl></param>,
<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>delta_handler</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>delta_baton</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>prop_diffs</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>file_rev_handler_wrapper_baton</name> *</type><name>fwb</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>fwb</name>-&gt;<name>handler</name></name></expr>)</condition><then>
<return>return <expr><call><name><name>fwb</name>-&gt;<name>handler</name></name><argument_list>(<argument><expr><name><name>fwb</name>-&gt;<name>baton</name></name></expr></argument>,
<argument><expr><name>path</name></expr></argument>,
<argument><expr><name>rev</name></expr></argument>,
<argument><expr><name>rev_props</name></expr></argument>,
<argument><expr><name>delta_handler</name></expr></argument>,
<argument><expr><name>delta_baton</name></expr></argument>,
<argument><expr><name>prop_diffs</name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>void</name></type>
<name>svn_compat_wrap_file_rev_handler</name><parameter_list>(<param><decl><type><name>svn_file_rev_handler_t</name> *</type><name>handler2</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>handler2_baton</name></decl></param>,
<param><decl><type><name>svn_file_rev_handler_old_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>file_rev_handler_wrapper_baton</name> *</type><name>fwb</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>fwb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>fwb</name>-&gt;<name>baton</name></name> = <name>handler_baton</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fwb</name>-&gt;<name>handler</name></name> = <name>handler</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>handler2_baton</name> = <name>fwb</name></expr>;</expr_stmt>
<expr_stmt><expr>*<name>handler2</name> = <name>file_rev_handler_wrapper</name></expr>;</expr_stmt>
}</block></function>
</unit>
