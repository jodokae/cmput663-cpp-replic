<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/bindings/javahl/native/Notify.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>NOTIFY_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTIFY_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_wc.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><name>class</name></type> <name>Notify</name> <block>{
<label><name>private</name>:</label>
<decl_stmt><decl><type><name>jobject</name></type> <name>m_notify</name></decl>;</decl_stmt>
<macro><name>Notify</name><argument_list>(<argument>jobject p_notify</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<label><name>public</name>:</label>
<function_decl><type><specifier>static</specifier> <name>Notify</name> *</type><name>makeCNotify</name><parameter_list>(<param><decl><type><name>jobject</name></type> <name>notify</name></decl></param>)</parameter_list>;</function_decl>
<expr_stmt><expr>~<call><name>Notify</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>notify</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>,
<param><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>content_state</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>prop_state</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>onNotify</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>,
<param><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>content_state</name></decl></param>,
<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>prop_state</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>)</parameter_list>;</function_decl>
}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
