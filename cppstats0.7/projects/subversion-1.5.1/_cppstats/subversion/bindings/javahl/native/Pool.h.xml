<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/bindings/javahl/native/Pool.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>POOL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POOL_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><name>class</name></type> <name>Pool</name> <block>{
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>Pool</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr>~<call><name>Pool</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>apr_pool_t</name> *<macro><name>pool</name><argument_list>()</argument_list></macro> const</expr>;</expr_stmt>
<expr_stmt><expr><name>void</name> <macro><name>clear</name><argument_list>()</argument_list></macro> const</expr>;</expr_stmt>
<label><name>private</name>:</label>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>m_pool</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>Pool</name><argument_list>(<argument><expr><name>Pool</name> &amp;<name>that</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Pool</name> &amp;</type><name>operator</name><init>= <expr>(<name>Pool</name> &amp;<name>that</name>)</expr></init></decl>;</decl_stmt>
}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>
<expr_stmt><expr><name>APR_INLINE</name>
<name>apr_pool_t</name> *<name>Pool</name>::<macro><name>pool</name> <argument_list>()</argument_list></macro> const <block>{
<return>return <expr><name>m_pool</name></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>APR_INLINE</name>
<name>void</name> <name>Pool</name>::<macro><name>clear</name><argument_list>()</argument_list></macro> const <block>{
<expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>m_pool</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
