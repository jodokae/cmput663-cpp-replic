<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/mod_dav_svn/version.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_uuid.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;httpd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;http_log.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mod_dav.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_xml.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_repos.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_dav.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_time.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_props.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_dav.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_base64.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_dav_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dav_svn.h"</cpp:file></cpp:include>
<function><type><name>svn_error_t</name> *</type>
<name>dav_svn__attach_auto_revprops</name><parameter_list>(<param><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>fs_path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>logmsg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_string_t</name> *</type><name>logval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>logmsg</name> = <call><name>apr_psprintf</name><argument_list>(<argument><expr><name>pool</name></expr></argument>,
<argument><expr>"Autoversioning commit: a non-deltaV client made "
"a change to\n%s"</expr></argument>, <argument><expr><name>fs_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>logval</name> = <call><name>svn_string_create</name><argument_list>(<argument><expr><name>logmsg</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>(<name>serr</name> = <call><name>svn_repos_fs_change_txn_prop</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>SVN_PROP_REVISION_LOG</name></expr></argument>, <argument><expr><name>logval</name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call>)</expr>)</condition><then>
<return>return <expr><name>serr</name></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>serr</name> = <call><name>svn_repos_fs_change_txn_prop</name><argument_list>(<argument><expr><name>txn</name></expr></argument>,
<argument><expr><name>SVN_PROP_REVISION_AUTOVERSIONED</name></expr></argument>,
<argument><expr><call><name>svn_string_create</name><argument_list>(<argument><expr>"*"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call>)</expr>)</condition><then>
<return>return <expr><name>serr</name></expr>;</return></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>set_auto_revprops</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<if>if <condition>(<expr>! (<name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_WORKING</name>
&amp;&amp; <name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name>)</expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"Set_auto_revprops called on invalid resource."</expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr>(<name>serr</name> = <call><name>dav_svn__attach_auto_revprops</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call>)</expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error setting a revision property "
" on auto-checked-out resource's txn. "</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>open_txn</name><parameter_list>(<param><decl><type><name>svn_fs_txn_t</name> **</type><name>ptxn</name></decl></param>,
<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_open_txn</name><argument_list>(<argument><expr><name>ptxn</name></expr></argument>, <argument><expr><name>fs</name></expr></argument>, <argument><expr><name>txn_name</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>serr</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_NO_SUCH_TRANSACTION</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"The transaction specified by the "
"activity does not exist"</expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"There was a problem opening the "
"transaction specified by this "
"activity."</expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>get_vsn_options</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>apr_text_header</name> *</type><name>phdr</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>,
<argument><expr>"version-control,checkout,working-resource"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>,
<argument><expr>"merge,baseline,activity,version-controlled-collection"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>, <argument><expr><name>SVN_DAV_NS_DAV_SVN_MERGEINFO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>, <argument><expr><name>SVN_DAV_NS_DAV_SVN_DEPTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>, <argument><expr><name>SVN_DAV_NS_DAV_SVN_LOG_REVPROPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>phdr</name></expr></argument>, <argument><expr><name>SVN_DAV_NS_DAV_SVN_PARTIAL_REPLAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>get_option</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_elem</name> *</type><name>elem</name></decl></param>,
<param><decl><type><name>apr_text_header</name> *</type><name>option</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>elem</name>-&gt;<name>ns</name></name> == <name>APR_XML_NS_DAV_ID</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>elem</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"activity-collection-set"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>option</name></expr></argument>,
<argument><expr>"&lt;D:activity-collection-set&gt;"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>option</name></expr></argument>,
<argument><expr><call><name>dav_svn__build_uri</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>DAV_SVN__BUILD_URI_ACT_COLLECTION</name></expr></argument>,
<argument><expr><name>SVN_INVALID_REVNUM</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr>1</expr></argument> ,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_text_append</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>option</name></expr></argument>,
<argument><expr>"&lt;/D:activity-collection-set&gt;"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
}</block></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>versionable</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<return>return <expr>0</expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_auto_version</name></type>
<name>auto_versionable</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_VERSION</name>
&amp;&amp; <name><name>resource</name>-&gt;<name>baselined</name></name></expr>)</condition><then>
<return>return <expr><name>DAV_AUTO_VERSION_ALWAYS</name></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>autoversioning</name></name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_REGULAR</name></expr>)</condition><then>
<return>return <expr><name>DAV_AUTO_VERSION_ALWAYS</name></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_WORKING</name>
&amp;&amp; <name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name></expr>)</condition><then>
<return>return <expr><name>DAV_AUTO_VERSION_ALWAYS</name></expr>;</return></then></if>
}</block></then></if>
<return>return <expr><name>DAV_AUTO_VERSION_NEVER</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>vsn_control</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>target</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>exists</name></name></expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_BAD_REQUEST</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"vsn_control called on already-versioned resource."</expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><name>target</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_NOT_IMPLEMENTED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"vsn_control called with non-null target."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><name>dav_error</name> *</type>
<name>dav_svn__checkout</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>int</name></type> <name>auto_checkout</name></decl></param>,
<param><decl><type><name>int</name></type> <name>is_unreserved</name></decl></param>,
<param><decl><type><name>int</name></type> <name>is_fork_ok</name></decl></param>,
<param><decl><type><name>int</name></type> <name>create_activity</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>activities</name></decl></param>,
<param><decl><type><name>dav_resource</name> **</type><name>working_resource</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>apr_err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>derr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_svn__uri_info</name></type> <name>parse</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name>auto_checkout</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>dav_resource</name> *</type><name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid_buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>shared_activity</name></decl>, *<decl><type ref="prev"/><name>shared_txn_name</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_VERSION</name>)
&amp;&amp; <name><name>resource</name>-&gt;<name>baselined</name></name></expr>)</condition><then>
<return>return <expr><name>NULL</name></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_REGULAR</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_METHOD_NOT_ALLOWED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"auto-checkout attempted on non-regular "
"version-controlled resource."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>baselined</name></name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_METHOD_NOT_ALLOWED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"auto-checkout attempted on baseline "
"collection, which is not supported."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>apr_err</name> = <call><name>apr_pool_userdata_get</name><argument_list>(<argument><expr>&amp;<name>data</name></expr></argument>,
<argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>apr_err</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>apr_err</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error fetching pool userdata."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>shared_activity</name> = <name>data</name></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>shared_activity</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>uuid_buf</name> = <call><name>svn_uuid_generate</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>shared_activity</name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>uuid_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>derr</name> = <call><name>dav_svn__create_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr>&amp;<name>shared_txn_name</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>derr</name></expr>)</condition><then> <return>return <expr><name>derr</name></expr>;</return></then></if>
<expr_stmt><expr><name>derr</name> = <call><name>dav_svn__store_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>shared_activity</name></expr></argument>, <argument><expr><name>shared_txn_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>derr</name></expr>)</condition><then> <return>return <expr><name>derr</name></expr>;</return></then></if>
<expr_stmt><expr><name>apr_err</name> = <call><name>apr_pool_userdata_set</name><argument_list>(<argument><expr><name>shared_activity</name></expr></argument>,
<argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>apr_err</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>apr_err</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error setting pool userdata."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></then></if>
<if>if <condition>(<expr>! <name>shared_txn_name</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>shared_txn_name</name> = <call><name>dav_svn__get_txn</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>shared_activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>shared_txn_name</name></expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"Cannot look up a txn_name by activity"</expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></then></if>
<expr_stmt><expr><name>res</name> = <call><name>dav_svn__create_working_resource</name><argument_list>(<argument><expr><name>resource</name></expr></argument>,
<argument><expr><name>shared_activity</name></expr></argument>, <argument><expr><name>shared_txn_name</name></expr></argument>,
<argument><expr><name>TRUE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name> = <name>TRUE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>derr</name> = <call><name>open_txn</name><argument_list>(<argument><expr>&amp;<name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>fs</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>derr</name></expr>)</condition><then> <return>return <expr><name>derr</name></expr>;</return></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>root</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Could not open a (transaction) root "
"in the repository"</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_VERSION</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_METHOD_NOT_ALLOWED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"CHECKOUT can only be performed on a "
"version resource [at this time]."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>create_activity</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_NOT_IMPLEMENTED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"CHECKOUT can not create an activity at "
"this time. Use MKACTIVITY first."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>is_unreserved</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_NOT_IMPLEMENTED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"Unreserved checkouts are not yet "
"available. A version history may not be "
"checked out more than once, into a "
"specific activity."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name>activities</name> == <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr><name>SVN_ERR_INCOMPLETE_DATA</name></expr></argument>,
<argument><expr>"An activity must be provided for "
"checkout."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>activities</name>-&gt;<name>nelts</name></name> != 1</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr><name>SVN_ERR_INCORRECT_PARAMS</name></expr></argument>,
<argument><expr>"Only one activity may be specified within "
"the CHECKOUT."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>dav_svn__simple_parse_uri</name><argument_list>(<argument><expr>&amp;<name>parse</name></expr></argument>, <argument><expr><name>resource</name></expr></argument>,
<argument><expr><call><name>APR_ARRAY_IDX</name><argument_list>(<argument><expr><name>activities</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr>const <name>char</name> *</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr>"The activity href could not be parsed "
"properly."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>parse</name>.<name>activity_id</name></name> == <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr><name>SVN_ERR_INCORRECT_PARAMS</name></expr></argument>,
<argument><expr>"The provided href is not an activity URI."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name>txn_name</name> = <call><name>dav_svn__get_txn</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name><name>parse</name>.<name>activity_id</name></name></expr></argument>)</argument_list></call>) == <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr><name>SVN_ERR_APMOD_ACTIVITY_NOT_FOUND</name></expr></argument>,
<argument><expr>"The specified activity does not exist."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>baselined</name></name> || <name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>rev</name></name> == <name>SVN_INVALID_REVNUM</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>youngest</name></decl>;</decl_stmt>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_youngest_rev</name><argument_list>(<argument><expr>&amp;<name>youngest</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>fs</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Could not determine the youngest "
"revision for verification against "
"the baseline being checked out."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>rev</name></name> != <name>youngest</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>,
<argument><expr><name>SVN_ERR_APMOD_BAD_BASELINE</name></expr></argument>,
<argument><expr>"The specified baseline is not the "
"latest baseline, so it may not be "
"checked out."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>txn_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>txn_created_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>err</name></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name>err</name> = <call><name>open_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>fs</name></name></expr></argument>, <argument><expr><name>txn_name</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call>) != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_txn_root</name><argument_list>(<argument><expr>&amp;<name>txn_root</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Could not open the transaction tree."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_node_created_rev</name><argument_list>(<argument><expr>&amp;<name>txn_created_rev</name></expr></argument>,
<argument><expr><name>txn_root</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Could not get created-rev of "
"transaction node."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><call><name>SVN_IS_VALID_REVNUM</name><argument_list>( <argument><expr><name>txn_created_rev</name></expr></argument> )</argument_list></call></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>rev</name></name> &lt; <name>txn_created_rev</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name>
<argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name>SVN_ERR_FS_CONFLICT</name></expr></argument>,
<argument><expr>"resource out of date; try updating"</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>rev</name></name> &gt; <name>txn_created_rev</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>url_noderev_id</name></decl>, *<decl><type ref="prev"/><name>txn_noderev_id</name></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name>serr</name> = <call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>txn_noderev_id</name></expr></argument>, <argument><expr><name>txn_root</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call>)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__new_error_tag</name>
<argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name><name>serr</name>-&gt;<name>apr_err</name></name></expr></argument>,
<argument><expr>"Unable to fetch the node revision id of the version "
"resource within the transaction."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>serr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name>serr</name> = <call><name>svn_fs_node_id</name><argument_list>(<argument><expr>&amp;<name>url_noderev_id</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>root</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call>)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__new_error_tag</name>
<argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name><name>serr</name>-&gt;<name>apr_err</name></name></expr></argument>,
<argument><expr>"Unable to fetch the node revision id of the version "
"resource within the revision."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>serr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><call><name>svn_fs_compare_ids</name><argument_list>(<argument><expr><name>url_noderev_id</name></expr></argument>, <argument><expr><name>txn_noderev_id</name></expr></argument>)</argument_list></call> != 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name>
<argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name>SVN_ERR_FS_CONFLICT</name></expr></argument>,
<argument><expr>"version resource newer than txn (restart the commit)"</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
}</block></then></if></else></if>
}</block></then></if>
}</block></else></if>
<expr_stmt><expr>*<name>working_resource</name> = <call><name>dav_svn__create_working_resource</name><argument_list>(<argument><expr><name>resource</name></expr></argument>,
<argument><expr><name><name>parse</name>.<name>activity_id</name></name></expr></argument>,
<argument><expr><name>txn_name</name></expr></argument>,
<argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>uncheckout</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_WORKING</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"UNCHECKOUT called on non-working resource."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr>)</condition><then>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>activity_id</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>dav_svn__delete_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>activity_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_pool_userdata_set</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<return>return <expr><call><name>dav_svn__working_to_regular_resource</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<struct>struct <name>cleanup_deltify_baton</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block>;</struct>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type>
<name>cleanup_deltify</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>data</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>cleanup_deltify_baton</name> *</type><name>cdb</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_repos_t</name> *</type><name>repos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>subpool</name> <init>= <expr><call><name>svn_pool_create</name><argument_list>(<argument><expr><name><name>cdb</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_repos_open</name><argument_list>(<argument><expr>&amp;<name>repos</name></expr></argument>, <argument><expr><name><name>cdb</name>-&gt;<name>repos_path</name></name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_perror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name><name>err</name>-&gt;<name>apr_err</name></name></expr></argument>, <argument><expr><name><name>cdb</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr>"cleanup_deltify: error opening repository '%s'"</expr></argument>,
<argument><expr><name><name>cdb</name>-&gt;<name>repos_path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>cleanup</name>;</goto>
}</block></then></if>
<expr_stmt><expr><name>err</name> = <call><name>svn_fs_deltify_revision</name><argument_list>(<argument><expr><call><name>svn_repos_fs</name><argument_list>(<argument><expr><name>repos</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>cdb</name>-&gt;<name>revision</name></name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_perror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name><name>err</name>-&gt;<name>apr_err</name></name></expr></argument>, <argument><expr><name><name>cdb</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr>"cleanup_deltify: error deltifying against revision %ld"
" in repository '%s'"</expr></argument>,
<argument><expr><name><name>cdb</name>-&gt;<name>revision</name></name></expr></argument>, <argument><expr><name><name>cdb</name>-&gt;<name>repos_path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<label><name>cleanup</name>:</label>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>APR_SUCCESS</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>register_deltification_cleanup</name><parameter_list>(<param><decl><type><name>svn_repos_t</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type>struct <name>cleanup_deltify_baton</name> *</type><name>cdb</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>cdb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>cdb</name>-&gt;<name>repos_path</name></name> = <call><name>svn_repos_path</name><argument_list>(<argument><expr><name>repos</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cdb</name>-&gt;<name>revision</name></name> = <name>revision</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cdb</name>-&gt;<name>pool</name></name> = <name>pool</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_pool_cleanup_register</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>cdb</name></expr></argument>, <argument><expr><name>cleanup_deltify</name></expr></argument>, <argument><expr><name>apr_pool_cleanup_null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name>dav_error</name> *</type>
<name>dav_svn__checkin</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>int</name></type> <name>keep_checked_out</name></decl></param>,
<param><decl><type><name>dav_resource</name> **</type><name>version_resource</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>apr_err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>shared_activity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>data</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_WORKING</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"CHECKIN called on non-working resource."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>apr_err</name> = <call><name>apr_pool_userdata_get</name><argument_list>(<argument><expr>&amp;<name>data</name></expr></argument>,
<argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>apr_err</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>apr_err</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error fetching pool userdata."</expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>shared_activity</name> = <name>data</name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>shared_activity</name>
&amp;&amp; (<call><name>strcmp</name><argument_list>(<argument><expr><name>shared_activity</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>activity_id</name></name></expr></argument>)</argument_list></call> == 0)</expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>shared_txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_msg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>new_rev</name></decl>;</decl_stmt>
<expr_stmt><expr><name>shared_txn_name</name> = <call><name>dav_svn__get_txn</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>shared_activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>shared_txn_name</name></expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"Cannot look up a txn_name by activity"</expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name>
&amp;&amp; (<call><name>strcmp</name><argument_list>(<argument><expr><name>shared_txn_name</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name></expr></argument>)</argument_list></call> != 0)</expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"Internal txn_name doesn't match"
" autoversioning transaction."</expr></argument>)</argument_list></call></expr>;</return></then></if>
<if>if <condition>(<expr>! <name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr>)</condition><then>
<return>return <expr><call><name>dav_new_error</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>, <argument><expr>0</expr></argument>,
<argument><expr>"Autoversioning txn isn't open "
"when it should be."</expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>err</name> = <call><name>set_auto_revprops</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>svn_repos_fs_commit_txn</name><argument_list>(<argument><expr>&amp;<name>conflict_msg</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr>&amp;<name>new_rev</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>msg</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>serr</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_CONFLICT</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>msg</name> = <call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr>"A conflict occurred during the CHECKIN "
"processing. The problem occurred with "
"the \"%s\" resource."</expr></argument>,
<argument><expr><name>conflict_msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else
<expr_stmt><expr><name>msg</name> = "An error occurred while committing the transaction."</expr>;</expr_stmt></else></if>
<expr_stmt><expr><call><name>dav_svn__delete_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr><name>shared_activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_pool_userdata_set</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>dav_svn__delete_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr><name>shared_activity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_pool_userdata_set</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>register_deltification_cleanup</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>new_rev</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>connection</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>version_resource</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>uri</name> = <call><name>dav_svn__build_uri</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name>DAV_SVN__BUILD_URI_VERSION</name></expr></argument>,
<argument><expr><name>new_rev</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr>0</expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__create_version_resource</name><argument_list>(<argument><expr><name>version_resource</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn</name></name> = <name>NULL</name></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>keep_checked_out</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name> = <name>FALSE</name></expr>;</expr_stmt>
<return>return <expr><call><name>dav_svn__working_to_regular_resource</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>avail_reports</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>dav_report_elem</name> **</type><name>reports</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>resource</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_REGULAR</name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>reports</name> = <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr>*<name>reports</name> = <name>dav_svn__reports_list</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>report_label_header_allowed</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>)</parameter_list> <block>{
<return>return <expr>0</expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>deliver_report</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>ns</name> <init>= <expr><call><name>dav_svn__find_ns</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>namespaces</name></name></expr></argument>, <argument><expr><name>SVN_XML_NAMESPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>ns</name></name> == <name>ns</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"update-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__update_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"log-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__log_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"dated-rev-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__dated_rev_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"get-locations"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__get_locations_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"get-location-segments"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__get_location_segments_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"file-revs-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__file_revs_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"get-locks-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__get_locks_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"replay-report"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__replay_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr><name>SVN_DAV__MERGEINFO_REPORT</name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__get_mergeinfo_report</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
}</block></then></if>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_NOT_IMPLEMENTED</name></expr></argument>,
<argument><expr><name>SVN_ERR_UNSUPPORTED_FEATURE</name></expr></argument>,
<argument><expr>"The requested report is unknown."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>can_be_activity</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<return>return <expr>(<name><name>resource</name>-&gt;<name>info</name>-&gt;<name>auto_checked_out</name></name> == <name>TRUE</name> ||
(<name><name>resource</name>-&gt;<name>type</name></name> == <name>DAV_RESOURCE_TYPE_ACTIVITY</name> &amp;&amp;
!<name><name>resource</name>-&gt;<name>exists</name></name>))</expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>make_activity</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name> <init>= <expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>activity_id</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>err</name></decl>;</decl_stmt>
<if>if <condition>(<expr>! <call><name>can_be_activity</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>HTTP_FORBIDDEN</name></expr></argument>,
<argument><expr><name>SVN_ERR_APMOD_MALFORMED_URI</name></expr></argument>,
<argument><expr>"Activities cannot be created at that "
"location; query the "
"DAV:activity-collection-set property."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__create_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr>&amp;<name>txn_name</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__store_activity</name><argument_list>(<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr><name>activity_id</name></expr></argument>, <argument><expr><name>txn_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name> = <name>txn_name</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resource</name>-&gt;<name>exists</name></name> = 1</expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><name>dav_error</name> *</type>
<name>dav_svn__build_lock_hash</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>locks</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path_prefix</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>apr_err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>derr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>data</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_xml_doc</name> *</type><name>doc</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_xml_elem</name> *</type><name>child</name></decl>, *<decl><type ref="prev"/><name>lockchild</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>hash</name> <init>= <expr><call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>apr_err</name> = <call><name>apr_pool_userdata_get</name><argument_list>(<argument><expr>&amp;<name>data</name></expr></argument>, <argument><expr>"svn-request-body"</expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>apr_err</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>apr_err</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error fetching pool userdata."</expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><name>doc</name> = <name>data</name></expr>;</expr_stmt>
<if>if <condition>(<expr>! <name>doc</name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>locks</name> = <name>hash</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>ns</name> = <call><name>dav_svn__find_ns</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>namespaces</name></name></expr></argument>, <argument><expr><name>SVN_XML_NAMESPACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>ns</name> == -1</expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>locks</name> = <name>hash</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name><name>doc</name>-&gt;<name>root</name>-&gt;<name>ns</name></name> == <name>ns</name>)
&amp;&amp; (<call><name>strcmp</name><argument_list>(<argument><expr><name><name>doc</name>-&gt;<name>root</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"lock-token-list"</expr></argument>)</argument_list></call> == 0)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>child</name> = <name><name>doc</name>-&gt;<name>root</name></name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<for>for (<init><expr><name>child</name> = <name><name>doc</name>-&gt;<name>root</name>-&gt;<name>first_child</name></name></expr>;</init> <condition><expr><name>child</name> != <name>NULL</name></expr>;</condition> <incr><expr><name>child</name> = <name><name>child</name>-&gt;<name>next</name></name></expr></incr>) <block>{
<if>if <condition>(<expr><name><name>child</name>-&gt;<name>ns</name></name> != <name>ns</name></expr>)</condition><then>
<continue>continue;</continue></then></if>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>child</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"lock-token-list"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then>
<break>break;</break></then></if>
}</block></for>
}</block></else></if>
<if>if <condition>(<expr>! <name>child</name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>locks</name> = <name>hash</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></then></if>
<for>for (<init><expr><name>lockchild</name> = <name><name>child</name>-&gt;<name>first_child</name></name></expr>;</init> <condition><expr><name>lockchild</name> != <name>NULL</name></expr>;</condition>
<incr><expr><name>lockchild</name> = <name><name>lockchild</name>-&gt;<name>next</name></name></expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lockpath</name> <init>= <expr><name>NULL</name></expr></init>, *<name>locktoken</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_xml_elem</name> *</type><name>lfchild</name></decl>;</decl_stmt>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>lockchild</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"lock"</expr></argument>)</argument_list></call> != 0</expr>)</condition><then>
<continue>continue;</continue></then></if>
<for>for (<init><expr><name>lfchild</name> = <name><name>lockchild</name>-&gt;<name>first_child</name></name></expr>;</init> <condition><expr><name>lfchild</name> != <name>NULL</name></expr>;</condition>
<incr><expr><name>lfchild</name> = <name><name>lfchild</name>-&gt;<name>next</name></name></expr></incr>) <block>{
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>lfchild</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"lock-path"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cdata</name> <init>= <expr><call><name>dav_xml_get_cdata</name><argument_list>(<argument><expr><name>lfchild</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name>derr</name> = <call><name>dav_svn__test_canonical</name><argument_list>(<argument><expr><name>cdata</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call>)</expr>)</condition><then>
<return>return <expr><name>derr</name></expr>;</return></then></if>
<expr_stmt><expr><name>lockpath</name> = <call><name>svn_path_join</name><argument_list>(<argument><expr><name>path_prefix</name></expr></argument>, <argument><expr><name>cdata</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>lockpath</name> &amp;&amp; <name>locktoken</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>lockpath</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>, <argument><expr><name>locktoken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>lockpath</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>locktoken</name> = <name>NULL</name></expr>;</expr_stmt>
}</block></then></if>
}</block></then> <else>else <if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>lfchild</name>-&gt;<name>name</name></name></expr></argument>, <argument><expr>"lock-token"</expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
<expr_stmt><expr><name>locktoken</name> = <call><name>dav_xml_get_cdata</name><argument_list>(<argument><expr><name>lfchild</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>, <argument><expr>1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>lockpath</name> &amp;&amp; *<name>locktoken</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>lockpath</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>, <argument><expr><name>locktoken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>lockpath</name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>locktoken</name> = <name>NULL</name></expr>;</expr_stmt>
}</block></then></if>
}</block></then></if></else></if>
}</block></for>
}</block></for>
<expr_stmt><expr>*<name>locks</name> = <name>hash</name></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>dav_error</name> *</type>
<name>dav_svn__push_locks</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>locks</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_fs_access_t</name> *</type><name>fsaccess</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_index_t</name> *</type><name>hi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_get_access</name><argument_list>(<argument><expr>&amp;<name>fsaccess</name></expr></argument>, <argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>fs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__sanitize_error</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr>"Lock token(s) in request, but "
"missing an user name"</expr></argument>, <argument><expr><name>HTTP_BAD_REQUEST</name></expr></argument>,
<argument><expr><name><name>resource</name>-&gt;<name>info</name>-&gt;<name>r</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<for>for (<init><expr><name>hi</name> = <call><name>apr_hash_first</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>locks</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>hi</name></expr>;</condition> <incr><expr><name>hi</name> = <call><name>apr_hash_next</name><argument_list>(<argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr></incr>) <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>token</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>val</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>apr_hash_this</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>token</name> = <name>val</name></expr>;</expr_stmt>
<expr_stmt><expr><name>serr</name> = <call><name>svn_fs_access_add_lock_token</name><argument_list>(<argument><expr><name>fsaccess</name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error pushing token into filesystem."</expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></for>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>release_locks</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>locks</name></decl></param>,
<param><decl><type><name>svn_repos_t</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_hash_index_t</name> *</type><name>hi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> *</type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>subpool</name> <init>= <expr><call><name>svn_pool_create</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<for>for (<init><expr><name>hi</name> = <call><name>apr_hash_first</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>locks</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>hi</name></expr>;</condition> <incr><expr><name>hi</name> = <call><name>apr_hash_next</name><argument_list>(<argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr></incr>) <block>{
<expr_stmt><expr><call><name>svn_pool_clear</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_hash_this</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr>&amp;<name>key</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr>&amp;<name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>svn_repos_fs_unlock</name><argument_list>(<argument><expr><name>repos</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name></expr>)</condition><then>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name><name>err</name>-&gt;<name>apr_err</name></name></expr></argument>, <argument><expr><name>r</name></expr></argument>,
<argument><expr>"%s"</expr></argument>, <argument><expr><name><name>err</name>-&gt;<name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>subpool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>dav_error</name> *</type>
<name>merge</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>target</name></decl></param>,
<param><decl><type><name>dav_resource</name> *</type><name>source</name></decl></param>,
<param><decl><type><name>int</name></type> <name>no_auto_merge</name></decl></param>,
<param><decl><type><name>int</name></type> <name>no_checkout</name></decl></param>,
<param><decl><type><name>apr_xml_elem</name> *</type><name>prop_elem</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_error</name> *</type><name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>post_commit_err</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>new_rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>locks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>disable_merge_response</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>pool</name> = <name><name>target</name>-&gt;<name>pool</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>source</name>-&gt;<name>type</name></name> != <name>DAV_RESOURCE_TYPE_ACTIVITY</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>dav_svn__new_error_tag</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>HTTP_METHOD_NOT_ALLOWED</name></expr></argument>,
<argument><expr><name>SVN_ERR_INCORRECT_PARAMS</name></expr></argument>,
<argument><expr>"MERGE can only be performed using an "
"activity as the source [at this time]."</expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_NAMESPACE</name></expr></argument>,
<argument><expr><name>SVN_DAV_ERROR_TAG</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__build_lock_hash</name><argument_list>(<argument><expr>&amp;<name>locks</name></expr></argument>, <argument><expr><name><name>target</name>-&gt;<name>info</name>-&gt;<name>r</name></name></expr></argument>,
<argument><expr><name><name>target</name>-&gt;<name>info</name>-&gt;<name>repos_path</name></name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<if>if <condition>(<expr><call><name>apr_hash_count</name><argument_list>(<argument><expr><name>locks</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__push_locks</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>locks</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
}</block></then></if>
<if>if <condition>(<expr>(<name>err</name> = <call><name>open_txn</name><argument_list>(<argument><expr>&amp;<name>txn</name></expr></argument>, <argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>fs</name></name></expr></argument>,
<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>txn_name</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call>) != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<expr_stmt><expr><name>serr</name> = <call><name>svn_repos_fs_commit_txn</name><argument_list>(<argument><expr>&amp;<name>conflict</name></expr></argument>, <argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr>&amp;<name>new_rev</name></expr></argument>, <argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> &amp;&amp; (<name><name>serr</name>-&gt;<name>apr_err</name></name> != <name>SVN_ERR_REPOS_POST_COMMIT_HOOK_FAILED</name>)</expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>msg</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><call><name>svn_fs_abort_txn</name><argument_list>(<argument><expr><name>txn</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>serr</name>-&gt;<name>apr_err</name></name> == <name>SVN_ERR_FS_CONFLICT</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>msg</name> = <call><name>apr_psprintf</name><argument_list>(<argument><expr><name>pool</name></expr></argument>,
<argument><expr>"A conflict occurred during the MERGE "
"processing. The problem occurred with the "
"\"%s\" resource."</expr></argument>,
<argument><expr><name>conflict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else
<expr_stmt><expr><name>msg</name> = "An error occurred while committing the transaction."</expr>;</expr_stmt></else></if>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_CONFLICT</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><name>serr</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>serr</name>-&gt;<name>child</name></name> &amp;&amp; <name><name>serr</name>-&gt;<name>child</name>-&gt;<name>message</name></name></expr>)</condition><then>
<expr_stmt><expr><name>post_commit_err</name> = <call><name>apr_pstrdup</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name><name>serr</name>-&gt;<name>child</name>-&gt;<name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><name>serr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if></else></if>
<expr_stmt><expr><call><name>register_deltification_cleanup</name><argument_list>(<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr><name>new_rev</name></expr></argument>,
<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>connection</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dav_svn__operational_log</name><argument_list>(<argument><expr><name><name>target</name>-&gt;<name>info</name></name></expr></argument>,
<argument><expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>target</name>-&gt;<name>info</name>-&gt;<name>r</name>-&gt;<name>pool</name></name></expr></argument>,
<argument><expr>"commit r%ld"</expr></argument>,
<argument><expr><name>new_rev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> = <call><name>dav_svn__store_activity</name><argument_list>(<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>root</name>.<name>activity_id</name></name></expr></argument>, <argument><expr>""</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><name>err</name></expr>;</return></then></if>
<if>if <condition>(<expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>svn_client_options</name></name> != <name>NULL</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr>(<name>NULL</name> != (<call><name>ap_strstr_c</name><argument_list>(<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>svn_client_options</name></name></expr></argument>,
<argument><expr><name>SVN_DAV_OPTION_RELEASE_LOCKS</name></expr></argument>)</argument_list></call>))
&amp;&amp; <call><name>apr_hash_count</name><argument_list>(<argument><expr><name>locks</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>serr</name> = <call><name>release_locks</name><argument_list>(<argument><expr><name>locks</name></expr></argument>, <argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name>-&gt;<name>repos</name></name></expr></argument>,
<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>r</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>serr</name> != <name>NULL</name></expr>)</condition><then>
<return>return <expr><call><name>dav_svn__convert_err</name><argument_list>(<argument><expr><name>serr</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_SERVER_ERROR</name></expr></argument>,
<argument><expr>"Error releasing locks"</expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
}</block></then></if>
<if>if <condition>(<expr><name>NULL</name> != (<call><name>ap_strstr_c</name><argument_list>(<argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>svn_client_options</name></name></expr></argument>,
<argument><expr><name>SVN_DAV_OPTION_NO_MERGE_RESPONSE</name></expr></argument>)</argument_list></call>)</expr>)</condition><then>
<expr_stmt><expr><name>disable_merge_response</name> = <name>TRUE</name></expr>;</expr_stmt></then></if>
}</block></then></if>
<return>return <expr><call><name>dav_svn__merge_response</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><name><name>source</name>-&gt;<name>info</name>-&gt;<name>repos</name></name></expr></argument>, <argument><expr><name>new_rev</name></expr></argument>,
<argument><expr><name>post_commit_err</name></expr></argument>, <argument><expr><name>prop_elem</name></expr></argument>,
<argument><expr><name>disable_merge_response</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>const</specifier> <name>dav_hooks_vsn</name></type> <name>dav_svn__hooks_vsn</name> <init>= <expr><block>{
<expr><name>get_vsn_options</name></expr>,
<expr><name>get_option</name></expr>,
<expr><name>versionable</name></expr>,
<expr><name>auto_versionable</name></expr>,
<expr><name>vsn_control</name></expr>,
<expr><name>dav_svn__checkout</name></expr>,
<expr><name>uncheckout</name></expr>,
<expr><name>dav_svn__checkin</name></expr>,
<expr><name>avail_reports</name></expr>,
<expr><name>report_label_header_allowed</name></expr>,
<expr><name>deliver_report</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>can_be_activity</name></expr>,
<expr><name>make_activity</name></expr>,
<expr><name>merge</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
