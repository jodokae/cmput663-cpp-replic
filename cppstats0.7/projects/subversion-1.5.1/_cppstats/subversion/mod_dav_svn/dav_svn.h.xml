<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/mod_dav_svn/dav_svn.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>DAV_SVN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DAV_SVN_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_xml.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;httpd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;http_log.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mod_dav.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_repos.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_xml.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_dav_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_authz_svn.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DAV_SVN__DEFAULT_VCC_NAME</name></cpp:macro> <cpp:value>"default"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DAV_SVN__AUTOVERSIONING_ACTIVITY</name></cpp:macro> <cpp:value>"svn-autoversioning-activity"</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>root_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>special_uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>fs_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repo_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repo_basename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>xslt_uri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>autoversioning</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>bulk_updates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_repos_t</name> *</type><name>repos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>username</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>is_svn_client</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>capabilities</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activities_db</name></decl>;</decl_stmt>
}</block></struct></type> <name>dav_svn_repos</name>;</typedef>
<enum>enum <name>dav_svn_private_restype</name> <block>{
<decl><name>DAV_SVN_RESTYPE_UNSET</name></decl>,
<decl><name>DAV_SVN_RESTYPE_ROOT_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_VER_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_HIS_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_WRK_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_ACT_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_VCC_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_BC_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_BLN_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_WBL_COLLECTION</name></decl>,
<decl><name>DAV_SVN_RESTYPE_VCC</name></decl>,
<decl><name>DAV_SVN_RESTYPE_PARENTPATH_COLLECTION</name></decl>
}</block>;</enum>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl>;</decl_stmt>
}</block></struct></type> <name>dav_svn_root</name>;</typedef>
<struct>struct <name>dav_resource_private</name> <block>{
<decl_stmt><decl><type><name>svn_stringbuf_t</name> *</type><name>uri_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_svn_repos</name> *</type><name>repos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dav_svn_root</name></type> <name>root</name></decl>;</decl_stmt>
<enum>enum <name>dav_svn_private_restype</name> <name>restype</name>;</enum>
<decl_stmt><decl><type><name>request_rec</name> *</type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>is_svndiff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>delta_base</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>svndiff_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_client_options</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>version_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>base_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>result_checksum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>auto_checked_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>dav_locktoken</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid_str</name></decl>;</decl_stmt>
}</block>;</struct>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>dav_svn__get_fs_path</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>dav_svn__get_fs_parent_path</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>dav_svn__get_autoversioning_flag</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>dav_svn__get_bulk_updates_flag</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>dav_svn__get_pathauthz_flag</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>authz_svn__subreq_bypass_func_t</name></type> <name>dav_svn__get_pathauthz_bypass</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_boolean_t</name></type> <name>dav_svn__get_list_parentpath_flag</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>dav_svn__get_special_uri</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>dav_svn__get_repo_name</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>dav_svn__get_xslt_uri</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type> <name>dav_svn__get_master_uri</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type> <name>dav_svn__get_activities_db</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type> <name>dav_svn__get_root_dir</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>dav_svn__get_txn</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__delete_activity</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__store_activity</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__create_activity</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>ptxn_name</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>dav_svn__getetag</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_resource</name> *</type>
<name>dav_svn__create_working_resource</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>base</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>txn_name</name></decl></param>,
<param><decl><type><name>int</name></type> <name>tweak_in_place</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__working_to_regular_resource</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__create_version_resource</name><parameter_list>(<param><decl><type><name>dav_resource</name> **</type><name>version_res</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uri</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>dav_hooks_repository</name></type> <name>dav_svn__hooks_repository</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>dav_hooks_propdb</name></type> <name>dav_svn__hooks_propdb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>dav_hooks_locks</name></type> <name>dav_svn__hooks_locks</name></decl>;</decl_stmt>
<function_decl><type><name>svn_error_t</name> *</type>
<name>dav_svn__attach_auto_revprops</name><parameter_list>(<param><decl><type><name>svn_fs_txn_t</name> *</type><name>txn</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>fs_path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__checkout</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>int</name></type> <name>auto_checkout</name></decl></param>,
<param><decl><type><name>int</name></type> <name>is_unreserved</name></decl></param>,
<param><decl><type><name>int</name></type> <name>is_fork_ok</name></decl></param>,
<param><decl><type><name>int</name></type> <name>create_activity</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>activities</name></decl></param>,
<param><decl><type><name>dav_resource</name> **</type><name>working_resource</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__checkin</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>int</name></type> <name>keep_checked_out</name></decl></param>,
<param><decl><type><name>dav_resource</name> **</type><name>version_resource</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__build_lock_hash</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>locks</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path_prefix</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__push_locks</name><parameter_list>(<param><decl><type><name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>locks</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>dav_hooks_vsn</name></type> <name>dav_svn__hooks_vsn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>dav_liveprop_group</name></type> <name>dav_svn__liveprop_group</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> <name>dav_svn__gather_propsets</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>uris</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type>
<name>dav_svn__find_liveprop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ns_uri</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>dav_hooks_liveprop</name> **</type><name>hooks</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>dav_svn__insert_all_liveprops</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>dav_prop_insert</name></type> <name>what</name></decl></param>,
<param><decl><type><name>apr_text_header</name> *</type><name>phdr</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__merge_response</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>new_rev</name></decl></param>,
<param><decl><type><name>char</name> *</type><name>post_commit_err</name></decl></param>,
<param><decl><type><name>apr_xml_elem</name> *</type><name>prop_elem</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>disable_merge_response</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>dav_report_elem</name></type> <name><name>dav_svn__reports_list</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"update-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"log-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"dated-rev-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"get-locations"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"get-location-segments"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"file-revs-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"get-locks-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr>"replay-report"</expr> }</block></expr>,
<expr><block>{ <expr><name>SVN_XML_NAMESPACE</name></expr>, <expr><name>SVN_DAV__MERGEINFO_REPORT</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__update_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__log_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__dated_rev_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__get_locations_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__get_location_segments_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__file_revs_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__replay_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__get_mergeinfo_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__get_locks_report</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_xml_doc</name> *</type><name>doc</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>request_rec</name> *</type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>dav_svn_repos</name> *</type><name>repos</name></decl>;</decl_stmt>
}</block></struct></type> <name>dav_svn__authz_read_baton</name>;</typedef>
<function_decl><type><name>svn_boolean_t</name></type>
<name>dav_svn__allow_read</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>resource</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_repos_authz_func_t</name></type>
<name>dav_svn__authz_read_func</name><parameter_list>(<param><decl><type><name>dav_svn__authz_read_baton</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__new_error_tag</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>int</name></type> <name>status</name></decl></param>,
<param><decl><type><name>int</name></type> <name>errno_id</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>desc</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>namespace</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tagname</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__convert_err</name><parameter_list>(<param><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl></param>,
<param><decl><type><name>int</name></type> <name>status</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>message</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_revnum_t</name></type>
<name>dav_svn__get_safe_cr</name><parameter_list>(<param><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<enum>enum <name>dav_svn__build_what</name> <block>{
<decl><name>DAV_SVN__BUILD_URI_ACT_COLLECTION</name></decl>,
<decl><name>DAV_SVN__BUILD_URI_BASELINE</name></decl>,
<decl><name>DAV_SVN__BUILD_URI_BC</name></decl>,
<decl><name>DAV_SVN__BUILD_URI_PUBLIC</name></decl>,
<decl><name>DAV_SVN__BUILD_URI_VERSION</name></decl>,
<decl><name>DAV_SVN__BUILD_URI_VCC</name></decl>
}</block>;</enum>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>dav_svn__build_uri</name><argument_list>(<argument><expr>const <name>dav_svn_repos</name> *<name>repos</name></expr></argument>,
<argument>enum <expr><name>dav_svn__build_what</name> <name>what</name></expr></argument>,
<argument><expr><name>svn_revnum_t</name> <name>revision</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>path</name></expr></argument>,
<argument><expr><name>int</name> <name>add_href</name></expr></argument>,
<argument><expr><name>apr_pool_t</name> *<name>pool</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_id</name></decl>;</decl_stmt>
}</block></struct></type> <name>dav_svn__uri_info</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type>
<name>dav_svn__simple_parse_uri</name><parameter_list>(<param><decl><type><name>dav_svn__uri_info</name> *</type><name>info</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>dav_resource</name> *</type><name>relative</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uri</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>dav_svn__find_ns</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> *</type><name>namespaces</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>dav_svn__send_xml</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>fmt</name></decl></param>,
<param><decl><type>...</type></decl></param>)</parameter_list>
__attribute__<parameter_list>(<param/></parameter_list>(format<parameter_list>(<param><decl><type><name>printf</name></type></decl></param>, <param/></parameter_list>3, 4</function_decl>)</block></extern>))<empty_stmt>;</empty_stmt>
<function_decl><type><name>dav_error</name> *</type><name>dav_svn__test_canonical</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>dav_error</name> *</type>
<name>dav_svn__sanitize_error</name><parameter_list>(<param><decl><type><name>svn_error_t</name> *</type><name>serr</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>new_msg</name></decl></param>,
<param><decl><type><name>int</name></type> <name>http_status</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_stream_t</name> *</type>
<name>dav_svn__make_base64_output_stream</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>ap_filter_t</name> *</type><name>output</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type>
<name>dav_svn__operational_log</name><parameter_list>(<param><decl><type>struct <name>dav_resource_private</name> *</type><name>info</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>line</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>dav_svn__proxy_merge_fixup</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>dav_svn__location_in_filter</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>f</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>ap_input_mode_t</name></type> <name>mode</name></decl></param>,
<param><decl><type><name>apr_read_type_e</name></type> <name>block</name></decl></param>,
<param><decl><type><name>apr_off_t</name></type> <name>readbytes</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>dav_svn__location_header_filter</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>f</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>dav_svn__location_body_filter</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>f</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
