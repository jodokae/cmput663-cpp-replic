<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_ra_neon/ra_neon.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_LIBSVN_RA_NEON_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_RA_NEON_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ne_request.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ne_uri.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ne_207.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ne_props.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_delta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_ra.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_dav.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_dav_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__XML_DECLINE</name></cpp:macro> <cpp:value>NE_XML_DECLINE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__XML_INVALID</name></cpp:macro> <cpp:value>NE_XML_ABORT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__XML_CDATA</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__XML_COLLECT</name></cpp:macro> <cpp:value>((1&lt;&lt;2) | SVN_RA_NEON__XML_CDATA)</cpp:value></cpp:define>
<typedef>typedef <type><name>int</name></type> <name>svn_ra_neon__xml_elmid</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>nspace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_neon__xml_elmid</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_ra_neon__xml_elm_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_stringbuf_t</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ne_uri</name></type> <name>root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_root</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ne_session</name> *</type><name>ne_sess</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ne_session</name> *</type><name>ne_sess2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>main_session_busy</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_ra_callbacks2_t</name> *</type><name>callbacks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>callback_baton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_auth_iterstate_t</name> *</type><name>auth_iterstate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>auth_username</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_auth_iterstate_t</name> *</type><name>p11pin_iterstate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>compression</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>vcc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uuid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_progress_notify_func_t</name></type> <name>progress_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>progress_baton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>capabilities</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_ra_neon__session_t</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ne_request</name> *</type><name>ne_req</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ne_session</name> *</type><name>ne_sess</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>method</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>code_desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_error_t</name> *</type><name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>marshalled_error</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>iterpool</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_ra_neon__request_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__REQ_ERR</name><parameter_list>(<param><type><name>req</name></type></param>, <param><type><name>new_err</name></type></param>)</parameter_list></cpp:macro> <cpp:value>do { svn_error_t *svn_err__tmp = (new_err); if ((req)-&gt;err &amp;&amp; !(req)-&gt;marshalled_error) svn_error_clear(svn_err__tmp); else if (svn_err__tmp) { svn_error_clear((req)-&gt;err); (req)-&gt;err = svn_err__tmp; (req)-&gt;marshalled_error = FALSE; } } while (0)</cpp:value></cpp:define>
<function_decl><type><name>svn_ra_neon__request_t</name> *</type>
<name>svn_ra_neon__request_create</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>method</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type>(*<name>svn_ra_neon__block_reader</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>,
<param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>void</name></type>
<name>svn_ra_neon__add_response_body_reader</name><parameter_list>(<param><decl><type><name>svn_ra_neon__request_t</name> *</type><name>req</name></decl></param>,
<param><decl><type><name>ne_accept_response</name></type> <name>accpt</name></decl></param>,
<param><decl><type><name>svn_ra_neon__block_reader</name></type> <name>reader</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>userdata</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>svn_ra_neon__request_destroy</name><parameter_list>(<param><type><name>req</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_pool_destroy((req)-&gt;pool)</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SVN_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_CR</name></cpp:macro> <cpp:value>"\n"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_CR</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_latest_revnum</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>latest_revnum</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_dated_revision</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>revision</name></decl></param>,
<param><decl><type><name>apr_time_t</name></type> <name>timestamp</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__change_rev_prop</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__rev_proplist</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__rev_prop</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><name>svn_string_t</name> **</type><name>value</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_commit_editor</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>revprop_table</name></decl></param>,
<param><decl><type><name>svn_commit_callback2_t</name></type> <name>callback</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>callback_baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>lock_tokens</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>keep_locks</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_file</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>fetched_rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_dir</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>dirents</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>fetched_rev</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>props</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_uint32_t</name></type> <name>dirent_fields</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__abort_commit</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>session_baton</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_mergeinfo</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>mergeinfo</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>paths</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_mergeinfo_inheritance_t</name></type> <name>inherit</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>include_descendants</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__do_update</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter3_t</name> **</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision_to_update_to</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>update_target</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>send_copyfrom_args</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wc_update</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wc_update_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__do_status</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter3_t</name> **</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>report_baton</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>status_target</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wc_status</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wc_status_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__do_switch</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter3_t</name> **</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision_to_update_to</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>update_target</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>switch_url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wc_update</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wc_update_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__do_diff</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_reporter3_t</name> **</type><name>reporter</name></decl></param>,
<param><decl><type><name>void</name> **</type><name>report_baton</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff_target</name></decl></param>,
<param><decl><type><name>svn_depth_t</name></type> <name>depth</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>ignore_ancestry</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>text_deltas</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>versus_url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>wc_diff</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>wc_diff_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_log</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>paths</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end</name></decl></param>,
<param><decl><type><name>int</name></type> <name>limit</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>discover_changed_paths</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>strict_node_history</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>include_merged_revisions</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>revprops</name></decl></param>,
<param><decl><type><name>svn_log_entry_receiver_t</name></type> <name>receiver</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>receiver_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__do_check_path</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_node_kind_t</name> *</type><name>kind</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__do_stat</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_dirent_t</name> **</type><name>dirent</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_file_revs</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>include_merged_revisions</name></decl></param>,
<param><decl><type><name>svn_file_rev_handler_t</name></type> <name>handler</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>handler_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__LP_NAMESPACE</name></cpp:macro> <cpp:value>SVN_PROP_WC_PREFIX "ra_dav:"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__LP_ACTIVITY_COLL</name></cpp:macro> <cpp:value>SVN_RA_NEON__LP_NAMESPACE "activity-url"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__LP_VSN_URL</name></cpp:macro> <cpp:value>SVN_RA_NEON__LP_NAMESPACE "version-url"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_BASELINE_COLLECTION</name></cpp:macro> <cpp:value>"DAV:baseline-collection"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_CHECKED_IN</name></cpp:macro> <cpp:value>"DAV:checked-in"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_VCC</name></cpp:macro> <cpp:value>"DAV:version-controlled-configuration"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_VERSION_NAME</name></cpp:macro> <cpp:value>"DAV:" SVN_DAV__VERSION_NAME</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_CREATIONDATE</name></cpp:macro> <cpp:value>"DAV:creationdate"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_CREATOR_DISPLAYNAME</name></cpp:macro> <cpp:value>"DAV:creator-displayname"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_GETCONTENTLENGTH</name></cpp:macro> <cpp:value>"DAV:getcontentlength"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_BASELINE_RELPATH</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "baseline-relative-path"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_MD5_CHECKSUM</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "md5-checksum"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_REPOSITORY_UUID</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "repository-uuid"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__PROP_DEADPROP_COUNT</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "deadprop-count"</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>is_collection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_hash_t</name> *</type><name>propset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>href_parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_ra_neon__resource_t</name>;</typedef>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_props</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>results</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>int</name></type> <name>depth</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>label</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>ne_propname</name> *</type><name>which_props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_props_resource</name><parameter_list>(<param><decl><type><name>svn_ra_neon__resource_t</name> **</type><name>rsrc</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>label</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>ne_propname</name> *</type><name>which_props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_starting_props</name><parameter_list>(<param><decl><type><name>svn_ra_neon__resource_t</name> **</type><name>rsrc</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>label</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__search_for_starting_props</name><parameter_list>(<param><decl><type><name>svn_ra_neon__resource_t</name> **</type><name>rsrc</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>missing_path</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_one_prop</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>propval</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>label</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>ne_propname</name> *</type><name>propname</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_baseline_info</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>is_dir</name></decl></param>,
<param><decl><type><name>svn_string_t</name> *</type><name>bc_url</name></decl></param>,
<param><decl><type><name>svn_string_t</name> *</type><name>bc_relative</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>latest_rev</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_baseline_props</name><parameter_list>(<param><decl><type><name>svn_string_t</name> *</type><name>bc_relative</name></decl></param>,
<param><decl><type><name>svn_ra_neon__resource_t</name> **</type><name>bln_rsrc</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>ne_propname</name> *</type><name>which_props</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__get_vcc</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>vcc</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__do_proppatch</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>prop_changes</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>prop_deletes</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>extra_headers</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ne_propname</name></type> <name>svn_ra_neon__vcc_prop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ne_propname</name></type> <name>svn_ra_neon__checked_in_prop</name></decl>;</decl_stmt>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__get_activity_collection</name>
<parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>activity_coll</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_neon__set_neon_body_provider</name><parameter_list>(<param><decl><type><name>svn_ra_neon__request_t</name> *</type><name>req</name></decl></param>,
<param><decl><type><name>apr_file_t</name> *</type><name>body_file</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__DEPTH_ZERO</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__DEPTH_ONE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_RA_NEON__DEPTH_INFINITE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<function_decl><type><name>void</name></type>
<name>svn_ra_neon__add_depth_header</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>extra_headers</name></decl></param>, <param><decl><type><name>int</name></type> <name>depth</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>svn_ra_neon__xml_elm_t</name> *</type>
<name>svn_ra_neon__lookup_xml_elem</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_ra_neon__xml_elm_t</name> *</type><name>table</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>nspace</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__xml_collect_cdata</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><name>int</name></type> <name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cdata</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type> (*<name>svn_ra_neon__startelm_cb_t</name>)<parameter_list>(<param><decl><type><name>int</name> *</type><name>elem</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>int</name></type> <name>parent</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>nspace</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>atts</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type> (*<name>svn_ra_neon__cdata_cb_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>int</name></type> <name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cdata</name></decl></param>,
<param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>svn_error_t</name> *</type> (*<name>svn_ra_neon__endelm_cb_t</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>int</name></type> <name>state</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>nspace</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>ne_xml_parser</name> *</type>
<name>svn_ra_neon__xml_parser_create</name><parameter_list>(<param><decl><type><name>svn_ra_neon__request_t</name> *</type><name>req</name></decl></param>,
<param><decl><type><name>ne_accept_response</name></type> <name>accpt</name></decl></param>,
<param><decl><type><name>svn_ra_neon__startelm_cb_t</name></type> <name>startelm_cb</name></decl></param>,
<param><decl><type><name>svn_ra_neon__cdata_cb_t</name></type> <name>cdata_cb</name></decl></param>,
<param><decl><type><name>svn_ra_neon__endelm_cb_t</name></type> <name>endelm_cb</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__parsed_request</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>sess</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>method</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>body</name></decl></param>,
<param><decl><type><name>apr_file_t</name> *</type><name>body_file</name></decl></param>,
<param><function_decl><type><name>void</name></type> <name>set_parser</name><parameter_list>(<param><decl><type><name>ne_xml_parser</name> *</type><name>parser</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list></function_decl></param>,
<param><decl><type><name>svn_ra_neon__startelm_cb_t</name></type> <name>startelm_cb</name></decl></param>,
<param><decl><type><name>svn_ra_neon__cdata_cb_t</name></type> <name>cdata_cb</name></decl></param>,
<param><decl><type><name>svn_ra_neon__endelm_cb_t</name></type> <name>endelm_cb</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>extra_headers</name></decl></param>,
<param><decl><type><name>int</name> *</type><name>status_code</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>spool_response</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<enum>enum <block>{
<decl><name>ELEM_unknown</name> <init>= <expr>1</expr></init></decl>,
<decl><name>ELEM_root</name> <init>= <expr><name>NE_XML_STATEROOT</name></expr></init></decl>,
<decl><name>ELEM_UNUSED</name> <init>= <expr>100</expr></init></decl>,
<decl><name>ELEM_207_first</name> <init>= <expr><name>ELEM_UNUSED</name></expr></init></decl>,
<decl><name>ELEM_multistatus</name> <init>= <expr><name>ELEM_207_first</name></expr></init></decl>,
<decl><name>ELEM_response</name> <init>= <expr><name>ELEM_207_first</name> + 1</expr></init></decl>,
<decl><name>ELEM_responsedescription</name> <init>= <expr><name>ELEM_207_first</name> + 2</expr></init></decl>,
<decl><name>ELEM_href</name> <init>= <expr><name>ELEM_207_first</name> + 3</expr></init></decl>,
<decl><name>ELEM_propstat</name> <init>= <expr><name>ELEM_207_first</name> + 4</expr></init></decl>,
<decl><name>ELEM_prop</name> <init>= <expr><name>ELEM_207_first</name> + 5</expr></init></decl>,
<decl><name>ELEM_status</name> <init>= <expr><name>ELEM_207_first</name> + 6</expr></init></decl>,
<decl><name>ELEM_207_UNUSED</name> <init>= <expr><name>ELEM_UNUSED</name> + 100</expr></init></decl>,
<decl><name>ELEM_PROPS_UNUSED</name> <init>= <expr><name>ELEM_207_UNUSED</name> + 100</expr></init></decl>,
<decl><name>ELEM_activity_coll_set</name> <init>= <expr><name>ELEM_207_UNUSED</name></expr></init></decl>,
<decl><name>ELEM_baseline</name></decl>,
<decl><name>ELEM_baseline_coll</name></decl>,
<decl><name>ELEM_checked_in</name></decl>,
<decl><name>ELEM_collection</name></decl>,
<decl><name>ELEM_comment</name></decl>,
<decl><name>ELEM_revprop</name></decl>,
<decl><name>ELEM_creationdate</name></decl>,
<decl><name>ELEM_creator_displayname</name></decl>,
<decl><name>ELEM_ignored_set</name></decl>,
<decl><name>ELEM_merge_response</name></decl>,
<decl><name>ELEM_merged_set</name></decl>,
<decl><name>ELEM_options_response</name></decl>,
<decl><name>ELEM_set_prop</name></decl>,
<decl><name>ELEM_remove_prop</name></decl>,
<decl><name>ELEM_resourcetype</name></decl>,
<decl><name>ELEM_get_content_length</name></decl>,
<decl><name>ELEM_updated_set</name></decl>,
<decl><name>ELEM_vcc</name></decl>,
<decl><name>ELEM_version_name</name></decl>,
<decl><name>ELEM_post_commit_err</name></decl>,
<decl><name>ELEM_error</name></decl>,
<decl><name>ELEM_absent_directory</name></decl>,
<decl><name>ELEM_absent_file</name></decl>,
<decl><name>ELEM_add_directory</name></decl>,
<decl><name>ELEM_add_file</name></decl>,
<decl><name>ELEM_baseline_relpath</name></decl>,
<decl><name>ELEM_md5_checksum</name></decl>,
<decl><name>ELEM_deleted_path</name></decl>,
<decl><name>ELEM_replaced_path</name></decl>,
<decl><name>ELEM_added_path</name></decl>,
<decl><name>ELEM_modified_path</name></decl>,
<decl><name>ELEM_delete_entry</name></decl>,
<decl><name>ELEM_fetch_file</name></decl>,
<decl><name>ELEM_fetch_props</name></decl>,
<decl><name>ELEM_txdelta</name></decl>,
<decl><name>ELEM_log_date</name></decl>,
<decl><name>ELEM_log_item</name></decl>,
<decl><name>ELEM_log_report</name></decl>,
<decl><name>ELEM_open_directory</name></decl>,
<decl><name>ELEM_open_file</name></decl>,
<decl><name>ELEM_target_revision</name></decl>,
<decl><name>ELEM_update_report</name></decl>,
<decl><name>ELEM_resource_walk</name></decl>,
<decl><name>ELEM_resource</name></decl>,
<decl><name>ELEM_SVN_prop</name></decl>,
<decl><name>ELEM_dated_rev_report</name></decl>,
<decl><name>ELEM_name_version_name</name></decl>,
<decl><name>ELEM_name_creationdate</name></decl>,
<decl><name>ELEM_name_creator_displayname</name></decl>,
<decl><name>ELEM_svn_error</name></decl>,
<decl><name>ELEM_human_readable</name></decl>,
<decl><name>ELEM_repository_uuid</name></decl>,
<decl><name>ELEM_get_locations_report</name></decl>,
<decl><name>ELEM_location</name></decl>,
<decl><name>ELEM_get_location_segments_report</name></decl>,
<decl><name>ELEM_location_segment</name></decl>,
<decl><name>ELEM_file_revs_report</name></decl>,
<decl><name>ELEM_file_rev</name></decl>,
<decl><name>ELEM_rev_prop</name></decl>,
<decl><name>ELEM_get_locks_report</name></decl>,
<decl><name>ELEM_lock</name></decl>,
<decl><name>ELEM_lock_path</name></decl>,
<decl><name>ELEM_lock_token</name></decl>,
<decl><name>ELEM_lock_owner</name></decl>,
<decl><name>ELEM_lock_comment</name></decl>,
<decl><name>ELEM_lock_creationdate</name></decl>,
<decl><name>ELEM_lock_expirationdate</name></decl>,
<decl><name>ELEM_lock_discovery</name></decl>,
<decl><name>ELEM_lock_activelock</name></decl>,
<decl><name>ELEM_lock_type</name></decl>,
<decl><name>ELEM_lock_scope</name></decl>,
<decl><name>ELEM_lock_depth</name></decl>,
<decl><name>ELEM_lock_timeout</name></decl>,
<decl><name>ELEM_editor_report</name></decl>,
<decl><name>ELEM_open_root</name></decl>,
<decl><name>ELEM_apply_textdelta</name></decl>,
<decl><name>ELEM_change_file_prop</name></decl>,
<decl><name>ELEM_change_dir_prop</name></decl>,
<decl><name>ELEM_close_file</name></decl>,
<decl><name>ELEM_close_directory</name></decl>,
<decl><name>ELEM_deadprop_count</name></decl>,
<decl><name>ELEM_mergeinfo_report</name></decl>,
<decl><name>ELEM_mergeinfo_item</name></decl>,
<decl><name>ELEM_mergeinfo_path</name></decl>,
<decl><name>ELEM_mergeinfo_info</name></decl>,
<decl><name>ELEM_has_children</name></decl>,
<decl><name>ELEM_merged_revision</name></decl>
}</block>;</enum>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_ra_neon__merge_activity</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>new_rev</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>committed_date</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>committed_author</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>post_commit_err</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>repos_url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>activity_url</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>valid_targets</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>lock_tokens</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>keep_locks</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>disable_merge_response</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAKE_BUFFER</name><parameter_list>(<param><type><name>p</name></type></param>)</parameter_list></cpp:macro> <cpp:value>svn_stringbuf_ncreate("", 0, (p))</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__copy_href</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> *</type><name>dst</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__maybe_store_auth_info</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__maybe_store_auth_info_after_result</name><parameter_list>(<param><decl><type><name>svn_error_t</name> *</type><name>err</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNEXPECTED_ELEMENT</name><parameter_list>(<param><type><name>ns</name></type></param>, <param><type><name>elem</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(ns ? svn_error_createf(SVN_ERR_RA_DAV_MALFORMED_DATA, NULL, _("Got unexpected element %s:%s"), ns, elem) : svn_error_createf(SVN_ERR_RA_DAV_MALFORMED_DATA, NULL, _("Got unexpected element %s"), elem))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MISSING_ATTR</name><parameter_list>(<param><type><name>ns</name></type></param>, <param><type><name>elem</name></type></param>, <param><type><name>attr</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(ns ? svn_error_createf(SVN_ERR_RA_DAV_MALFORMED_DATA, NULL, _("Missing attribute '%s' on element %s:%s"), attr, ns, elem) : svn_error_createf(SVN_ERR_RA_DAV_MALFORMED_DATA, NULL, _("Missing attribute '%s' on element %s"), attr, elem))</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__request_dispatch</name><parameter_list>(<param><decl><type><name>int</name> *</type><name>code_p</name></decl></param>,
<param><decl><type><name>svn_ra_neon__request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>extra_headers</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>body</name></decl></param>,
<param><decl><type><name>int</name></type> <name>okay_1</name></decl></param>,
<param><decl><type><name>int</name></type> <name>okay_2</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__simple_request</name><parameter_list>(<param><decl><type><name>int</name> *</type><name>code</name></decl></param>,
<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>method</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>url</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>extra_headers</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>body</name></decl></param>,
<param><decl><type><name>int</name></type> <name>okay_1</name></decl></param>, <param><decl><type><name>int</name></type> <name>okay_2</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>svn_ra_neon__set_header</name><parameter_list>(<param><type><name>hash</name></type></param>, <param><type><name>hdr</name></type></param>, <param><type><name>val</name></type></param>)</parameter_list></cpp:macro> <cpp:value>apr_hash_set((hash), (hdr), APR_HASH_KEY_STRING, (val))</cpp:value></cpp:define>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__copy</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>ras</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>overwrite</name></decl></param>,
<param><decl><type><name>int</name></type> <name>depth</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type>
<name>svn_ra_neon__request_get_location</name><parameter_list>(<param><decl><type><name>svn_ra_neon__request_t</name> *</type><name>request</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__get_locations</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>locations</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>peg_revision</name></decl></param>,
<param><decl><type><name>apr_array_header_t</name> *</type><name>location_revisions</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__get_location_segments</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>peg_revision</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start_rev</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end_rev</name></decl></param>,
<param><decl><type><name>svn_location_segment_receiver_t</name></type> <name>receiver</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>receiver_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__get_locks</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> **</type><name>locks</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__lock</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>path_revs</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>comment</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force</name></decl></param>,
<param><decl><type><name>svn_ra_lock_callback_t</name></type> <name>lock_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>lock_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__unlock</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>path_tokens</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>force</name></decl></param>,
<param><decl><type><name>svn_ra_lock_callback_t</name></type> <name>lock_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>lock_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__get_lock_internal</name><parameter_list>(<param><decl><type><name>svn_ra_neon__session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_lock_t</name> **</type><name>lock</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__get_lock</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_lock_t</name> **</type><name>lock</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__replay</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>low_water_mark</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>send_deltas</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_delta_editor_t</name> *</type><name>editor</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>edit_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__replay_range</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>start_revision</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>end_revision</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name></type> <name>low_water_mark</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name></type> <name>send_deltas</name></decl></param>,
<param><decl><type><name>svn_ra_replay_revstart_callback_t</name></type> <name>revstart_func</name></decl></param>,
<param><decl><type><name>svn_ra_replay_revfinish_callback_t</name></type> <name>revfinish_func</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>replay_baton</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__has_capability</name><parameter_list>(<param><decl><type><name>svn_ra_session_t</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>svn_boolean_t</name> *</type><name>has</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>capability</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_ra_neon__assemble_locktoken_body</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>body</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>lock_tokens</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
