<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/libsvn_client/revisions.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_ra.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_wc_private.h"</cpp:file></cpp:include>
<function><type><name>svn_error_t</name> *</type>
<name>svn_client__get_revision_number</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name> *</type><name>revnum</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>youngest_rev</name></decl></param>,
<param><decl><type><name>svn_ra_session_t</name> *</type><name>ra_session</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_revision_t</name> *</type><name>revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<switch>switch <condition>(<expr><name><name>revision</name>-&gt;<name>kind</name></name></expr>)</condition> <block>{
<case>case <expr><name>svn_opt_revision_unspecified</name></expr>:
<expr_stmt><expr>*<name>revnum</name> = <name>SVN_INVALID_REVNUM</name></expr>;</expr_stmt>
<break>break;</break>
</case><case>case <expr><name>svn_opt_revision_number</name></expr>:
<expr_stmt><expr>*<name>revnum</name> = <name><name>revision</name>-&gt;<name>value</name>.<name>number</name></name></expr>;</expr_stmt>
<break>break;</break>
</case><case>case <expr><name>svn_opt_revision_head</name></expr>:
<if>if <condition>(<expr><name>youngest_rev</name> &amp;&amp; <call><name>SVN_IS_VALID_REVNUM</name><argument_list>(<argument><expr>*<name>youngest_rev</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>revnum</name> = *<name>youngest_rev</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<if>if <condition>(<expr>! <name>ra_session</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_CLIENT_RA_ACCESS_REQUIRED</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_get_latest_revnum</name><argument_list>(<argument><expr><name>ra_session</name></expr></argument>, <argument><expr><name>revnum</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>youngest_rev</name></expr>)</condition><then>
<expr_stmt><expr>*<name>youngest_rev</name> = *<name>revnum</name></expr>;</expr_stmt></then></if>
}</block></else></if>
<break>break;</break>
</case><case>case <expr><name>svn_opt_revision_committed</name></expr>:
</case><case>case <expr><name>svn_opt_revision_working</name></expr>:
</case><case>case <expr><name>svn_opt_revision_base</name></expr>:
</case><case>case <expr><name>svn_opt_revision_previous</name></expr>: <block>{
<decl_stmt><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>ent</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name>path</name> == <name>NULL</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_CLIENT_VERSIONED_PATH_REQUIRED</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_probe_open3</name><argument_list>(<argument><expr>&amp;<name>adm_access</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>,
<argument><expr>0</expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc__entry_versioned</name><argument_list>(<argument><expr>&amp;<name>ent</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>adm_access</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_close</name><argument_list>(<argument><expr><name>adm_access</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>(<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_base</name>)
|| (<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_working</name>)</expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>revnum</name> = <name><name>ent</name>-&gt;<name>revision</name></name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<if>if <condition>(<expr>! <call><name>SVN_IS_VALID_REVNUM</name><argument_list>(<argument><expr><name><name>ent</name>-&gt;<name>cmt_rev</name></name></expr></argument>)</argument_list></call></expr>)</condition><then>
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_CLIENT_BAD_REVISION</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Path '%s' has no committed "
"revision"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr>*<name>revnum</name> = <name><name>ent</name>-&gt;<name>cmt_rev</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_previous</name></expr>)</condition><then>
<expr_stmt><expr>(*<name>revnum</name>)--</expr>;</expr_stmt></then></if>
}</block></else></if>
}</block>
<break>break;</break>
</case><case>case <expr><name>svn_opt_revision_date</name></expr>:
<if>if <condition>(<expr>! <name>ra_session</name></expr>)</condition><then>
<return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_CLIENT_RA_ACCESS_REQUIRED</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_ra_get_dated_revision</name><argument_list>(<argument><expr><name>ra_session</name></expr></argument>, <argument><expr><name>revnum</name></expr></argument>,
<argument><expr><name><name>revision</name>-&gt;<name>value</name>.<name>date</name></name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</case><default>default:
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_CLIENT_BAD_REVISION</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unrecognized revision type requested for "
"'%s'"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</default>}</block></switch>
<if>if <condition>(<expr><name>youngest_rev</name>
&amp;&amp; <call><name>SVN_IS_VALID_REVNUM</name><argument_list>(<argument><expr>*<name>youngest_rev</name></expr></argument>)</argument_list></call>
&amp;&amp; <call><name>SVN_IS_VALID_REVNUM</name><argument_list>(<argument><expr>*<name>revnum</name></expr></argument>)</argument_list></call>
&amp;&amp; (*<name>revnum</name> &gt; *<name>youngest_rev</name>)</expr>)</condition><then>
<expr_stmt><expr>*<name>revnum</name> = *<name>youngest_rev</name></expr>;</expr_stmt></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<function><type><name>svn_boolean_t</name></type>
<name>svn_client__compare_revisions</name><parameter_list>(<param><decl><type><name>svn_opt_revision_t</name> *</type><name>revision1</name></decl></param>,
<param><decl><type><name>svn_opt_revision_t</name> *</type><name>revision2</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr>(<name><name>revision1</name>-&gt;<name>kind</name></name> != <name><name>revision2</name>-&gt;<name>kind</name></name>)
|| ((<name><name>revision1</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_number</name>)
&amp;&amp; (<name><name>revision1</name>-&gt;<name>value</name>.<name>number</name></name> != <name><name>revision2</name>-&gt;<name>value</name>.<name>number</name></name>))
|| ((<name><name>revision1</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_date</name>)
&amp;&amp; (<name><name>revision1</name>-&gt;<name>value</name>.<name>date</name></name> != <name><name>revision2</name>-&gt;<name>value</name>.<name>date</name></name>))</expr>)</condition><then>
<return>return <expr><name>FALSE</name></expr>;</return></then></if>
<return>return <expr><name>TRUE</name></expr>;</return>
}</block></function>
<function><type><name>svn_boolean_t</name></type>
<name>svn_client__revision_is_local</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_opt_revision_t</name> *</type><name>revision</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr>(<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_unspecified</name>)
|| (<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_head</name>)
|| (<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_number</name>)
|| (<name><name>revision</name>-&gt;<name>kind</name></name> == <name>svn_opt_revision_date</name>)</expr>)</condition><then>
<return>return <expr><name>FALSE</name></expr>;</return></then>
<else>else
<return>return <expr><name>TRUE</name></expr>;</return></else></if>
}</block></function>
</unit>
