<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/libsvn_client/url.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_wc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"private/svn_wc_private.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>
<function><type><name>svn_error_t</name> *</type>
<name>svn_client_url_from_path</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path_or_url</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>revision</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>revision</name>.<name>kind</name></name> = <name>svn_opt_revision_unspecified</name></expr>;</expr_stmt>
<return>return <expr><call><name>svn_client__derive_location</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>, <argument><expr>&amp;<name>revision</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_client_root_url_from_path</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path_or_url</name></decl></param>,
<param><decl><type><name>svn_client_ctx_t</name> *</type><name>ctx</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>svn_opt_revision_t</name></type> <name>peg_revision</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>peg_revision</name>.<name>kind</name></name> = <call><name>svn_path_is_url</name><argument_list>(<argument><expr><name>path_or_url</name></expr></argument>)</argument_list></call> ? <name>svn_opt_revision_head</name>
: <name>svn_opt_revision_base</name></expr>;</expr_stmt>
<return>return <expr><call><name>svn_client__get_repos_root</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>, <argument><expr>&amp;<name>peg_revision</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><name>svn_error_t</name> *</type>
<name>svn_client__derive_location</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>url</name></decl></param>,
<param><decl><type><name>svn_revnum_t</name> *</type><name>peg_revnum</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path_or_url</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_opt_revision_t</name> *</type><name>peg_revision</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_ra_session_t</name> *</type><name>ra_session</name></decl></param>,
<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
<param><decl><type><name>svn_client_ctx_t</name> *</type><name>ctx</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr>! <call><name>svn_path_is_url</name><argument_list>(<argument><expr><name>path_or_url</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>svn_wc_entry_t</name> *</type><name>entry</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name>adm_access</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc__entry_versioned</name><argument_list>(<argument><expr>&amp;<name>entry</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>, <argument><expr><name>adm_access</name></expr></argument>,
<argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>svn_cancel_func_t</name></type> <name>cancel_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> *</type><name>cancel_baton</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name>ctx</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>cancel_func</name> = <name><name>ctx</name>-&gt;<name>cancel_func</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>cancel_baton</name> = <name><name>ctx</name>-&gt;<name>cancel_baton</name></name></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_probe_open3</name><argument_list>(<argument><expr>&amp;<name>adm_access</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>,
<argument><expr><name>FALSE</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>cancel_func</name></expr></argument>, <argument><expr><name>cancel_baton</name></expr></argument>,
<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc__entry_versioned</name><argument_list>(<argument><expr>&amp;<name>entry</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>, <argument><expr><name>adm_access</name></expr></argument>,
<argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_wc_adm_close</name><argument_list>(<argument><expr><name>adm_access</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_client__entry_location</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><name>peg_revnum</name></expr></argument>, <argument><expr><name>path_or_url</name></expr></argument>,
<argument><expr><name><name>peg_revision</name>-&gt;<name>kind</name></name></expr></argument>, <argument><expr><name>entry</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr>*<name>url</name> = <name>path_or_url</name></expr>;</expr_stmt>
}</block></else></if>
<if>if <condition>(<expr><name>peg_revnum</name> &amp;&amp; !<call><name>SVN_IS_VALID_REVNUM</name><argument_list>(<argument><expr>*<name>peg_revnum</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>sesspool</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>svn_ra_session_t</name> *</type><name>session</name> <init>= <expr>(<name>svn_ra_session_t</name> *) <name>ra_session</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>session</name> == <name>NULL</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>sesspool</name> = <call><name>svn_pool_create</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_client__open_ra_session_internal</name><argument_list>(<argument><expr>&amp;<name>session</name></expr></argument>, <argument><expr>*<name>url</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>,
<argument><expr><name>TRUE</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>sesspool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_client__get_revision_number</name><argument_list>(<argument><expr><name>peg_revnum</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>session</name></expr></argument>,
<argument><expr><name>peg_revision</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>sesspool</name></expr>)</condition><then>
<expr_stmt><expr><call><name>svn_pool_destroy</name><argument_list>(<argument><expr><name>sesspool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></then></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><name>svn_error_t</name> *</type>
<name>svn_client__entry_location</name><argument_list>(<argument><expr>const <name>char</name> **<name>url</name></expr></argument>, <argument><expr><name>svn_revnum_t</name> *<name>revnum</name></expr></argument>,
<argument><expr>const <name>char</name> *<name>wc_path</name></expr></argument>,
<argument>enum <expr><name>svn_opt_revision_kind</name> <name>peg_rev_kind</name></expr></argument>,
<argument><expr>const <name>svn_wc_entry_t</name> *<name>entry</name></expr></argument>, <argument><expr><name>apr_pool_t</name> *<name>pool</name></expr></argument>)</argument_list> <block>{
<if>if <condition>(<expr><name><name>entry</name>-&gt;<name>copyfrom_url</name></name> &amp;&amp; <name>peg_rev_kind</name> == <name>svn_opt_revision_working</name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>url</name> = <name><name>entry</name>-&gt;<name>copyfrom_url</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>revnum</name></expr>)</condition><then>
<expr_stmt><expr>*<name>revnum</name> = <name><name>entry</name>-&gt;<name>copyfrom_rev</name></name></expr>;</expr_stmt></then></if>
}</block></then> <else>else <if>if <condition>(<expr><name><name>entry</name>-&gt;<name>url</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr>*<name>url</name> = <name><name>entry</name>-&gt;<name>url</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr><name>revnum</name></expr>)</condition><then>
<expr_stmt><expr>*<name>revnum</name> = <name><name>entry</name>-&gt;<name>revision</name></name></expr>;</expr_stmt></then></if>
}</block></then> <else>else <block>{
<return>return <expr><call><name>svn_error_createf</name><argument_list>(<argument><expr><name>SVN_ERR_ENTRY_MISSING_URL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><call><name>_</name><argument_list>(<argument><expr>"Entry for '%s' has no URL"</expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><name>wc_path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></else></if></else></if>
<return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></decl></decl_stmt>
</unit>
