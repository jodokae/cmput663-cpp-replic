<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="subversion/libsvn_fs_base/util/fs_skels.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_LIBSVN_FS_FS_SKELS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_FS_FS_SKELS_H</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APU_WANT_DB</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apu_want.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_hash.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"skel.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_proplist_skel</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>proplist_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_revision_skel</name><parameter_list>(<param><decl><type><name>revision_t</name> **</type><name>revision_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_transaction_skel</name><parameter_list>(<param><decl><type><name>transaction_t</name> **</type><name>transaction_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_representation_skel</name><parameter_list>(<param><decl><type><name>representation_t</name> **</type><name>rep_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_node_revision_skel</name><parameter_list>(<param><decl><type><name>node_revision_t</name> **</type><name>noderev_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_copy_skel</name><parameter_list>(<param><decl><type><name>copy_t</name> **</type><name>copy_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_entries_skel</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>entries_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_change_skel</name><parameter_list>(<param><decl><type><name>change_t</name> **</type><name>change_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__parse_lock_skel</name><parameter_list>(<param><decl><type><name>svn_lock_t</name> **</type><name>lock_p</name></decl></param>,
<param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_proplist_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>proplist</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_revision_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>revision_t</name> *</type><name>revision</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_transaction_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>transaction_t</name> *</type><name>transaction</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_representation_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>representation_t</name> *</type><name>rep</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_node_revision_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>node_revision_t</name> *</type><name>noderev</name></decl></param>,
<param><decl><type><name>int</name></type> <name>format</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_copy_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>copy_t</name> *</type><name>copy</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_entries_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><name>apr_hash_t</name> *</type><name>entries</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_change_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>change_t</name> *</type><name>change</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_base__unparse_lock_skel</name><parameter_list>(<param><decl><type><name>skel_t</name> **</type><name>skel_p</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>svn_lock_t</name> *</type><name>lock</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
