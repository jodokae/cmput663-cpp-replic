<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/_cppstats/subversion/libsvn_fs_base/bdb/dbt.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SVN_LIBSVN_FS_DBT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_FS_DBT_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APU_WANT_DB</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apu_want.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../util/skel.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__clear_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__nodata_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__set_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>void</name> *</type><name>data</name></decl></param>, <param><decl><type><name>u_int32_t</name></type> <name>size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__result_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__track_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__recno_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><name>db_recno_t</name> *</type><name>recno</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>svn_fs_base__compare_dbt</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>DBT</name> *</type><name>a</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>DBT</name> *</type><name>b</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__id_to_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>svn_fs_id_t</name> *</type><name>id</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__skel_to_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><name>skel_t</name> *</type><name>skel</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>DBT</name> *</type><name>svn_fs_base__str_to_dbt</name><parameter_list>(<param><decl><type><name>DBT</name> *</type><name>dbt</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>str</name></decl></param>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
