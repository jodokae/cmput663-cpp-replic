<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_client/compat_providers.c"><comment type="block">/*
 * compat_providers.c: wrapper providers backwards compatibility
 *
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>

<comment type="block">/* ==================================================================== */</comment>


<escape char="0xc"/>
<comment type="block">/*** Includes. ***/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_auth.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>
<name>svn_client_get_simple_prompt_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
   <param><decl><type><name>svn_auth_simple_prompt_func_t</name></type> <name>prompt_func</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>prompt_baton</name></decl></param>,
   <param><decl><type><name>int</name></type> <name>retry_limit</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_simple_prompt_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>prompt_func</name></expr></argument>, <argument><expr><name>prompt_baton</name></expr></argument>,
                                      <argument><expr><name>retry_limit</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_username_prompt_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
   <param><decl><type><name>svn_auth_username_prompt_func_t</name></type> <name>prompt_func</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>prompt_baton</name></decl></param>,
   <param><decl><type><name>int</name></type> <name>retry_limit</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_username_prompt_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>prompt_func</name></expr></argument>, <argument><expr><name>prompt_baton</name></expr></argument>,
                                        <argument><expr><name>retry_limit</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>



<function><type><name>void</name></type> <name>svn_client_get_simple_provider</name><parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
                                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_simple_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WIN32</name></expr></argument>)</argument_list></call> &amp;&amp; !<call><name>defined</name><argument_list>(<argument><expr><name>__MINGW32__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>void</name></type>
<name>svn_client_get_windows_simple_provider</name><parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
                                       <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_windows_simple_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* WIN32 */</comment>

<function><type><name>void</name></type> <name>svn_client_get_username_provider</name><parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
                                      <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_username_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_server_trust_file_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_server_trust_file_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_client_cert_file_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_client_cert_file_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_client_cert_pw_file_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_client_cert_pw_file_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_server_trust_prompt_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
   <param><decl><type><name>svn_auth_ssl_server_trust_prompt_func_t</name></type> <name>prompt_func</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>prompt_baton</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_server_trust_prompt_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>prompt_func</name></expr></argument>,
                                                <argument><expr><name>prompt_baton</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_client_cert_prompt_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
   <param><decl><type><name>svn_auth_ssl_client_cert_prompt_func_t</name></type> <name>prompt_func</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>prompt_baton</name></decl></param>,
   <param><decl><type><name>int</name></type> <name>retry_limit</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_client_cert_prompt_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>prompt_func</name></expr></argument>,
                                               <argument><expr><name>prompt_baton</name></expr></argument>, <argument><expr><name>retry_limit</name></expr></argument>,
                                               <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>void</name></type>
<name>svn_client_get_ssl_client_cert_pw_prompt_provider</name>
  <parameter_list>(<param><decl><type><name>svn_auth_provider_object_t</name> **</type><name>provider</name></decl></param>,
   <param><decl><type><name>svn_auth_ssl_client_cert_pw_prompt_func_t</name></type> <name>prompt_func</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>prompt_baton</name></decl></param>,
   <param><decl><type><name>int</name></type> <name>retry_limit</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>svn_auth_get_ssl_client_cert_pw_prompt_provider</name><argument_list>(<argument><expr><name>provider</name></expr></argument>, <argument><expr><name>prompt_func</name></expr></argument>,
                                                  <argument><expr><name>prompt_baton</name></expr></argument>, <argument><expr><name>retry_limit</name></expr></argument>,
                                                  <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
