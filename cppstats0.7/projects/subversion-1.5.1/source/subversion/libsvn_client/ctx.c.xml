<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_client/ctx.c"><comment type="block">/*
 * ctx.c:  intialization function for client context
 *
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>

<comment type="block">/* ==================================================================== */</comment>


<escape char="0xc"/>
<comment type="block">/*** Includes. ***/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>

<escape char="0xc"/>
<comment type="block">/*** Code. ***/</comment>

<comment type="block">/* Call the notify_func of the context provided by BATON, if non-NULL. */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>call_notify_func</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>svn_wc_notify_t</name> *</type><name>n</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><specifier>const</specifier> <name>svn_client_ctx_t</name> *</type><name>ctx</name> <init>= <expr><name>baton</name></expr></init></decl>;</decl_stmt>

  <if>if <condition>(<expr><name><name>ctx</name>-&gt;<name>notify_func</name></name></expr>)</condition><then>
    <expr_stmt><expr><call><name><name>ctx</name>-&gt;<name>notify_func</name></name><argument_list>(<argument><expr><name><name>ctx</name>-&gt;<name>notify_baton</name></name></expr></argument>, <argument><expr><name><name>n</name>-&gt;<name>path</name></name></expr></argument>, <argument><expr><name><name>n</name>-&gt;<name>action</name></name></expr></argument>, <argument><expr><name><name>n</name>-&gt;<name>kind</name></name></expr></argument>,
                     <argument><expr><name><name>n</name>-&gt;<name>mime_type</name></name></expr></argument>, <argument><expr><name><name>n</name>-&gt;<name>content_state</name></name></expr></argument>, <argument><expr><name><name>n</name>-&gt;<name>prop_state</name></name></expr></argument>,
                     <argument><expr><name><name>n</name>-&gt;<name>revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name>svn_error_t</name> *</type>
<name>svn_client_create_context</name><parameter_list>(<param><decl><type><name>svn_client_ctx_t</name> **</type><name>ctx</name></decl></param>,
                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr>*<name>ctx</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>svn_client_ctx_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>(*<name>ctx</name>)-&gt;<name>notify_func2</name></name> = <name>call_notify_func</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>(*<name>ctx</name>)-&gt;<name>notify_baton2</name></name> = *<name>ctx</name></expr>;</expr_stmt>
  <return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
