<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/include/svn_dav.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2000-2007 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file svn_dav.h
 * @brief Code related to WebDAV/DeltaV usage in Subversion.
 */</comment>


<escape char="0xc"/>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_DAV_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_H</name></cpp:macro></cpp:define>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>


<comment type="block">/** This is the MIME type that Subversion uses for its "svndiff" format.
 *
 * This is an application type, for the "svn" vendor. The specific subtype
 * is "svndiff".
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_SVNDIFF_MIME_TYPE</name></cpp:macro> <cpp:value>"application/vnd.svn-svndiff"</cpp:value></cpp:define>


<comment type="block">/** This header is *TEMPORARILY* used to transmit the delta base to the
 * server. It contains a version resource URL for what is on the client.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_DELTA_BASE_HEADER</name></cpp:macro> <cpp:value>"X-SVN-VR-Base"</cpp:value></cpp:define>

<comment type="block">/** This header is used when an svn client wants to trigger specific
 * svn server behaviors.  Normal WebDAV or DeltaV clients won't use it.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTIONS_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Options"</cpp:value></cpp:define>

<comment type="block">/**
 * @name options-header defines
 * Specific options that can appear in the options-header:
 * @{
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTION_NO_MERGE_RESPONSE</name></cpp:macro> <cpp:value>"no-merge-response"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTION_LOCK_BREAK</name></cpp:macro>        <cpp:value>"lock-break"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTION_LOCK_STEAL</name></cpp:macro>        <cpp:value>"lock-steal"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTION_RELEASE_LOCKS</name></cpp:macro>     <cpp:value>"release-locks"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_OPTION_KEEP_LOCKS</name></cpp:macro>        <cpp:value>"keep-locks"</cpp:value></cpp:define>
<comment type="block">/** @} */</comment>

<comment type="block">/** This header is used when an svn client wants to tell mod_dav_svn
 * exactly what revision of a resource it thinks it's operating on.
 * (For example, an svn server can use it to validate a DELETE request.)
 * Normal WebDAV or DeltaV clients won't use it.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_VERSION_NAME_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Version-Name"</cpp:value></cpp:define>

<comment type="block">/** A header generated by mod_dav_svn whenever it responds
    successfully to a LOCK request.  Only svn clients will notice it,
    and use it to fill in svn_lock_t-&gt;creation_date.   */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_CREATIONDATE_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Creation-Date"</cpp:value></cpp:define>

<comment type="block">/** A header generated by mod_dav_svn whenever it responds
    successfully to a PROPFIND for the 'DAV:lockdiscovery' property.
    Only svn clients will notice it, and use it to fill in
    svn_lock_t-&gt;owner.  (Remember that the DAV:owner field maps to
    svn_lock_t-&gt;comment, and that there is no analogue in the DAV
    universe of svn_lock_t-&gt;owner.)  */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_LOCK_OWNER_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Lock-Owner"</cpp:value></cpp:define>


<comment type="block">/**
 * @name Fulltext MD5 headers
 *
 * These headers are for client and server to verify that the base
 * and the result of a change transmission are the same on both
 * sides, regardless of what transformations (svndiff deltification,
 * gzipping, etc) the data may have gone through in between.
 *
 * The result md5 is always used whenever file contents are
 * transferred, because every transmission has a resulting text.
 *
 * The base md5 is used to verify the base text against which svndiff
 * data is being applied.  Note that even for svndiff transmissions,
 * base verification is not strictly necessary (and may therefore be
 * unimplemented), as any error will be caught by the verification of
 * the final result.  However, if the problem is that the base text is
 * corrupt, the error will be caught earlier if the base md5 is used.
 *
 * Normal WebDAV or DeltaV clients don't use these.
 * @{
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_BASE_FULLTEXT_MD5_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Base-Fulltext-MD5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_RESULT_FULLTEXT_MD5_HEADER</name></cpp:macro> <cpp:value>"X-SVN-Result-Fulltext-MD5"</cpp:value></cpp:define>
<comment type="block">/** @} */</comment>

<comment type="block">/* ### should add strings for the various XML elements in the reports
   ### and things. also the custom prop names. etc.
*/</comment>

<comment type="block">/** The svn-specific object that is placed within a &lt;D:error&gt; response.
 *
 * @defgroup svn_dav_error Errors in svn_dav
 * @{ */</comment>

<comment type="block">/** The error object's namespace */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_ERROR_NAMESPACE</name></cpp:macro> <cpp:value>"svn:"</cpp:value></cpp:define>

<comment type="block">/** The error object's tag */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_ERROR_TAG</name></cpp:macro>       <cpp:value>"error"</cpp:value></cpp:define>

<comment type="block">/** @} */</comment>


<comment type="block">/** General property (xml) namespaces that will be used by both ra_dav
 * and mod_dav_svn for marshalling properties.
 *
 * @defgroup svn_dav_property_xml_namespaces DAV property namespaces
 * @{
 */</comment>

<comment type="block">/** A property stored in the fs and wc, begins with 'svn:', and is
 * interpreted either by client or server.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_PROP_NS_SVN</name></cpp:macro> <cpp:value>"http://subversion.tigris.org/xmlns/svn/"</cpp:value></cpp:define>

<comment type="block">/** A property stored in the fs and wc, but totally ignored by svn
 * client and server.
 *
 * A property simply invented by the users.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_PROP_NS_CUSTOM</name></cpp:macro> <cpp:value>"http://subversion.tigris.org/xmlns/custom/"</cpp:value></cpp:define>

<comment type="block">/** A property purely generated and consumed by the network layer, not
 * seen by either fs or wc.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_PROP_NS_DAV</name></cpp:macro> <cpp:value>"http://subversion.tigris.org/xmlns/dav/"</cpp:value></cpp:define>

<escape char="0xc"/>
<comment type="block">/**
 * @name Custom (extension) values for the DAV header.
 * Note that although these share the SVN_DAV_PROP_NS_DAV namespace
 * prefix, they are not properties; they are header values.
 *
 * @{ **/</comment>

<comment type="block">/** Presence of this in a DAV header in an OPTIONS request or response
 * indicates that the transmitter supports @c svn_depth_t. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_NS_DAV_SVN_DEPTH</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "svn/depth"</cpp:value></cpp:define>

<comment type="block">/** Presence of this in a DAV header in an OPTIONS request or response
 * indicates that the transmitter knows how to handle merge-tracking
 * information. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_NS_DAV_SVN_MERGEINFO</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "svn/mergeinfo"</cpp:value></cpp:define>

<comment type="block">/** Presence of this in a DAV header in an OPTIONS response indicates
 * that the transmitter (in this case, the server) knows how to send
 * custom revprops in log responses. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_NS_DAV_SVN_LOG_REVPROPS</name></cpp:macro> <cpp:value>SVN_DAV_PROP_NS_DAV "svn/log-revprops"</cpp:value></cpp:define>

<comment type="block">/** Presence of this in a DAV header in an OPTIONS response indicates
 * that the transmitter (in this case, the server) knows how to handle
 * a replay of a directory in the repository (not root). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DAV_NS_DAV_SVN_PARTIAL_REPLAY</name></cpp:macro>\
            <cpp:value>SVN_DAV_PROP_NS_DAV "svn/partial-replay"</cpp:value></cpp:define>

<comment type="block">/** @} */</comment>

<comment type="block">/** @} */</comment>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="block">/* SVN_DAV_H */</comment>
</unit>
