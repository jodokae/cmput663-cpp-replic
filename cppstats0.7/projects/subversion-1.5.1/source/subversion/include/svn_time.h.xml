<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/include/svn_time.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file svn_time.h
 * @brief Time/date utilities
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_TIME_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_TIME_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_time.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<escape char="0xc"/>
<comment type="block">/** Convert @a when to a &lt;tt&gt;const char *&lt;/tt&gt; representation allocated
 * in @a pool.  Use svn_time_from_cstring() for the reverse
 * conversion.
 */</comment>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_time_to_cstring</name><parameter_list>(<param><decl><type><name>apr_time_t</name></type> <name>when</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Convert @a data to an @c apr_time_t @a when.
 * Use @a pool for temporary memory allocation.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_time_from_cstring</name><parameter_list>(<param><decl><type><name>apr_time_t</name> *</type><name>when</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>,
                                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Convert @a when to a &lt;tt&gt;const char *&lt;/tt&gt; representation allocated
 * in @a pool, suitable for human display in UTF8.
 */</comment>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_time_to_human_cstring</name><parameter_list>(<param><decl><type><name>apr_time_t</name></type> <name>when</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Convert a human-readable date @a text into an @c apr_time_t, using
 * @a now as the current time and storing the result in @a result.
 * The local time zone will be used to compute the appropriate GMT
 * offset if @a text contains a local time specification.  Set @a
 * matched to indicate whether or not @a text was parsed successfully.
 * Perform any allocation in @a pool.  Return an error iff an internal
 * error (rather than a simple parse error) occurs.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_parse_date</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>matched</name></decl></param>, <param><decl><type><name>apr_time_t</name> *</type><name>result</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>text</name></decl></param>,
               <param><decl><type><name>apr_time_t</name></type> <name>now</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Sleep until the next second, to ensure that any files modified
 * after we exit have a different timestamp than the one we recorded.
 */</comment>
<function_decl><type><name>void</name></type> <name>svn_sleep_for_timestamps</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SVN_TIME_H */</comment>
</unit>
