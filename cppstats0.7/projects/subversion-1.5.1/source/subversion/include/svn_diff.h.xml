<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/include/svn_diff.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2000-2007 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file svn_diff.h
 * @brief Contextual diffing.
 *
 * This is an internalized library for performing contextual diffs
 * between sources of data.
 *
 * @note This is different than Subversion's binary-diffing engine.
 * That API lives in @c svn_delta.h -- see the "text deltas" section.  A
 * "text delta" is way of representing precise binary diffs between
 * strings of data.  The Subversion client and server send text deltas
 * to one another during updates and commits.
 *
 * This API, however, is (or will be) used for performing *contextual*
 * merges between files in the working copy.  During an update or
 * merge, 3-way file merging is needed.  And 'svn diff' needs to show
 * the differences between 2 files.
 *
 * The nice thing about this API is that it's very general.  It
 * operates on any source of data (a "datasource") and calculates
 * contextual differences on "tokens" within the data.  In our
 * particular usage, the datasources are files and the tokens are
 * lines.  But the possibilities are endless.
 */</comment>

<escape char="0xc"/>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_DIFF_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_DIFF_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_file_io.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_version.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>


<escape char="0xc"/>
<comment type="block">/**
 * Get libsvn_diff version information.
 *
 * @since New in 1.1.
 */</comment>
<function_decl><type><specifier>const</specifier> <name>svn_version_t</name> *</type><name>svn_diff_version</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Diffs. */</comment>

<comment type="block">/** An opaque type that represents a difference between either two or
 * three datasources.   This object is returned by svn_diff_diff(),
 * svn_diff_diff3() and svn_diff_diff4(), and consumed by a number of
 * other routines.
 */</comment>
<typedef>typedef <type>struct <name>svn_diff_t</name></type> <name>svn_diff_t</name>;</typedef>

<comment type="block">/**
 * There are four types of datasources.  In GNU diff3 terminology,
 * the first three types correspond to the phrases "older", "mine",
 * and "yours".
 */</comment>
<typedef>typedef <type><enum>enum <name>svn_diff_datasource_e</name>
<block>{
  <comment type="block">/** The oldest form of the data. */</comment>
  <decl><name>svn_diff_datasource_original</name></decl>,

  <comment type="block">/** The same data, but potentially changed by the user. */</comment>
  <decl><name>svn_diff_datasource_modified</name></decl>,

  <comment type="block">/** The latest version of the data, possibly different than the
   * user's modified version.
   */</comment>
  <decl><name>svn_diff_datasource_latest</name></decl>,

  <comment type="block">/** The common ancestor of original and modified. */</comment>
  <decl><name>svn_diff_datasource_ancestor</name></decl>

}</block></enum></type> <name>svn_diff_datasource_e</name>;</typedef>


<comment type="block">/** A vtable for reading data from the three datasources. */</comment>
<typedef>typedef <type><struct>struct <name>svn_diff_fns_t</name>
<block>{
  <comment type="block">/** Open the datasource of type @a datasource. */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>datasource_open</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                                  <param><decl><type><name>svn_diff_datasource_e</name></type> <name>datasource</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** Close the datasource of type @a datasource. */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>datasource_close</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                                   <param><decl><type><name>svn_diff_datasource_e</name></type> <name>datasource</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** Get the next "token" from the datasource of type @a datasource.
   *  Return a "token" in @a *token.   Return a hash of "token" in @a *hash.
   *  Leave @a token and @a hash untouched when the datasource is exhausted.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>datasource_get_next_token</name>)<parameter_list>(<param><decl><type><name>apr_uint32_t</name> *</type><name>hash</name></decl></param>, <param><decl><type><name>void</name> **</type><name>token</name></decl></param>,
                                            <param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                                            <param><decl><type><name>svn_diff_datasource_e</name></type> <name>datasource</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** A function for ordering the tokens, resembling 'strcmp' in functionality.
   * @a compare should contain the return value of the comparison:
   * If @a ltoken and @a rtoken are "equal", return 0.  If @a ltoken is
   * "less than" @a rtoken, return a number &lt; 0.  If @a ltoken  is
   * "greater than" @a rtoken, return a number &gt; 0.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>token_compare</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                                <param><decl><type><name>void</name> *</type><name>ltoken</name></decl></param>,
                                <param><decl><type><name>void</name> *</type><name>rtoken</name></decl></param>,
                                <param><decl><type><name>int</name> *</type><name>compare</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** Free @a token from memory, the diff algorithm is done with it. */</comment>
  <function_decl><type><name>void</name></type> (*<name>token_discard</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                        <param><decl><type><name>void</name> *</type><name>token</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** Free *all* tokens from memory, they're no longer needed. */</comment>
  <function_decl><type><name>void</name></type> (*<name>token_discard_all</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_diff_fns_t</name>;</typedef>


<comment type="block">/* The Main Events */</comment>

<comment type="block">/** Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * an "original" and "modified" datasource.  Do all allocation in @a pool.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_diff_diff</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                           <param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>svn_diff_fns_t</name> *</type><name>diff_fns</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * three datasources: "original", "modified", and "latest".  Do all
 * allocation in @a pool.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_diff_diff3</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                            <param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>svn_diff_fns_t</name> *</type><name>diff_fns</name></decl></param>,
                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * two datasources: "original" and "latest", adjusted to become a full
 * difference between "original", "modified" and "latest" using "ancestor".
 * Do all allocation in @a pool.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_diff_diff4</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                            <param><decl><type><name>void</name> *</type><name>diff_baton</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>svn_diff_fns_t</name> *</type><name>diff_fns</name></decl></param>,
                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<escape char="0xc"/>
<comment type="block">/* Utility functions */</comment>

<comment type="block">/** Determine if a diff object contains conflicts.  If it does, return
 * @c TRUE, else return @c FALSE.
 */</comment>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_diff_contains_conflicts</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Determine if a diff object contains actual differences between the
 * datasources.  If so, return @c TRUE, else return @c FALSE.
 */</comment>
<function_decl><type><name>svn_boolean_t</name></type>
<name>svn_diff_contains_diffs</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>)</parameter_list>;</function_decl>



<escape char="0xc"/>
<comment type="block">/* Displaying Diffs */</comment>

<comment type="block">/** A vtable for displaying (or consuming) differences between datasources.
 *
 * Differences, similarities, and conflicts are described by lining up
 * "ranges" of data.
 *
 * @note These callbacks describe data ranges in units of "tokens".
 * A "token" is whatever you've defined it to be in your datasource
 * @c svn_diff_fns_t vtable.
 */</comment>
<typedef>typedef <type><struct>struct <name>svn_diff_output_fns_t</name>
<block>{
  <comment type="block">/* Two-way and three-way diffs both call the first two output functions: */</comment>

  <comment type="block">/**
   * If doing a two-way diff, then an *identical* data range was found
   * between the "original" and "modified" datasources.  Specifically,
   * the match starts at @a original_start and goes for @a original_length
   * tokens in the original data, and at @a modified_start for
   * @a modified_length tokens in the modified data.
   *
   * If doing a three-way diff, then all three datasources have
   * matching data ranges.  The range @a latest_start, @a latest_length in
   * the "latest" datasource is identical to the range @a original_start,
   * @a original_length in the original data, and is also identical to
   * the range @a modified_start, @a modified_length in the modified data.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>output_common</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>original_start</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>original_length</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>modified_start</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>modified_length</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>latest_start</name></decl></param>,
                                <param><decl><type><name>apr_off_t</name></type> <name>latest_length</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/**
   * If doing a two-way diff, then an *conflicting* data range was found
   * between the "original" and "modified" datasources.  Specifically,
   * the conflict starts at @a original_start and goes for @a original_length
   * tokens in the original data, and at @a modified_start for
   * @a modified_length tokens in the modified data.
   *
   * If doing a three-way diff, then an identical data range was discovered
   * between the "original" and "latest" datasources, but this conflicts with
   * a range in the "modified" datasource.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>output_diff_modified</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>original_start</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>original_length</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>modified_start</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>modified_length</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>latest_start</name></decl></param>,
                                       <param><decl><type><name>apr_off_t</name></type> <name>latest_length</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/* ------ The following callbacks are used by three-way diffs only --- */</comment>

  <comment type="block">/** An identical data range was discovered between the "original" and
   * "modified" datasources, but this conflicts with a range in the
   * "latest" datasource.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>output_diff_latest</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>original_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>original_length</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>modified_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>modified_length</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>latest_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>latest_length</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** An identical data range was discovered between the "modified" and
   * "latest" datasources, but this conflicts with a range in the
   * "original" datasource.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>output_diff_common</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>original_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>original_length</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>modified_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>modified_length</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>latest_start</name></decl></param>,
                                     <param><decl><type><name>apr_off_t</name></type> <name>latest_length</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="block">/** All three datasources have conflicting data ranges.  The range
   * @a latest_start, @a latest_length in the "latest" datasource conflicts
   * with the range @a original_start, @a original_length in the "original"
   * datasource, and also conflicts with the range @a modified_start,
   * @a modified_length in the "modified" datasource.
   * If there are common ranges in the "modified" and "latest" datasources
   * in this conflicting range, @a resolved_diff will contain a diff
   * which can be used to retrieve the common and conflicting ranges.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type>(*<name>output_conflict</name>)<parameter_list>(<param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>original_start</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>original_length</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>modified_start</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>modified_length</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>latest_start</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>latest_length</name></decl></param>,
                                  <param><decl><type><name>svn_diff_t</name> *</type><name>resolved_diff</name></decl></param>)</parameter_list>;</function_decl>
}</block></struct></type> <name>svn_diff_output_fns_t</name>;</typedef>


<comment type="block">/** Given a vtable of @a output_fns/@a output_baton for consuming
 * differences, output the differences in @a diff.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_output</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                <param><decl><type><name>void</name> *</type><name>output_baton</name></decl></param>,
                <param><decl><type><specifier>const</specifier> <name>svn_diff_output_fns_t</name> *</type><name>output_fns</name></decl></param>)</parameter_list>;</function_decl>


<escape char="0xc"/>
<comment type="block">/* Diffs on files */</comment>

<comment type="block">/** To what extent whitespace should be ignored when comparing lines.
 *
 * @since New in 1.4.
 */</comment>
<typedef>typedef <type><enum>enum <name>svn_diff_file_ignore_space_t</name>
<block>{
  <comment type="block">/** Ignore no whitespace. */</comment>
  <decl><name>svn_diff_file_ignore_space_none</name></decl>,

  <comment type="block">/** Ignore changes in sequences of whitespace characters, treating each
   * sequence of whitespace characters as a single space. */</comment>
  <decl><name>svn_diff_file_ignore_space_change</name></decl>,

  <comment type="block">/** Ignore all whitespace characters. */</comment>
  <decl><name>svn_diff_file_ignore_space_all</name></decl>
}</block></enum></type> <name>svn_diff_file_ignore_space_t</name>;</typedef>

<comment type="block">/** Options to control the behaviour of the file diff routines.
 *
 * @since New in 1.4.
 *
 * @note This structure may be extended in the future, so to preserve binary
 * compatibility, users must not allocate structs of this type themselves.
 * @see svn_diff_file_options_create().
 *
 * @note Although its name suggests otherwise, this structure is used to
 *       pass options to file as well as in-memory diff functions.
 */</comment>
<typedef>typedef <type><struct>struct <name>svn_diff_file_options_t</name>
<block>{
  <comment type="block">/** To what extent whitespace should be ignored when comparing lines.
   * The default is @c svn_diff_file_ignore_space_none. */</comment>
  <decl_stmt><decl><type><name>svn_diff_file_ignore_space_t</name></type> <name>ignore_space</name></decl>;</decl_stmt>
  <comment type="block">/** Whether to treat all end-of-line markers the same when comparing lines.
   * The default is @c FALSE. */</comment>
  <decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>ignore_eol_style</name></decl>;</decl_stmt>
  <comment type="block">/** Whether the '@@' lines of the unified diff output should include a prefix
    * of the nearest preceding line that starts with a character that might be
    * the initial character of a C language identifier.  The default is
    * @c FALSE.
    */</comment>
  <decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>show_c_function</name></decl>;</decl_stmt>
}</block></struct></type> <name>svn_diff_file_options_t</name>;</typedef>

<comment type="block">/** Allocate a @c svn_diff_file_options_t structure in @a pool, initializing
 * it with default values.
 *
 * @since New in 1.4.
 */</comment>
<function_decl><type><name>svn_diff_file_options_t</name> *</type>
<name>svn_diff_file_options_create</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/**
 * Parse @a args, an array of &lt;tt&gt;const char *&lt;/tt&gt; command line switches
 * and adjust @a options accordingly.  @a options is assumed to be initialized
 * with default values.  @a pool is used for temporary allocation.
 *
 * @since New in 1.4.
 *
 * The following options are supported:
 * - --ignore-space-change, -b
 * - --ignore-all-space, -w
 * - --ignore-eol-style
 * - --unified, -u (for compatibility, does nothing).
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_options_parse</name><parameter_list>(<param><decl><type><name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>args</name></decl></param>,
                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<escape char="0xc"/>
<comment type="block">/** A convenience function to produce a diff between two files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file and @a modified file.
 * (The file arguments must be full paths to the files.)
 *
 * Compare lines according to the relevant fields of @a options.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff_2</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                     <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Similar to svn_file_diff_2(), but with @a options set to a struct with
 * default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** A convenience function to produce a diff between three files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file, @a modified file, and @a latest
 * file.
 *
 * Compare lines according to the relevant fields of @a options.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff3_2</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>latest</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                      <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Similar to svn_diff_file_diff3_2(), but with @a options set to a struct
 * with default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff3</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>latest</name></decl></param>,
                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** A convenience function to produce a diff between four files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file, @a modified file, @a latest
 * and @a ancestor file. (The file arguments must be full paths to the files.)
 *
 * Compare lines according to the relevant fields of @a options.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff4_2</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>latest</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ancestor</name></decl></param>,
                      <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                      <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Simliar to svn_file_diff4_2(), but with @a options set to a struct with
 * default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_diff4</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>latest</name></decl></param>,
                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ancestor</name></decl></param>,
                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** A convenience function to produce unified diff output from the
 * diff generated by svn_diff_file_diff().
 *
 * @since New in 1.5.
 *
 * Output a @a diff between @a original_path and @a modified_path in unified
 * context diff format to @a output_stream.  Optionally supply
 * @a original_header and/or @a modified_header to be displayed in the header
 * of the output.  If @a original_header or @a modified_header is @c NULL, a
 * default header will be displayed, consisting of path and last modified time.
 * Output all headers and markers in @a header_encoding.  If @a relative_to_dir
 * is not @c NULL, the @a original_path and @a modified_path will have the
 * @a relative_to_dir stripped from the front of the respective paths.  If
 * @a relative_to_dir is @c NULL, paths will be not be modified.  If
 * @a relative_to_dir is not @c NULL but @a relative_to_dir is not a parent
 * path of the target, an error is returned. Finally, if @a relative_to_dir
 * is a URL, an error will be returned.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_output_unified3</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                              <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_path</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_path</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_header</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_header</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header_encoding</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>relative_to_dir</name></decl></param>,
                              <param><decl><type><name>svn_boolean_t</name></type> <name>show_c_function</name></decl></param>,
                              <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Similar to svn_diff_file_output_unified3(), but with @a relative_to_dir
 * set to NULL and @a show_c_function to false.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_output_unified2</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                              <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_path</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_path</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_header</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_header</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header_encoding</name></decl></param>,
                              <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Similar to svn_diff_file_output_unified2(), but with @a header_encoding
 * set to @c APR_LOCALE_CHARSET.
 *
 * @deprecated Provided for backward compatibility with the 1.2 API.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_output_unified</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                             <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_path</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_path</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_header</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_header</name></decl></param>,
                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** A convenience function to produce diff3 output from the
 * diff generated by svn_diff_file_diff3().
 *
 * Output a @a diff between @a original_path, @a modified_path and
 * @a latest_path in merged format to @a output_stream.  Optionally supply
 * @a conflict_modified, @a conflict_original, @a conflict_separator and/or
 * @a conflict_latest to be displayed as conflict markers in the output.
 * If @a conflict_original, @a conflict_modified, @a conflict_latest and/or
 * @a conflict_separator is @c NULL, a default marker will be displayed.
 * Set @a display_original_in_conflict and @a display_resolved_conflicts
 * as desired.  Note that these options are mutually exclusive.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_file_output_merge</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                           <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_path</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_path</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>latest_path</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_original</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_modified</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_latest</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_separator</name></decl></param>,
                           <param><decl><type><name>svn_boolean_t</name></type> <name>display_original_in_conflict</name></decl></param>,
                           <param><decl><type><name>svn_boolean_t</name></type> <name>display_resolved_conflicts</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<escape char="0xc"/>
<comment type="block">/* Diffs on in-memory structures */</comment>

<comment type="block">/** Generate @a diff output from the @a original and @a modified
 * in-memory strings.  @a diff will be allocated from @a pool.
 *
 * @since New in 1.5.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_mem_string_diff</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                         <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>original</name></decl></param>,
                         <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>modified</name></decl></param>,
                         <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                         <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Generate @a diff output from the @a orginal, @a modified and @a latest
 * in-memory strings.  @a diff will be allocated in @a pool.
 *
 * @since New in 1.5.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_mem_string_diff3</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>original</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>modified</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>latest</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Generate @a diff output from the @a original, @a modified and @a latest
 * in-memory strings, using @a ancestor.  @a diff will be allocated in @a pool.
 *
 * @since New in 1.5.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_mem_string_diff4</name><parameter_list>(<param><decl><type><name>svn_diff_t</name> **</type><name>diff</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>original</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>modified</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>latest</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>ancestor</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>svn_diff_file_options_t</name> *</type><name>options</name></decl></param>,
                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/** Outputs the @a diff object generated by svn_diff_mem_string_diff()
 * in unified diff format on @a output_stream, using @a original
 * and @a modified for the text in the output.
 * Outputs the header and markers in @a header_encoding.
 *
 * @a original_header and @a modified header are
 * used to fill the field after the "---" and "+++" header markers.
 *
 * @since New in 1.5.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_mem_string_output_unified</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                                   <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original_header</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified_header</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>header_encoding</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>original</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>modified</name></decl></param>,
                                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** Output the @a diff generated by svn_diff_mem_string_diff3() in diff3
 * format on @a output_stream, using @a original, @a modified and @a latest
 * for content changes.
 *
 * Use the conflict markers @a conflict_original, @a conflict_modified,
 * @a conflict_latest and @a conflict_separator or the default one for
 * each of these if @c NULL is passed.
 *
 * Insert the original in the output if @a display_original_in_conflict
 * is @c TRUE.
 *
 * @note @a display_original_in_conflict and @a display_resolved_conflicts
 *       are mutually exclusive.
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_diff_mem_string_output_merge</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>output_stream</name></decl></param>,
                                 <param><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>original</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>modified</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> *</type><name>latest</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_original</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_modified</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_latest</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>conflict_separator</name></decl></param>,
                                 <param><decl><type><name>svn_boolean_t</name></type> <name>display_original_in_conflict</name></decl></param>,
                                 <param><decl><type><name>svn_boolean_t</name></type> <name>display_resolved_conflicts</name></decl></param>,
                                 <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SVN_DIFF_H */</comment>
</unit>
