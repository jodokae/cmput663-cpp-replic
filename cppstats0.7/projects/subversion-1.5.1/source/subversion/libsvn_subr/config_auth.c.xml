<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_subr/config_auth.c"><comment type="block">/*
 * config_auth.c :  authentication files in the user config area
 *
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>


<escape char="0xc"/>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_md5.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_md5.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config_impl.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>

<comment type="block">/* Helper for svn_config_{read|write}_auth_data.  Return a path to a
   file within ~/.subversion/auth/ that holds CRED_KIND credentials
   within REALMSTRING.  If no path is available *PATH will be set to
   NULL. */</comment>
<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>auth_file_path</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>path</name></decl></param>,
               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cred_kind</name></decl></param>,
               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realmstring</name></decl></param>,
               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
               <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>authdir_path</name></decl>, *<decl><type ref="prev"/><name>hexname</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>digest</name><index>[<expr><name>APR_MD5_DIGESTSIZE</name></expr>]</index></name></decl>;</decl_stmt>

  <comment type="block">/* Construct the path to the directory containing the creds files,
     e.g. "~/.subversion/auth/svn.simple".  The last component is
     simply the cred_kind.  */</comment>
  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_config__user_config_path</name><argument_list>(<argument><expr><name>config_dir</name></expr></argument>, <argument><expr>&amp;<name>authdir_path</name></expr></argument>,
                                       <argument><expr><name>SVN_CONFIG__AUTH_SUBDIR</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr><name>authdir_path</name></expr>)</condition><then>
    <block>{
      <expr_stmt><expr><name>authdir_path</name> = <call><name>svn_path_join</name><argument_list>(<argument><expr><name>authdir_path</name></expr></argument>, <argument><expr><name>cred_kind</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="block">/* Construct the basename of the creds file.  It's just the
         realmstring converted into an md5 hex string.  */</comment>
      <expr_stmt><expr><call><name>apr_md5</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr><name>realmstring</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>realmstring</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>hexname</name> = <call><name>svn_md5_digest_to_cstring</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr>*<name>path</name> = <call><name>svn_path_join</name><argument_list>(<argument><expr><name>authdir_path</name></expr></argument>, <argument><expr><name>hexname</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
  <else>else
    <expr_stmt><expr>*<name>path</name> = <name>NULL</name></expr>;</expr_stmt></else></if>

  <return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>


<function><type><name>svn_error_t</name> *</type>
<name>svn_config_read_auth_data</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>hash</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cred_kind</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realmstring</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>auth_path</name></decl>;</decl_stmt>

  <expr_stmt><expr>*<name>hash</name> = <name>NULL</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>auth_file_path</name><argument_list>(<argument><expr>&amp;<name>auth_path</name></expr></argument>, <argument><expr><name>cred_kind</name></expr></argument>, <argument><expr><name>realmstring</name></expr></argument>, <argument><expr><name>config_dir</name></expr></argument>,
                         <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr>! <name>auth_path</name></expr>)</condition><then>
    <return>return <expr><name>SVN_NO_ERROR</name></expr>;</return></then></if>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_io_check_path</name><argument_list>(<argument><expr><name>auth_path</name></expr></argument>, <argument><expr>&amp;<name>kind</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr><name>kind</name> == <name>svn_node_file</name></expr>)</condition><then>
    <block>{
      <decl_stmt><decl><type><name>apr_file_t</name> *</type><name>authfile</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><call><name>svn_io_file_open</name><argument_list>(<argument><expr>&amp;<name>authfile</name></expr></argument>, <argument><expr><name>auth_path</name></expr></argument>,
                                 <argument><expr><name>APR_READ</name> | <name>APR_BUFFERED</name></expr></argument>, <argument><expr><name>APR_OS_DEFAULT</name></expr></argument>,
                                 <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unable to open auth file for reading"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr>*<name>hash</name> = <call><name>apr_hash_make</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><call><name>svn_hash_read</name><argument_list>(<argument><expr>*<name>hash</name></expr></argument>, <argument><expr><name>authfile</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Error parsing '%s'"</expr></argument>)</argument_list></call></expr></argument>,
                             <argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><name>auth_path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_io_file_close</name><argument_list>(<argument><expr><name>authfile</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

  <return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>


<function><type><name>svn_error_t</name> *</type>
<name>svn_config_write_auth_data</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>hash</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>cred_kind</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realmstring</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>config_dir</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>apr_file_t</name> *</type><name>authfile</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>auth_path</name></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>auth_file_path</name><argument_list>(<argument><expr>&amp;<name>auth_path</name></expr></argument>, <argument><expr><name>cred_kind</name></expr></argument>, <argument><expr><name>realmstring</name></expr></argument>, <argument><expr><name>config_dir</name></expr></argument>,
                         <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr>! <name>auth_path</name></expr>)</condition><then>
    <return>return <expr><call><name>svn_error_create</name><argument_list>(<argument><expr><name>SVN_ERR_NO_AUTH_FILE_PATH</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
                            <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unable to locate auth file"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>

  <comment type="block">/* Add the realmstring to the hash, so programs (or users) can
     verify exactly which set of credentials this file holds.  */</comment>
  <expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>SVN_CONFIG_REALMSTRING_KEY</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>,
               <argument><expr><call><name>svn_string_create</name><argument_list>(<argument><expr><name>realmstring</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><call><name>svn_io_file_open</name><argument_list>(<argument><expr>&amp;<name>authfile</name></expr></argument>, <argument><expr><name>auth_path</name></expr></argument>,
                             <argument><expr>(<name>APR_WRITE</name> | <name>APR_CREATE</name> | <name>APR_TRUNCATE</name>
                              | <name>APR_BUFFERED</name>)</expr></argument>,
                             <argument><expr><name>APR_OS_DEFAULT</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Unable to open auth file for writing"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>SVN_ERR_W</name><argument_list>(<argument><expr><call><name>svn_hash_write</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>authfile</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr>"Error writing hash to '%s'"</expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><call><name>svn_path_local_style</name><argument_list>(<argument><expr><name>auth_path</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_io_file_close</name><argument_list>(<argument><expr><name>authfile</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="block">/* To be nice, remove the realmstring from the hash again, just in
     case the caller wants their hash unchanged. */</comment>
  <expr_stmt><expr><call><name>apr_hash_set</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>SVN_CONFIG_REALMSTRING_KEY</name></expr></argument>, <argument><expr><name>APR_HASH_KEY_STRING</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>SVN_NO_ERROR</name></expr>;</return>
}</block></function>
</unit>
