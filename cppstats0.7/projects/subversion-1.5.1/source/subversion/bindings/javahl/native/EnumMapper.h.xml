<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/bindings/javahl/native/EnumMapper.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2003-2005, 2007 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file EnumMapper.h
 * @brief Interface of the class EnumMapper
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ENUM_MAPPER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENUM_MAPPER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_wc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>

<comment type="block">/**
 * This class contains all the mappers between the C enum's and the
 * matching Java int's.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>EnumMapper</name>
<block>{
 <label><name>public</name>:</label>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapCommitMessageStateFlags</name><parameter_list>(<param><decl><type><name>apr_byte_t</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapNotifyState</name><parameter_list>(<param><decl><type><name>svn_wc_notify_state_t</name></type> <name>state</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapNotifyAction</name><parameter_list>(<param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapNodeKind</name><parameter_list>(<param><decl><type><name>svn_node_kind_t</name></type> <name>nodeKind</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapNotifyLockState</name><parameter_list>(<param><decl><type><name>svn_wc_notify_lock_state_t</name></type> <name>state</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapStatusKind</name><parameter_list>(<param><decl><type><name>svn_wc_status_kind</name></type> <name>svnKind</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapScheduleKind</name><parameter_list>(<param><decl><type><name>svn_wc_schedule_t</name></type> <name>schedule</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapConflictKind</name><parameter_list>(<param><decl><type><name>svn_wc_conflict_kind_t</name></type> <name>kind</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapConflictAction</name><parameter_list>(<param><decl><type><name>svn_wc_conflict_action_t</name></type> <name>action</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>jint</name></type> <name>mapConflictReason</name><parameter_list>(<param><decl><type><name>svn_wc_conflict_reason_t</name></type> <name>reason</name></decl></param>)</parameter_list>;</function_decl>
}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// ENUM_MAPPER_H</comment>
</unit>
