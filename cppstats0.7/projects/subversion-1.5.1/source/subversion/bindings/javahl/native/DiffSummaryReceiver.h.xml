<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/bindings/javahl/native/DiffSummaryReceiver.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2006 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file DiffSummaryReceiver.h
 * @brief Interface of the class DiffSummaryReceiver
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DIFFSUMMARYRECEIVER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFFSUMMARYRECEIVER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>

<comment type="block">/**
 * A diff summary receiver callback.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>DiffSummaryReceiver</name>
<block>{
 <label><name>public</name>:</label>
  <comment type="block">/**
   * Create a DiffSummaryReceiver object.
   * @param jreceiver The Java callback object.
   */</comment>
  <macro><name>DiffSummaryReceiver</name><argument_list>(<argument>jobject jreceiver</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

  <comment type="block">/**
   * Destroy a DiffSummaryReceiver object
   */</comment>
  <expr_stmt><expr>~<call><name>DiffSummaryReceiver</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <comment type="block">/**
   * Implementation of the svn_client_diff_summarize_func_t API.
   *
   * @param diff The diff summary.
   * @param baton A reference to the DiffSummaryReceiver instance.
   * @param pool An APR pool from which to allocate memory.
   */</comment>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>summarize</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_client_diff_summarize_t</name> *</type><name>diff</name></decl></param>,
                                <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

 <label><name>protected</name>:</label>
  <comment type="block">/**
   * Callback invoked for every diff summary.
   *
   * @param diff The diff summary.
   * @param pool An APR pool from which to allocate memory.
   */</comment>
  <function_decl><type><name>svn_error_t</name> *</type><name>onSummary</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>svn_client_diff_summarize_t</name> *</type><name>diff</name></decl></param>,
                         <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

 <label><name>private</name>:</label>
  <comment type="block">/**
   * A local reference to the Java DiffSummaryReceiver peer.
   */</comment>
  <decl_stmt><decl><type><name>jobject</name></type> <name>m_receiver</name></decl>;</decl_stmt>
}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// DIFFSUMMARYRECEIVER_H</comment>
</unit>
