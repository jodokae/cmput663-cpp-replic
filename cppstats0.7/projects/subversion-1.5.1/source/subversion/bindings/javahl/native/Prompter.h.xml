<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/bindings/javahl/native/Prompter.h"><comment type="block">/**
 * @copyright
 * ====================================================================
 * Copyright (c) 2003-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 * @endcopyright
 *
 * @file Prompter.h
 * @brief Interface of the class Prompter
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PROMPTER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROMPTER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_auth.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<comment type="block">/**
 * This class requests username/password and informations about
 * ssl-certificates from the user. There are 3 Java interfaces for that.
 * PromptUserPassword, PromptUserPassword2 and PromptUserPassword3
 * each following interface extends the previous interface.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>Prompter</name>
<block>{
 <label><name>private</name>:</label>
  <comment type="block">/**
   * The Java callback object.
   */</comment>
  <decl_stmt><decl><type><name>jobject</name></type> <name>m_prompter</name></decl>;</decl_stmt>

  <comment type="block">/**
   * The callback objects implements PromptUserPassword2.
   */</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>m_version2</name></decl>;</decl_stmt>

  <comment type="block">/**
   * The callback objects implements PromptUserPassword3.
   */</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>m_version3</name></decl>;</decl_stmt>

  <comment type="block">/**
   * Tntermediate storage for an answer.
   */</comment>
  <expr_stmt><expr><name>std</name>::<name>string</name> <name>m_answer</name></expr>;</expr_stmt>

  <comment type="block">/**
   * Flag is the user allowed, that the last answer is stored in the
   * configuration.
   */</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>m_maySave</name></decl>;</decl_stmt>

  <macro><name>Prompter</name><argument_list>(<argument>jobject jprompter</argument>, <argument>bool v2</argument>, <argument>bool v3</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
  <function_decl><type><name>bool</name></type> <name>prompt</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>pi_username</name></decl></param>, <param><decl><type><name>bool</name></type> <name>maySave</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>bool</name></type> <name>askYesNo</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>question</name></decl></param>, <param><decl><type><name>bool</name></type> <name>yesIsDefault</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>askQuestion</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>question</name></decl></param>,
                          <param><decl><type><name>bool</name></type> <name>showAnswer</name></decl></param>, <param><decl><type><name>bool</name></type> <name>maySave</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>int</name></type> <name>askTrust</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>question</name></decl></param>, <param><decl><type><name>bool</name></type> <name>maySave</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><name>jstring</name></type> <name>password</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><name>jstring</name></type> <name>username</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>simple_prompt</name><parameter_list>(<param><decl><type><name>svn_auth_cred_simple_t</name> **</type><name>cred_p</name></decl></param>,
                                    <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
                                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>username</name></decl></param>,
                                    <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
                                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>username_prompt</name>
    <parameter_list>(<param><decl><type><name>svn_auth_cred_username_t</name> **</type><name>cred_p</name></decl></param>,
     <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
     <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>ssl_server_trust_prompt</name>
    <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_server_trust_t</name> **</type><name>cred_p</name></decl></param>,
     <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
     <param><decl><type><name>apr_uint32_t</name></type> <name>failures</name></decl></param>,
     <param><decl><type><specifier>const</specifier> <name>svn_auth_ssl_server_cert_info_t</name> *</type><name>cert_info</name></decl></param>,
     <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>ssl_client_cert_prompt</name>
    <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_client_cert_t</name> **</type><name>cred_p</name></decl></param>,
     <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
     <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>svn_error_t</name> *</type><name>ssl_client_cert_pw_prompt</name>
    <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_client_cert_pw_t</name> **</type><name>cred_p</name></decl></param>,
     <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
     <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
 <label><name>public</name>:</label>
  <function_decl><type><specifier>static</specifier> <name>Prompter</name> *</type><name>makeCPrompter</name><parameter_list>(<param><decl><type><name>jobject</name></type> <name>jprompter</name></decl></param>)</parameter_list>;</function_decl>
  <expr_stmt><expr>~<call><name>Prompter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function_decl><type><name>svn_auth_provider_object_t</name> *</type><name>getProviderUsername</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><name>svn_auth_provider_object_t</name> *</type><name>getProviderSimple</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><name>svn_auth_provider_object_t</name> *</type><name>getProviderServerSSLTrust</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><name>svn_auth_provider_object_t</name> *</type><name>getProviderClientSSL</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><name>svn_auth_provider_object_t</name> *</type><name>getProviderClientSSLPassword</name><parameter_list>()</parameter_list>;</function_decl>
}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// PROMPTER_H</comment>
</unit>
