<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/bindings/swig/perl/libsvn_swig_perl/swigutil_pl.h"><comment type="block">/*
 * swigutil_pl.h :  utility functions and stuff for the SWIG Perl bindings
 *
 * ====================================================================
 * Copyright (c) 2000-2006 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>


<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_SWIG_SWIGUTIL_PL_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_SWIG_SWIGUTIL_PL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;EXTERN.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;perl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;XSUB.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_strings.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_hash.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_tables.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_string.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_delta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_repos.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_private_config.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#  <cpp:directive>if</cpp:directive> <expr><name>_MSC_VER</name> &gt;= 1300 &amp;&amp; <name>_INTEGRAL_MAX_BITS</name> &gt;= 64</expr></cpp:if>
<cpp:define>#    <cpp:directive>define</cpp:directive> <cpp:macro><name>strtoll</name></cpp:macro> <cpp:value>_strtoi64</cpp:value></cpp:define>
<cpp:else>#  <cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#    <cpp:directive>define</cpp:directive> <cpp:macro><name>strtoll</name><parameter_list>(<param><type><name>str</name></type></param>, <param><type><name>endptr</name></type></param>, <param><type><name>base</name></type></param>)</parameter_list></cpp:macro> <cpp:value>_atoi64(str)</cpp:value></cpp:define>
<cpp:endif>#  <cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<escape char="0xc"/>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SVN_AVOID_CIRCULAR_LINKAGE_AT_ALL_COSTS_HACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <function_decl><type><name>apr_pool_t</name> *</type>(*<name>svn_swig_pl_get_current_pool_t</name>)<parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (*<name>svn_swig_pl_set_current_pool_t</name>)<parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>void</name></type> <name>svn_swig_pl_bind_current_pool_fns</name><parameter_list>(<param><decl><type><name>svn_swig_pl_get_current_pool_t</name></type> <name>get</name></decl></param>,
                                       <param><decl><type><name>svn_swig_pl_set_current_pool_t</name></type> <name>set</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>apr_pool_t</name> *</type><name>svn_swig_pl_make_pool</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>obj</name></decl></param>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <name>perl_func_invoker</name> <block>{
    <decl><name>CALL_METHOD</name></decl>,
    <decl><name>CALL_SV</name></decl>
}</block></enum></type> <name>perl_func_invoker_t</name>;</typedef>

<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_callback_thunk</name><parameter_list>(<param><decl><type><name>perl_func_invoker_t</name></type> <name>caller_func</name></decl></param>,
                                        <param><decl><type><name>void</name> *</type><name>func</name></decl></param>,
                                        <param><decl><type><name>SV</name> **</type><name>result</name></decl></param>,
                                        <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>fmt</name></decl></param>, <param><decl><type>...</type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_prophash_to_hash</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>hash</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_convert_hash</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> *</type><name>hash</name></decl></param>, <param><decl><type><name>swig_type_info</name> *</type><name>tinfo</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>svn_swig_pl_strings_to_array</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>source</name></decl></param>,
                                                       <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>apr_hash_t</name> *</type><name>svn_swig_pl_strings_to_hash</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>source</name></decl></param>,
                                        <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_hash_t</name> *</type><name>svn_swig_pl_objs_to_hash</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>source</name></decl></param>, <param><decl><type><name>swig_type_info</name> *</type><name>tinfo</name></decl></param>,
                                     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_hash_t</name> *</type><name>svn_swig_pl_objs_to_hash_by_name</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>source</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>typename</name></decl></param>,
                                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>svn_swig_pl_objs_to_array</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>source</name></decl></param>,
                                                    <param><decl><type><name>swig_type_info</name> *</type><name>tinfo</name></decl></param>,
                                                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_array_to_list</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>array</name></decl></param>)</parameter_list>;</function_decl>
<comment type="block">/* Formerly used by pre-1.0 APIs. Now unused
SV *svn_swig_pl_ints_to_list(const apr_array_header_t *array);
*/</comment>
<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_convert_array</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type><name>array</name></decl></param>,
                              <param><decl><type><name>swig_type_info</name> *</type><name>tinfo</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked log receiver function.  */</comment>
<function_decl><type><name>svn_error_t</name> *</type> <name>svn_swig_pl_thunk_log_receiver</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>py_receiver</name></decl></param>,
                                             <param><decl><type><name>apr_hash_t</name> *</type><name>changed_paths</name></decl></param>,
                                             <param><decl><type><name>svn_revnum_t</name></type> <name>rev</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>author</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>date</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>msg</name></decl></param>,
                                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<comment type="block">/* thunked commit editor callback. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_commit_callback</name><parameter_list>(<param><decl><type><name>svn_revnum_t</name></type> <name>new_revision</name></decl></param>,
					       <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>date</name></decl></param>,
					       <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>author</name></decl></param>,
					       <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked repos_history callback. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_history_func</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                            <param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
                                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked dir_delta authz read function. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_authz_func</name><parameter_list>(<param><decl><type><name>svn_boolean_t</name> *</type><name>allowed</name></decl></param>,
                                          <param><decl><type><name>svn_fs_root_t</name> *</type><name>root</name></decl></param>,
                                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                          <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* ra callbacks. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_ra_make_callbacks</name><parameter_list>(<param><decl><type><name>svn_ra_callbacks_t</name> **</type><name>cb</name></decl></param>,
				   <param><decl><type><name>void</name> **</type><name>c_baton</name></decl></param>,
				   <param><decl><type><name>SV</name> *</type><name>perl_callbacks</name></decl></param>,
				   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked simple_prompt callback function */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_simple_prompt</name><parameter_list>(<param><decl><type><name>svn_auth_cred_simple_t</name> **</type><name>cred</name></decl></param>,
                                             <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>username</name></decl></param>,
                                             <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
                                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked username_prompt callback function */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_username_prompt</name><parameter_list>(<param><decl><type><name>svn_auth_cred_username_t</name> **</type><name>cred</name></decl></param>,
                                               <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
                                               <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
                                               <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked ssl_server_trust_prompt callback function */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_ssl_server_trust_prompt</name>
  <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_server_trust_t</name> **</type><name>cred</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
   <param><decl><type><name>apr_uint32_t</name></type> <name>failures</name></decl></param>,
   <param><decl><type><specifier>const</specifier> <name>svn_auth_ssl_server_cert_info_t</name> *</type><name>cert_info</name></decl></param>,
   <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked ssl_client_cert callback function */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_ssl_client_cert_prompt</name>
  <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_client_cert_t</name> **</type><name>cred</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
   <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked ssl_client_cert_pw callback function */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_thunk_ssl_client_cert_pw_prompt</name>
  <parameter_list>(<param><decl><type><name>svn_auth_cred_ssl_client_cert_pw_t</name> **</type><name>cred</name></decl></param>,
   <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>,
   <param><decl><type><name>svn_boolean_t</name></type> <name>may_save</name></decl></param>,
   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* thunked callback for svn_ra_get_wc_prop_func_t */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>thunk_get_wc_prop</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>relpath</name></decl></param>,
                               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
                               <param><decl><type><specifier>const</specifier> <name>svn_string_t</name> **</type><name>value</name></decl></param>,
                               <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Thunked version of svn_wc_notify_func_t callback type */</comment>
<function_decl><type><name>void</name></type> <name>svn_swig_pl_notify_func</name><parameter_list>(<param><decl><type><name>void</name> *</type> <name>baton</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
		             <param><decl><type><name>svn_wc_notify_action_t</name></type> <name>action</name></decl></param>,
			     <param><decl><type><name>svn_node_kind_t</name></type> <name>kind</name></decl></param>,
			     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>mime_type</name></decl></param>,
			     <param><decl><type><name>svn_wc_notify_state_t</name></type> <name>content_state</name></decl></param>,
			     <param><decl><type><name>svn_wc_notify_state_t</name></type> <name>prop_state</name></decl></param>,
			     <param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Thunked version of svn_client_get_commit_log3_t callback type. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_get_commit_log_func</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>log_msg</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>tmp_file</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>apr_array_header_t</name> *</type>
                                             <name>commit_items</name></decl></param>,
                                             <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Thunked version of svn_client_info_t callback type. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_info_receiver</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                       <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                       <param><decl><type><specifier>const</specifier> <name>svn_info_t</name> *</type><name>info</name></decl></param>,
                                       <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Thunked version of svn_wc_cancel_func_t callback type. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_cancel_func</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>cancel_baton</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Thunked version of svn_wc_status_func_t callback type. */</comment>
<function_decl><type><name>void</name></type> <name>svn_swig_pl_status_func</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                             <param><decl><type><name>svn_wc_status_t</name> *</type><name>status</name></decl></param>)</parameter_list>;</function_decl>
<comment type="block">/* Thunked version of svn_client_blame_receiver_t callback type. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_blame_func</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>baton</name></decl></param>,
                                    <param><decl><type><name>apr_int64_t</name></type> <name>line_no</name></decl></param>,
                                    <param><decl><type><name>svn_revnum_t</name></type> <name>revision</name></decl></param>,
                                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>author</name></decl></param>,
                                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>date</name></decl></param>,
                                    <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>line</name></decl></param>,
                                    <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Thunked config enumerator */</comment>
<function_decl><type><name>svn_boolean_t</name></type> <name>svn_swig_pl_thunk_config_enumerator</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>, <param><decl><type><name>void</name> *</type><name>baton</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* helper for making the editor */</comment>
<function_decl><type><name>void</name></type> <name>svn_delta_make_editor</name><parameter_list>(<param><decl><type><name>svn_delta_editor_t</name> **</type><name>editor</name></decl></param>,
                           <param><decl><type><name>void</name> **</type><name>edit_baton</name></decl></param>,
                           <param><decl><type><name>SV</name> *</type><name>perl_editor</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>svn_delta_wrap_window_handler</name><parameter_list>(<param><decl><type><name>svn_txdelta_window_handler_t</name> *</type><name>handler</name></decl></param>,
                                   <param><decl><type><name>void</name> **</type><name>h_baton</name></decl></param>,
                                   <param><decl><type><name>SV</name> *</type><name>callback</name></decl></param>,
                                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* svn_stream_t helpers */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_swig_pl_make_stream</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> **</type><name>stream</name></decl></param>, <param><decl><type><name>SV</name> *</type><name>obj</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_from_stream</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* apr_file_t * */</comment>
<function_decl><type><name>apr_file_t</name> *</type><name>svn_swig_pl_make_file</name><parameter_list>(<param><decl><type><name>SV</name> *</type><name>file</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>svn_swig_pl_hold_ref_in_pool</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>SV</name> *</type><name>sv</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* md5 access class */</comment>
<function_decl><type><name>SV</name> *</type><name>svn_swig_pl_from_md5</name><parameter_list>(<param><decl><type><name>unsigned</name> <name>char</name> *</type><name>digest</name></decl></param>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="block">/* SVN_SWIG_SWIGUTIL_PL_H */</comment>
</unit>
