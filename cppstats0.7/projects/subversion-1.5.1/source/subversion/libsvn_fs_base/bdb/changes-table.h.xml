<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_fs_base/bdb/changes-table.h"><comment type="block">/* changes-table.h : internal interface to `changes' table
 *
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_LIBSVN_FS_CHANGES_TABLE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_FS_CHANGES_TABLE_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APU_WANT_DB</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apu_want.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../trail.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<escape char="0xc"/>
<comment type="block">/* Open a `changes' table in ENV.  If CREATE is non-zero, create one
   if it doesn't exist.  Set *CHANGES_P to the new table.  Return a
   Berkeley DB error code.  */</comment>
<function_decl><type><name>int</name></type> <name>svn_fs_bdb__open_changes_table</name><parameter_list>(<param><decl><type><name>DB</name> **</type><name>changes_p</name></decl></param>,
                                   <param><decl><type><name>DB_ENV</name> *</type><name>env</name></decl></param>,
                                   <param><decl><type><name>svn_boolean_t</name></type> <name>create</name></decl></param>)</parameter_list>;</function_decl>

<escape char="0xc"/>
<comment type="block">/* Add CHANGE as a record to the `changes' table in FS as part of
   TRAIL, keyed on KEY.

   CHANGE-&gt;path is expected to be a canonicalized filesystem path (see
   svn_fs__canonicalize_abspath).

   Note that because the `changes' table uses duplicate keys, this
   function will not overwrite prior additions that have the KEY
   key, but simply adds this new record alongside previous ones.  */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_fs_bdb__changes_add</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                                     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>key</name></decl></param>,
                                     <param><decl><type><name>change_t</name> *</type><name>change</name></decl></param>,
                                     <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                                     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Remove all changes associated with KEY from the `changes' table in
   FS, as part of TRAIL. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_fs_bdb__changes_delete</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                                        <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>key</name></decl></param>,
                                        <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                                        <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Return a hash *CHANGES_P, keyed on const char * paths, and
   containing svn_fs_path_change_t * values representing summarized
   changed records associated with KEY in FS, as part of TRAIL.
   Allocate the array and its items in POOL.  */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_fs_bdb__changes_fetch</name><parameter_list>(<param><decl><type><name>apr_hash_t</name> **</type><name>changes_p</name></decl></param>,
                                       <param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                                       <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>key</name></decl></param>,
                                       <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                                       <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Return an array *CHANGES_P of change_t * items representing
   all the change records associated with KEY in FS, as part of TRAIL.
   Allocate the array and its items in POOL.  */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_fs_bdb__changes_fetch_raw</name><parameter_list>(<param><decl><type><name>apr_array_header_t</name> **</type><name>changes_p</name></decl></param>,
                                           <param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>key</name></decl></param>,
                                           <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SVN_LIBSVN_FS_CHANGES_TABLE_H */</comment>
</unit>
