<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_fs_base/bdb/lock-tokens-table.h"><comment type="block">/* lock-tokens-table.h : internal interface to ops on `lock-tokens' table
 *
 * ====================================================================
 * Copyright (c) 2000-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_LIBSVN_FS_LOCK_TOKENS_TABLE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_FS_LOCK_TOKENS_TABLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_fs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../trail.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../fs.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<escape char="0xc"/>
<comment type="block">/* Open a `lock-tokens' table in ENV.  If CREATE is non-zero, create
   one if it doesn't exist.  Set *LOCK_TOKENS_P to the new table.
   Return a Berkeley DB error code.  */</comment>
<function_decl><type><name>int</name></type> <name>svn_fs_bdb__open_lock_tokens_table</name><parameter_list>(<param><decl><type><name>DB</name> **</type><name>locks_tokens_p</name></decl></param>,
                                       <param><decl><type><name>DB_ENV</name> *</type><name>env</name></decl></param>,
                                       <param><decl><type><name>svn_boolean_t</name></type> <name>create</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Add a lock-token to the `lock-tokens' table in FS, as part of TRAIL.
   Use PATH as the key and LOCK_TOKEN as the value.

   Warning: if PATH already exists as a key, then its value will be
   overwritten. */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_bdb__lock_token_add</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lock_token</name></decl></param>,
                           <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Remove the lock-token whose key is PATH from the `lock-tokens'
   table of FS, as part of TRAIL.

   If PATH doesn't exist as a key, return SVN_ERR_FS_NO_SUCH_LOCK.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_bdb__lock_token_delete</name><parameter_list>(<param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                              <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                              <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Retrieve the lock-token *LOCK_TOKEN_P pointed to by PATH from the
   `lock-tokens' table of FS, as part of TRAIL.  Perform all
   allocations in POOL.

   If PATH doesn't exist as a key, return SVN_ERR_FS_NO_SUCH_LOCK.

   If PATH points to a token which points to an expired lock, return
     SVN_ERR_FS_LOCK_EXPIRED.  (After this, both the token and lock are
     gone from their respective tables.)

   If PATH points to a token which points to a non-existent lock,
     return SVN_ERR_FS_BAD_LOCK_TOKEN.  (After this, the token is also
     removed from the `lock-tokens' table.)
 */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_fs_bdb__lock_token_get</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>lock_token_p</name></decl></param>,
                           <param><decl><type><name>svn_fs_t</name> *</type><name>fs</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                           <param><decl><type><name>trail_t</name> *</type><name>trail</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>



<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SVN_LIBSVN_FS_LOCK_TOKENS_TABLE_H */</comment>
</unit>
