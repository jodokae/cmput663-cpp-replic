<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/subversion/libsvn_wc/log.h"><comment type="block">/*
 * log.h :  interfaces for running .svn/log files.
 *
 * ====================================================================
 * Copyright (c) 2000-2007 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>

<escape char="0xc"/>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SVN_LIBSVN_WC_LOG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SVN_LIBSVN_WC_LOG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_pools.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_error.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_wc.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<escape char="0xc"/>

<comment type="block">/* Return the path to use for logfile number LOG_NUMBER.  The returned
   string will be allocated from POOL.

   For log number 0, this will just be SVN_WC__ADM_LOG to maintain
   compatibility with 1.0.x.  Higher numbers have the digits of the
   number appended to SVN_WC__ADM_LOG so that they look like "log.1",
   "log.2", etc. */</comment>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>svn_wc__logfile_path</name><parameter_list>(<param><decl><type><name>int</name></type> <name>log_number</name></decl></param>,
                                 <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<escape char="0xc"/>
<comment type="block">/* The svn_wc__loggy_* functions in this section take path arguments
   with the same base as with which the adm_access was opened.

*/</comment>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to append the contents
   of SRC to DST.

   This command fails to be idempotent or atomic: there's no way to
   tell if you should re-run this!  This function is deprecated; new
   uses should not be added, and the single current use (constructing
   human-readable non-parsed property conflict files) should be
   rewritten.  See Issue #3015.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_append</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                     <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
                     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to mark PATH as committed
   with revision REVNUM.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_committed</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                        <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                        <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>, <param><decl><type><name>svn_revnum_t</name></type> <name>revnum</name></decl></param>,
                        <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to copy the file SRC_PATH to
   DST_PATH, if it exists. If it doesn't and REMOVE_DST_IF_NO_SRC is TRUE
   the file at DST_PATH will be deleted if any.

   Sets *DST_MODIFIED, if either the copy or the remove have been carried out.
*/</comment>

<typedef>typedef <type><enum>enum <name>svn_wc__copy_t</name>
<block>{
  <comment type="block">/* Normal copy, no translation */</comment>
  <decl><name>svn_wc__copy_normal</name> <init>= <expr>0</expr></init></decl>,

  <comment type="block">/* Copy, translate using file properties */</comment>
  <decl><name>svn_wc__copy_translate</name></decl>,

  <comment type="block">/* Copy, translate using only the svn:special property, if any */</comment>
  <decl><name>svn_wc__copy_translate_special_only</name></decl>,

  <comment type="block">/* Copy, detranslate using file properties */</comment>
  <decl><name>svn_wc__copy_detranslate</name></decl>
}</block></enum></type> <name>svn_wc__copy_t</name>;</typedef>

<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_copy</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                   <param><decl><type><name>svn_boolean_t</name> *</type><name>dst_modified</name></decl></param>,
                   <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                   <param><decl><type><name>svn_wc__copy_t</name></type> <name>copy_type</name></decl></param>,
                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src_path</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_path</name></decl></param>,
                   <param><decl><type><name>svn_boolean_t</name></type> <name>remove_dst_if_no_src</name></decl></param>,
                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to generate a translated
   file from SRC to DST with translation settings from VERSIONED
   and flags specified in FLAGS.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_translated_file</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                              <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src</name></decl></param>,
                              <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>versioned</name></decl></param>,
                              <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to delete the entry
   associated with PATH from the entries file.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_delete_entry</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                           <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to delete lock related
   fields from the entry belonging to PATH.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_delete_lock</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                          <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to delete changelist
   from the entry belonging to PATH.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_delete_changelist</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                                <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                                <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with commands to modify the entry associated with NAME
   according to the flags specified in MODIFY_FLAGS, based on the values
   supplied in *ENTRY.

   The flags in MODIFY_FLAGS are to be taken from the svn_wc__entry_modify
   parameter by the same name.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_entry_modify</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                           <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>,
                           <param><decl><type><name>svn_wc_entry_t</name> *</type><name>entry</name></decl></param>,
                           <param><decl><type><name>apr_uint64_t</name></type> <name>modify_flags</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to modify wcprop PROPNAME
   for PATH, setting it to PROPVAL.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_modify_wcprop</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                            <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>propname</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>propval</name></decl></param>,
                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to move the file SRC_PATH to
   DST_PATH, if it exists. If it doesn't and REMOVE_DST_IF_NO_SRC is TRUE
   the file at DST_PATH will be deleted if any.

   Sets *DST_MODIFIED, if either the copy or the remove have been carried out.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_move</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                   <param><decl><type><name>svn_boolean_t</name> *</type><name>dst_modified</name></decl></param>,
                   <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>src_path</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dst_path</name></decl></param>,
                   <param><decl><type><name>svn_boolean_t</name></type> <name>remove_dst_if_no_src</name></decl></param>,
                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>



<comment type="block">/* Extend **LOG_ACCUM with log instructions to set permissions of PATH
   to 'executable' if it has the 'executable' property set.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_maybe_set_executable</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                                   <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                   <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to set permissions of PATH
   to 'readonly' if it has the 'needs-lock' property set and there is
   no lock for the file in the working copy.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_maybe_set_readonly</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                                 <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                 <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to set the timestamp of PATH
   in the entry field with name TIME_PROP.

   Use SVN_WC__ENTRY_ATTR_* values for TIME_PROP.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_set_entry_timestamp_from_wc</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                                          <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                          <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>time_prop</name></decl></param>,
                                          <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to set the file size of PATH
   in the entries' WORKING_SIZE field.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_set_entry_working_size_from_wc</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                                             <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Extend **LOG_ACCUM with log instructions to set permissions of PATH
   to 'readonly'.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_set_readonly</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                           <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                           <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                           <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to set the timestamp of PATH.
*/</comment>

<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_set_timestamp</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                            <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                            <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>timestr</name></decl></param>,
                            <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with log instructions to remove the file
   BASE_NAME, if it exists.
*/</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_remove</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                     <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                     <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>,
                     <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Extend **LOG_ACCUM with instructions to cause the working copy of ADM_ACCESS
   to be upgraded to FORMAT. */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__loggy_upgrade_format</name><parameter_list>(<param><decl><type><name>svn_stringbuf_t</name> **</type><name>log_accum</name></decl></param>,
                             <param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                             <param><decl><type><name>int</name></type> <name>format</name></decl></param>,
                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Create a log file with LOG_NUMBER. Write LOG_CONTENT to it and close-
   and-sync afterwards. ADM_ACCESS must point to a locked working copy.


   Helper to eliminate code duplication. */</comment>
<function_decl><type><name>svn_error_t</name> *</type>
<name>svn_wc__write_log</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                  <param><decl><type><name>int</name></type> <name>log_number</name></decl></param>, <param><decl><type><name>svn_stringbuf_t</name> *</type><name>log_content</name></decl></param>,
                  <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<comment type="block">/* Process the instructions in the log file for ADM_ACCESS.
   DIFF3_CMD is the external differ used by the 'SVN_WC__LOG_MERGE'
   log entry.  It is always safe to pass null for this.

   If the log fails on its first command, return the error
   SVN_ERR_WC_BAD_ADM_LOG_START.  If it fails on some subsequent
   command, return SVN_ERR_WC_BAD_ADM_LOG. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__run_log</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                             <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
                             <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Similar to svn_wc__run_log except that it is assumed that the log
   file has been run before and so some of the log commands may
   already have been processed. */</comment>
<function_decl><type><name>svn_error_t</name> *</type><name>svn_wc__rerun_log</name><parameter_list>(<param><decl><type><name>svn_wc_adm_access_t</name> *</type><name>adm_access</name></decl></param>,
                               <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>diff3_cmd</name></decl></param>,
                               <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __cplusplus */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SVN_LIBSVN_WC_LOG_H */</comment>
</unit>
