<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/subversion-1.5.1/source/tools/diff/diff.c"><comment type="block">/* diff-test.c -- test driver for text diffs
 *
 * ====================================================================
 * Copyright (c) 2003-2004 CollabNet.  All rights reserved.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at http://subversion.tigris.org/license-1.html.
 * If newer versions of this license are posted there, you may use a
 * newer version instead, at your option.
 *
 * This software consists of voluntary contributions made by many
 * individuals.  For exact contribution history, see the revision
 * history and logs, available at http://subversion.tigris.org/.
 * ====================================================================
 */</comment>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_general.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;apr_file_io.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_diff.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"svn_io.h"</cpp:file></cpp:include>


<function><type><specifier>static</specifier> <name>svn_error_t</name> *</type>
<name>do_diff</name><parameter_list>(<param><decl><type><name>svn_stream_t</name> *</type><name>ostream</name></decl></param>,
        <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>original</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>modified</name></decl></param>,
        <param><decl><type><name>svn_boolean_t</name> *</type><name>has_changes</name></decl></param>,
        <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>svn_diff_t</name> *</type><name>diff</name></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_diff_file_diff</name><argument_list>(<argument><expr>&amp;<name>diff</name></expr></argument>, <argument><expr><name>original</name></expr></argument>, <argument><expr><name>modified</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr>*<name>has_changes</name> = <call><name>svn_diff_contains_diffs</name><argument_list>(<argument><expr><name>diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>SVN_ERR</name><argument_list>(<argument><expr><call><name>svn_diff_file_output_unified</name><argument_list>(<argument><expr><name>ostream</name></expr></argument>, <argument><expr><name>diff</name></expr></argument>,
                                       <argument><expr><name>original</name></expr></argument>, <argument><expr><name>modified</name></expr></argument>,
                                       <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>NULL</name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<param><decl><type><name>int</name></type> <name>argc</name></decl></param>, <param><decl><type><name>char</name> *</type><name><name>argv</name><index>[]</index></name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>svn_stream_t</name> *</type><name>ostream</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>rc</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>svn_error_t</name> *</type><name>svn_err</name></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>apr_initialize</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pool</name> = <call><name>svn_pool_create</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>svn_err</name> = <call><name>svn_stream_for_stdout</name><argument_list>(<argument><expr>&amp;<name>ostream</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr><name>svn_err</name></expr>)</condition><then>
    <block>{
      <expr_stmt><expr><call><name>svn_handle_error2</name><argument_list>(<argument><expr><name>svn_err</name></expr></argument>, <argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr>"diff-test: "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>rc</name> = 2</expr>;</expr_stmt>
    }</block></then>
  <else>else <if>if <condition>(<expr><name>argc</name> == 3</expr>)</condition><then>
    <block>{
      <decl_stmt><decl><type><name>svn_boolean_t</name></type> <name>has_changes</name></decl>;</decl_stmt>

      <expr_stmt><expr><name>svn_err</name> = <call><name>do_diff</name><argument_list>(<argument><expr><name>ostream</name></expr></argument>, <argument><expr><name><name>argv</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr><name><name>argv</name><index>[<expr>2</expr>]</index></name></expr></argument>, <argument><expr>&amp;<name>has_changes</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if>if <condition>(<expr><name>svn_err</name> == <name>NULL</name></expr>)</condition><then>
        <block>{
          <expr_stmt><expr><name>rc</name> = <name>has_changes</name> ? 1 : 0</expr>;</expr_stmt>
        }</block></then>
      <else>else
        <block>{
          <expr_stmt><expr><call><name>svn_handle_error2</name><argument_list>(<argument><expr><name>svn_err</name></expr></argument>, <argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr>"diff-test: "</expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>rc</name> = 2</expr>;</expr_stmt>
        }</block></else></if>
    }</block></then>
  <else>else
    <block>{
      <expr_stmt><expr><call><name>svn_error_clear</name><argument_list>(<argument><expr><call><name>svn_stream_printf</name><argument_list>(<argument><expr><name>ostream</name></expr></argument>, <argument><expr><name>pool</name></expr></argument>,
                                        <argument><expr>"Usage: %s &lt;file1&gt; &lt;file2&gt;\n"</expr></argument>,
                                        <argument><expr><name><name>argv</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>rc</name> = 2</expr>;</expr_stmt>
    }</block></else></if></else></if>

  <expr_stmt><expr><call><name>apr_terminate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>rc</name></expr>;</return>
}</block></function>
</unit>
