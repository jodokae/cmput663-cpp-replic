<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/server/mpm/netware/mpm_default.h"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block">/**
 * @file  netware/mpm_default.h
 * @brief Defaults for Netware MPM
 *
 * @defgroup APACHE_MPM_NETWARE Netware MPM
 * @ingroup APACHE_INTERNAL
 * @{
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>APACHE_MPM_DEFAULT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APACHE_MPM_DEFAULT_H</name></cpp:macro></cpp:define>

<comment type="block">/* Limit on the threads per process.  Clients will be locked out if more than
 * this  * HARD_SERVER_LIMIT are needed.
 *
 * We keep this for one reason it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>HARD_THREAD_LIMIT</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HARD_THREAD_LIMIT</name></cpp:macro> <cpp:value>2048</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEFAULT_THREADS_PER_CHILD</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_THREADS_PER_CHILD</name></cpp:macro> <cpp:value>50</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Number of threads to spawn off by default --- also, if fewer than
 * this free when the caretaker checks, it will spawn more.
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEFAULT_START_THREADS</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_START_THREADS</name></cpp:macro> <cpp:value>DEFAULT_THREADS_PER_CHILD</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Maximum number of *free* threads --- more than this, and
 * they will die off.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEFAULT_MAX_FREE_THREADS</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_MAX_FREE_THREADS</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Minimum --- fewer than this, and more will be created */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEFAULT_MIN_FREE_THREADS</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_MIN_FREE_THREADS</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/*
 * Interval, in microseconds, between scoreboard maintenance.
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SCOREBOARD_MAINTENANCE_INTERVAL</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCOREBOARD_MAINTENANCE_INTERVAL</name></cpp:macro> <cpp:value>1000000</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Default stack size allocated for each worker thread.
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEFAULT_THREAD_STACKSIZE</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_THREAD_STACKSIZE</name></cpp:macro> <cpp:value>65536</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* AP_MPM_DEFAULT_H */</comment>
<comment type="block">/** @} */</comment>
</unit>
