<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/server/mpm/winnt/mpm_winnt.h"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block">/**
 * @file  mpm_winnt.h
 * @brief WinNT MPM specific
 *
 * @addtogroup APACHE_MPM_WINNT
 * @{
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>APACHE_MPM_WINNT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APACHE_MPM_WINNT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_proc_mutex.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_listen.h"</cpp:file></cpp:include>

<comment type="block">/* From service.c: */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SERVICE_APACHE_RESTART</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>AP_DEFAULT_SERVICE_NAME</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_DEFAULT_SERVICE_NAME</name></cpp:macro> <cpp:value>"Apache2.4"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SERVICECONFIG</name></cpp:macro> <cpp:value>"System\\CurrentControlSet\\Services\\%s"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SERVICEPARAMS</name></cpp:macro> <cpp:value>"System\\CurrentControlSet\\Services\\%s\\Parameters"</cpp:value></cpp:define>

<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_set_name</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>display_name</name></decl></param>,
                                                 <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>set_name</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>mpm_merge_service_args</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>apr_array_header_t</name> *</type><name>args</name></decl></param>,
                                   <param><decl><type><name>int</name></type> <name>fixed_args</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_to_start</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>display_name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_started</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_install</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>ptemp</name></decl></param>, <param><decl><type><name>int</name></type> <name>argc</name></decl></param>,
                                <param><decl><type><name>char</name> <specifier>const</specifier>* <specifier>const</specifier>*</type> <name>argv</name></decl></param>, <param><decl><type><name>int</name></type> <name>reconfig</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_uninstall</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>apr_status_t</name></type> <name>mpm_service_start</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>ptemp</name></decl></param>, <param><decl><type><name>int</name></type> <name>argc</name></decl></param>,
                              <param><decl><type><name>char</name> <specifier>const</specifier>* <specifier>const</specifier>*</type> <name>argv</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mpm_signal_service</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>ptemp</name></decl></param>, <param><decl><type><name>int</name></type> <name>signal</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mpm_service_stopping</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mpm_start_console_handler</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>mpm_start_child_console_handler</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* From nt_eventlog.c: */</comment>

<function_decl><type><name>void</name></type> <name>mpm_nt_eventlog_stderr_open</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>display_name</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>mpm_nt_eventlog_stderr_flush</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* From mpm_winnt.c: */</comment>

<decl_stmt><decl><type><specifier>extern</specifier> <name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>mpm_winnt_module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>ap_threads_per_child</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>DWORD</name></type> <name>my_pid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>apr_proc_mutex_t</name> *</type><name>start_mutex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>HANDLE</name></type> <name>exit_event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>winnt_mpm_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>OSVERSIONINFO</name></type> <name>osver</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>DWORD</name></type> <name>stack_res_flag</name></decl>;</decl_stmt>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>clean_child_exit</name><parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{
    <decl><name>SIGNAL_PARENT_SHUTDOWN</name></decl>,
    <decl><name>SIGNAL_PARENT_RESTART</name></decl>,
    <decl><name>SIGNAL_PARENT_RESTART_GRACEFUL</name></decl>
}</block></enum></type> <name>ap_signal_parent_e</name>;</typedef>
<macro><name>AP_DECLARE</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>ap_signal_parent</name><argument_list>(<argument>ap_signal_parent_e type</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<function_decl><type><name>void</name></type> <name>hold_console_open_on_error</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* From child.c: */</comment>
<function_decl><type><name>void</name></type> <name>child_main</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pconf</name></decl></param>, <param><decl><type><name>DWORD</name></type> <name>parent_pid</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* APACHE_MPM_WINNT_H */</comment>
<comment type="block">/** @} */</comment>
</unit>
