<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/ssl/ssl_engine_mutex.c"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block">/*                      _             _
 *  _ __ ___   ___   __| |    ___ ___| |  mod_ssl
 * | '_ ` _ \ / _ \ / _` |   / __/ __| |  Apache Interface to OpenSSL
 * | | | | | | (_) | (_| |   \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 *                      |_____|
 *  ssl_engine_mutex.c
 *  Semaphore for Mutual Exclusion
 */</comment>
                             <comment type="block">/* ``Real programmers confuse
                                  Christmas and Halloween
                                  because DEC 25 = OCT 31.''
                                             -- Unknown     */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ssl_private.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>ssl_mutex_init</name><parameter_list>(<param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>SSLModConfigRec</name> *</type><name>mc</name> <init>= <expr><call><name>myModConfig</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_status_t</name></type> <name>rv</name></decl>;</decl_stmt>

    <comment type="block">/* A mutex is only needed if a session cache is configured, and
     * the provider used is not internally multi-process/thread
     * safe. */</comment>
    <if>if <condition>(<expr>!<name><name>mc</name>-&gt;<name>sesscache</name></name>
        || (<name><name>mc</name>-&gt;<name>sesscache</name>-&gt;<name>flags</name></name> &amp; <name>AP_SOCACHE_FLAG_NOTMPSAFE</name>) == 0</expr>)</condition><then> <block>{
        <return>return <expr><name>TRUE</name></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr><name><name>mc</name>-&gt;<name>pMutex</name></name></expr>)</condition><then> <block>{
        <return>return <expr><name>TRUE</name></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr>(<name>rv</name> = <call><name>ap_global_mutex_create</name><argument_list>(<argument><expr>&amp;<name><name>mc</name>-&gt;<name>pMutex</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>SSL_CACHE_MUTEX_TYPE</name></expr></argument>,
                                     <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><name><name>s</name>-&gt;<name>process</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call>)
            != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
        <return>return <expr><name>FALSE</name></expr>;</return>
    }</block></then></if>

    <return>return <expr><name>TRUE</name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>ssl_mutex_reinit</name><parameter_list>(<param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>SSLModConfigRec</name> *</type><name>mc</name> <init>= <expr><call><name>myModConfig</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_status_t</name></type> <name>rv</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>lockfile</name></decl>;</decl_stmt>

    <if>if <condition>(<expr><name><name>mc</name>-&gt;<name>pMutex</name></name> == <name>NULL</name> || !<name><name>mc</name>-&gt;<name>sesscache</name></name>
        || (<name><name>mc</name>-&gt;<name>sesscache</name>-&gt;<name>flags</name></name> &amp; <name>AP_SOCACHE_FLAG_NOTMPSAFE</name>) == 0</expr>)</condition><then> <block>{
        <return>return <expr><name>TRUE</name></expr>;</return>
    }</block></then></if>

    <expr_stmt><expr><name>lockfile</name> = <call><name>apr_global_mutex_lockfile</name><argument_list>(<argument><expr><name><name>mc</name>-&gt;<name>pMutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if>if <condition>(<expr>(<name>rv</name> = <call><name>apr_global_mutex_child_init</name><argument_list>(<argument><expr>&amp;<name><name>mc</name>-&gt;<name>pMutex</name></name></expr></argument>,
                                          <argument><expr><name>lockfile</name></expr></argument>,
                                          <argument><expr><name>p</name></expr></argument>)</argument_list></call>) != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
        <if>if <condition>(<expr><name>lockfile</name></expr>)</condition><then>
            <expr_stmt><expr><call><name>ap_log_error</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>rv</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>02024</expr></argument>)</argument_list></call>
                         "Cannot reinit %s mutex with file `%s'"</expr></argument>,
                         <argument><expr><name>SSL_CACHE_MUTEX_TYPE</name></expr></argument>, <argument><expr><name>lockfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
        <else>else
            <expr_stmt><expr><call><name>ap_log_error</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_WARNING</name></expr></argument>, <argument><expr><name>rv</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>02025</expr></argument>)</argument_list></call>
                         "Cannot reinit %s mutex"</expr></argument>, <argument><expr><name>SSL_CACHE_MUTEX_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
        <return>return <expr><name>FALSE</name></expr>;</return>
    }</block></then></if>
    <return>return <expr><name>TRUE</name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>ssl_mutex_on</name><parameter_list>(<param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>SSLModConfigRec</name> *</type><name>mc</name> <init>= <expr><call><name>myModConfig</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_status_t</name></type> <name>rv</name></decl>;</decl_stmt>

    <if>if <condition>(<expr>(<name>rv</name> = <call><name>apr_global_mutex_lock</name><argument_list>(<argument><expr><name><name>mc</name>-&gt;<name>pMutex</name></name></expr></argument>)</argument_list></call>) != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name>ap_log_error</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_WARNING</name></expr></argument>, <argument><expr><name>rv</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>02026</expr></argument>)</argument_list></call>
                     "Failed to acquire SSL session cache lock"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>FALSE</name></expr>;</return>
    }</block></then></if>
    <return>return <expr><name>TRUE</name></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>ssl_mutex_off</name><parameter_list>(<param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>SSLModConfigRec</name> *</type><name>mc</name> <init>= <expr><call><name>myModConfig</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_status_t</name></type> <name>rv</name></decl>;</decl_stmt>

    <if>if <condition>(<expr>(<name>rv</name> = <call><name>apr_global_mutex_unlock</name><argument_list>(<argument><expr><name><name>mc</name>-&gt;<name>pMutex</name></name></expr></argument>)</argument_list></call>) != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name>ap_log_error</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_WARNING</name></expr></argument>, <argument><expr><name>rv</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>02027</expr></argument>)</argument_list></call>
                     "Failed to release SSL session cache lock"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>FALSE</name></expr>;</return>
    }</block></then></if>
    <return>return <expr><name>TRUE</name></expr>;</return>
}</block></function>

</unit>
