<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/http2/h2_filter.h"><comment type="block">/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>__mod_h2__h2_filter__</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_filter__</name></cpp:macro></cpp:define>

<struct_decl>struct <name>h2_bucket_beam</name>;</struct_decl>
<struct_decl>struct <name>h2_headers</name>;</struct_decl>
<struct_decl>struct <name>h2_stream</name>;</struct_decl>
<struct_decl>struct <name>h2_session</name>;</struct_decl>

<typedef>typedef <type><struct>struct <name>h2_filter_cin</name> <block>{
    <decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_socket_t</name> *</type><name>socket</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_interval_time_t</name></type> <name>timeout</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl>;</decl_stmt>
    <decl_stmt><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_bucket</name> *</type><name>cur</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_filter_cin</name>;</typedef>

<function_decl><type><name>h2_filter_cin</name> *</type><name>h2_filter_cin_create</name><parameter_list>(<param><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>h2_filter_cin_timeout_set</name><parameter_list>(<param><decl><type><name>h2_filter_cin</name> *</type><name>cin</name></decl></param>, <param><decl><type><name>apr_interval_time_t</name></type> <name>timeout</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>apr_status_t</name></type> <name>h2_filter_core_input</name><parameter_list>(<param><decl><type><name>ap_filter_t</name>*</type> <name>filter</name></decl></param>,
                                  <param><decl><type><name>apr_bucket_brigade</name>*</type> <name>brigade</name></decl></param>,
                                  <param><decl><type><name>ap_input_mode_t</name></type> <name>mode</name></decl></param>,
                                  <param><decl><type><name>apr_read_type_e</name></type> <name>block</name></decl></param>,
                                  <param><decl><type><name>apr_off_t</name></type> <name>readbytes</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/******* observer bucket ******************************************************/</comment>

<typedef>typedef <type><enum>enum <block>{
    <decl><name>H2_BUCKET_EV_BEFORE_DESTROY</name></decl>,
    <decl><name>H2_BUCKET_EV_BEFORE_MASTER_SEND</name></decl>
}</block></enum></type> <name>h2_bucket_event</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>apr_bucket_type_t</name></type> <name>h2_bucket_type_observer</name></decl>;</decl_stmt>

<typedef>typedef <function_decl><type><name>apr_status_t</name></type> <name>h2_bucket_event_cb</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>h2_bucket_event</name></type> <name>event</name></decl></param>, <param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>)</parameter_list>;</function_decl></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_BUCKET_IS_OBSERVER</name><parameter_list>(<param><type><name>e</name></type></param>)</parameter_list></cpp:macro>     <cpp:value>(e-&gt;type == &amp;h2_bucket_type_observer)</cpp:value></cpp:define>

<function_decl><type><name>apr_bucket</name> *</type> <name>h2_bucket_observer_make</name><parameter_list>(<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>, <param><decl><type><name>h2_bucket_event_cb</name> *</type><name>cb</name></decl></param>, 
                                     <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl> 

<function_decl><type><name>apr_bucket</name> *</type> <name>h2_bucket_observer_create</name><parameter_list>(<param><decl><type><name>apr_bucket_alloc_t</name> *</type><name>list</name></decl></param>, 
                                       <param><decl><type><name>h2_bucket_event_cb</name> *</type><name>cb</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl> 
                                       
<function_decl><type><name>apr_status_t</name></type> <name>h2_bucket_observer_fire</name><parameter_list>(<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>, <param><decl><type><name>h2_bucket_event</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>apr_bucket</name> *</type><name>h2_bucket_observer_beam</name><parameter_list>(<param><decl><type>struct <name>h2_bucket_beam</name> *</type><name>beam</name></decl></param>,
                                    <param><decl><type><name>apr_bucket_brigade</name> *</type><name>dest</name></decl></param>,
                                    <param><decl><type><specifier>const</specifier> <name>apr_bucket</name> *</type><name>src</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/******* /.well-known/h2/state handler ****************************************/</comment>

<function_decl><type><name>int</name></type> <name>h2_filter_h2_status_handler</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* __mod_h2__h2_filter__ */</comment>
</unit>
