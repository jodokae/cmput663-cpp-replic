<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/proxy/proxy_util.h"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PROXY_UTIL_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROXY_UTIL_H_</name></cpp:macro></cpp:define>

<comment type="block">/**
 * @file  proxy_util.h
 * @brief Internal interfaces private to mod_proxy.
 *
 * @defgroup MOD_PROXY_PRIVATE Private
 * @ingroup MOD_PROXY
 * @{
 */</comment>

<macro><name>PROXY_DECLARE</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>ap_proxy_is_ipaddr</name><argument_list>(<argument>struct <expr><name>dirconn_entry</name> *<name>This</name></expr></argument>, <argument><expr><name>apr_pool_t</name> *<name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PROXY_DECLARE</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>ap_proxy_is_domainname</name><argument_list>(<argument>struct <expr><name>dirconn_entry</name> *<name>This</name></expr></argument>, <argument><expr><name>apr_pool_t</name> *<name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PROXY_DECLARE</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>ap_proxy_is_hostname</name><argument_list>(<argument>struct <expr><name>dirconn_entry</name> *<name>This</name></expr></argument>, <argument><expr><name>apr_pool_t</name> *<name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>PROXY_DECLARE</name><argument_list>(<argument>int</argument>)</argument_list></macro> <expr_stmt><expr><call><name>ap_proxy_is_word</name><argument_list>(<argument>struct <expr><name>dirconn_entry</name> *<name>This</name></expr></argument>, <argument><expr><name>apr_pool_t</name> *<name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>PROXY_DECLARE_DATA</name> <specifier>extern</specifier> <name>int</name></type> <name>proxy_lb_workers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PROXY_DECLARE_DATA</name> <specifier>extern</specifier> <specifier>const</specifier> <name>apr_strmatch_pattern</name> *</type><name>ap_proxy_strmatch_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PROXY_DECLARE_DATA</name> <specifier>extern</specifier> <specifier>const</specifier> <name>apr_strmatch_pattern</name> *</type><name>ap_proxy_strmatch_domain</name></decl>;</decl_stmt>

<comment type="block">/**
 * Register optional functions declared within proxy_util.c.
 */</comment>
<function_decl><type><name>void</name></type> <name>proxy_util_register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/** @} */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* PROXY_UTIL_H_ */</comment>
</unit>
