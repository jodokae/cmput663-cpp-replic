<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/proxy/ajp_header.h"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block">/**
 * @file ajp_header.h
 * @brief AJP defines
 *
 * @addtogroup AJP_defines
 * @{
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>AJP_HEADER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_HEADER_H</name></cpp:macro></cpp:define>

<comment type="block">/*
 * Conditional request attributes
 *
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_CONTEXT</name></cpp:macro>            <cpp:value>(unsigned char)1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SERVLET_PATH</name></cpp:macro>       <cpp:value>(unsigned char)2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_REMOTE_USER</name></cpp:macro>        <cpp:value>(unsigned char)3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_AUTH_TYPE</name></cpp:macro>          <cpp:value>(unsigned char)4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_QUERY_STRING</name></cpp:macro>       <cpp:value>(unsigned char)5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_JVM_ROUTE</name></cpp:macro>          <cpp:value>(unsigned char)6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SSL_CERT</name></cpp:macro>           <cpp:value>(unsigned char)7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SSL_CIPHER</name></cpp:macro>         <cpp:value>(unsigned char)8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SSL_SESSION</name></cpp:macro>        <cpp:value>(unsigned char)9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_REQ_ATTRIBUTE</name></cpp:macro>      <cpp:value>(unsigned char)10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SSL_KEY_SIZE</name></cpp:macro>       <cpp:value>(unsigned char)11</cpp:value></cpp:define>       <comment type="block">/* only in if JkOptions +ForwardKeySize */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SECRET</name></cpp:macro>             <cpp:value>(unsigned char)12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_STORED_METHOD</name></cpp:macro>      <cpp:value>(unsigned char)13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_ARE_DONE</name></cpp:macro>           <cpp:value>(unsigned char)0xFF</cpp:value></cpp:define>

<comment type="block">/*
 * AJP private request attributes
 *
 * The following request attribute is recognized by Tomcat
 * to contain the SSL protocol name
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_SSL_PROTOCOL</name></cpp:macro>        <cpp:value>("AJP_SSL_PROTOCOL")</cpp:value></cpp:define>
<comment type="block">/*
 * The following request attribute is recognized by Tomcat
 * to contain the forwarded remote port.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_REQ_REMOTE_PORT</name></cpp:macro>    <cpp:value>("AJP_REMOTE_PORT")</cpp:value></cpp:define>
<comment type="block">/*
 * The following request attribute is recognized by Tomcat
 * to contain the forwarded local ip address.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_A_REQ_LOCAL_ADDR</name></cpp:macro>     <cpp:value>("AJP_LOCAL_ADDR")</cpp:value></cpp:define>

<comment type="block">/*
 * Request methods, coded as numbers instead of strings.
 * The list of methods was taken from Section 5.1.1 of RFC 2616,
 * RFC 2518, the ACL IETF draft, and the DeltaV IESG Proposed Standard.
 *          Method        = "OPTIONS"
 *                        | "GET"
 *                        | "HEAD"
 *                        | "POST"
 *                        | "PUT"
 *                        | "DELETE"
 *                        | "TRACE"
 *                        | "PROPFIND"
 *                        | "PROPPATCH"
 *                        | "MKCOL"
 *                        | "COPY"
 *                        | "MOVE"
 *                        | "LOCK"
 *                        | "UNLOCK"
 *                        | "ACL"
 *                        | "REPORT"
 *                        | "VERSION-CONTROL"
 *                        | "CHECKIN"
 *                        | "CHECKOUT"
 *                        | "UNCHECKOUT"
 *                        | "SEARCH"
 *                        | "MKWORKSPACE"
 *                        | "UPDATE"
 *                        | "LABEL"
 *                        | "MERGE"
 *                        | "BASELINE-CONTROL"
 *                        | "MKACTIVITY"
 *
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_OPTIONS</name></cpp:macro>            <cpp:value>(unsigned char)1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_GET</name></cpp:macro>                <cpp:value>(unsigned char)2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_HEAD</name></cpp:macro>               <cpp:value>(unsigned char)3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_POST</name></cpp:macro>               <cpp:value>(unsigned char)4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_PUT</name></cpp:macro>                <cpp:value>(unsigned char)5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_DELETE</name></cpp:macro>             <cpp:value>(unsigned char)6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_TRACE</name></cpp:macro>              <cpp:value>(unsigned char)7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_PROPFIND</name></cpp:macro>           <cpp:value>(unsigned char)8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_PROPPATCH</name></cpp:macro>          <cpp:value>(unsigned char)9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_MKCOL</name></cpp:macro>              <cpp:value>(unsigned char)10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_COPY</name></cpp:macro>               <cpp:value>(unsigned char)11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_MOVE</name></cpp:macro>               <cpp:value>(unsigned char)12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_LOCK</name></cpp:macro>               <cpp:value>(unsigned char)13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_UNLOCK</name></cpp:macro>             <cpp:value>(unsigned char)14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_ACL</name></cpp:macro>                <cpp:value>(unsigned char)15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_REPORT</name></cpp:macro>             <cpp:value>(unsigned char)16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_VERSION_CONTROL</name></cpp:macro>    <cpp:value>(unsigned char)17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_CHECKIN</name></cpp:macro>            <cpp:value>(unsigned char)18</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_CHECKOUT</name></cpp:macro>           <cpp:value>(unsigned char)19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_UNCHECKOUT</name></cpp:macro>         <cpp:value>(unsigned char)20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_SEARCH</name></cpp:macro>             <cpp:value>(unsigned char)21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_MKWORKSPACE</name></cpp:macro>        <cpp:value>(unsigned char)22</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_UPDATE</name></cpp:macro>             <cpp:value>(unsigned char)23</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_LABEL</name></cpp:macro>              <cpp:value>(unsigned char)24</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_MERGE</name></cpp:macro>              <cpp:value>(unsigned char)25</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_BASELINE_CONTROL</name></cpp:macro>   <cpp:value>(unsigned char)26</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_MKACTIVITY</name></cpp:macro>         <cpp:value>(unsigned char)27</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_M_JK_STORED</name></cpp:macro>          <cpp:value>(unsigned char)0xFF</cpp:value></cpp:define>


<comment type="block">/*
 * Frequent request headers, these headers are coded as numbers
 * instead of strings.
 *
 * Accept
 * Accept-Charset
 * Accept-Encoding
 * Accept-Language
 * Authorization
 * Connection
 * Content-Type
 * Content-Length
 * Cookie
 * Cookie2
 * Host
 * Pragma
 * Referer
 * User-Agent
 *
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_ACCEPT</name></cpp:macro>               <cpp:value>(unsigned short)0xA001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_ACCEPT_CHARSET</name></cpp:macro>       <cpp:value>(unsigned short)0xA002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_ACCEPT_ENCODING</name></cpp:macro>      <cpp:value>(unsigned short)0xA003</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_ACCEPT_LANGUAGE</name></cpp:macro>      <cpp:value>(unsigned short)0xA004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_AUTHORIZATION</name></cpp:macro>        <cpp:value>(unsigned short)0xA005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_CONNECTION</name></cpp:macro>           <cpp:value>(unsigned short)0xA006</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_CONTENT_TYPE</name></cpp:macro>         <cpp:value>(unsigned short)0xA007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_CONTENT_LENGTH</name></cpp:macro>       <cpp:value>(unsigned short)0xA008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_COOKIE</name></cpp:macro>               <cpp:value>(unsigned short)0xA009</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_COOKIE2</name></cpp:macro>              <cpp:value>(unsigned short)0xA00A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_HOST</name></cpp:macro>                 <cpp:value>(unsigned short)0xA00B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_PRAGMA</name></cpp:macro>               <cpp:value>(unsigned short)0xA00C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_REFERER</name></cpp:macro>              <cpp:value>(unsigned short)0xA00D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_USER_AGENT</name></cpp:macro>           <cpp:value>(unsigned short)0xA00E</cpp:value></cpp:define>

<comment type="block">/*
 * Frequent response headers, these headers are coded as numbers
 * instead of strings.
 *
 * Content-Type
 * Content-Language
 * Content-Length
 * Date
 * Last-Modified
 * Location
 * Set-Cookie
 * Servlet-Engine
 * Status
 * WWW-Authenticate
 *
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_CONTENT_TYPE</name></cpp:macro>        <cpp:value>(unsigned short)0xA001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_CONTENT_LANGUAGE</name></cpp:macro>    <cpp:value>(unsigned short)0xA002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_CONTENT_LENGTH</name></cpp:macro>      <cpp:value>(unsigned short)0xA003</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_DATE</name></cpp:macro>                <cpp:value>(unsigned short)0xA004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_LAST_MODIFIED</name></cpp:macro>       <cpp:value>(unsigned short)0xA005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_LOCATION</name></cpp:macro>            <cpp:value>(unsigned short)0xA006</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_SET_COOKIE</name></cpp:macro>          <cpp:value>(unsigned short)0xA007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_SET_COOKIE2</name></cpp:macro>         <cpp:value>(unsigned short)0xA008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_SERVLET_ENGINE</name></cpp:macro>      <cpp:value>(unsigned short)0xA009</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_STATUS</name></cpp:macro>              <cpp:value>(unsigned short)0xA00A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RESP_WWW_AUTHENTICATE</name></cpp:macro>    <cpp:value>(unsigned short)0xA00B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SC_RES_HEADERS_NUM</name></cpp:macro>          <cpp:value>11</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* AJP_HEADER_H */</comment>
<comment type="block">/** @} */</comment>
</unit>
