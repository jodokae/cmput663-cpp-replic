<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/generators/mod_suexec.c"><comment type="block">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"unixd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpm_common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_suexec.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>suexec_module</name></decl>;</decl_stmt>

<comment type="block">/*
 * Create a configuration specific to this module for a server or directory
 * location, and fill it with the default settings.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>mkconfig</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>suexec_config_t</name> *</type><name>cfg</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>suexec_config_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name><name>cfg</name>-&gt;<name>active</name></name> = 0</expr>;</expr_stmt>
    <return>return <expr><name>cfg</name></expr>;</return>
}</block></function>

<comment type="block">/*
 * Respond to a callback to create configuration record for a server or
 * vhost environment.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_mconfig_for_server</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>)</parameter_list>
<block>{
    <return>return <expr><call><name>mkconfig</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="block">/*
 * Respond to a callback to create a config record for a specific directory.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_mconfig_for_directory</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>char</name> *</type><name>dir</name></decl></param>)</parameter_list>
<block>{
    <return>return <expr><call><name>mkconfig</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>set_suexec_ugid</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>mconfig</name></decl></param>,
                                   <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>uid</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>gid</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>suexec_config_t</name> *</type><name>cfg</name> <init>= <expr>(<name>suexec_config_t</name> *) <name>mconfig</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>err</name> <init>= <expr><call><name>ap_check_cmd_context</name><argument_list>(<argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>NOT_IN_DIR_LOC_FILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr><name>err</name> != <name>NULL</name></expr>)</condition><then> <block>{
        <return>return <expr><name>err</name></expr>;</return>
    }</block></then></if>

    <if>if <condition>(<expr>!<name><name>ap_unixd_config</name>.<name>suexec_enabled</name></name></expr>)</condition><then> <block>{
        <return>return <expr><call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>cmd</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"SuexecUserGroup configured, but "
                           "suEXEC is disabled: "</expr></argument>,
                           <argument><expr><name><name>ap_unixd_config</name>.<name>suexec_disabled_reason</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>

    <expr_stmt><expr><name><name>cfg</name>-&gt;<name>ugid</name>.<name>uid</name></name> = <call><name>ap_uname2id</name><argument_list>(<argument><expr><name>uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cfg</name>-&gt;<name>ugid</name>.<name>gid</name></name> = <call><name>ap_gname2id</name><argument_list>(<argument><expr><name>gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cfg</name>-&gt;<name>ugid</name>.<name>userdir</name></name> = 0</expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cfg</name>-&gt;<name>active</name></name> = 1</expr>;</expr_stmt>

    <return>return <expr><name>NULL</name></expr>;</return>
}</block></function>

<function><type><specifier>static</specifier> <name>ap_unix_identity_t</name> *</type><name>get_suexec_id_doer</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>suexec_config_t</name> *</type><name>cfg</name> <init>=
    <expr>(<name>suexec_config_t</name> *) <call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>, <argument><expr>&amp;<name>suexec_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><name><name>cfg</name>-&gt;<name>active</name></name> ? &amp;<name><name>cfg</name>-&gt;<name>ugid</name></name> : <name>NULL</name></expr>;</return>
}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUEXEC_POST_CONFIG_USERDATA</name></cpp:macro> <cpp:value>"suexec_post_config_userdata"</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>int</name></type> <name>suexec_post_config</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>plog</name></decl></param>,
                              <param><decl><type><name>apr_pool_t</name> *</type><name>ptemp</name></decl></param>, <param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>void</name> *</type><name>reported</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>apr_pool_userdata_get</name><argument_list>(<argument><expr>&amp;<name>reported</name></expr></argument>, <argument><expr><name>SUEXEC_POST_CONFIG_USERDATA</name></expr></argument>,
                          <argument><expr><name><name>s</name>-&gt;<name>process</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if>if <condition>(<expr>(<name>reported</name> == <name>NULL</name>) &amp;&amp; <name><name>ap_unixd_config</name>.<name>suexec_enabled</name></name></expr>)</condition><then> <block>{
        <expr_stmt><expr><call><name>ap_log_error</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_NOTICE</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01232</expr></argument>)</argument_list></call>
                     "suEXEC mechanism enabled (wrapper: %s)"</expr></argument>, <argument><expr><name>SUEXEC_BIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>apr_pool_userdata_set</name><argument_list>(<argument><expr>(<name>void</name> *)1</expr></argument>, <argument><expr><name>SUEXEC_POST_CONFIG_USERDATA</name></expr></argument>,
                              <argument><expr><name>apr_pool_cleanup_null</name></expr></argument>, <argument><expr><name><name>s</name>-&gt;<name>process</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <return>return <expr><name>OK</name></expr>;</return>
}</block></function>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SUEXEC_POST_CONFIG_USERDATA</name></cpp:undef>

<comment type="block">/*
 * Define the directives specific to this module.  This structure is referenced
 * later by the 'module' structure.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>suexec_cmds</name><index>[]</index></name> <init>=
<expr><block>{
    <comment type="block">/* XXX - Another important reason not to allow this in .htaccess is that
     * the ap_[ug]name2id() is not thread-safe */</comment>
    <expr><call><name>AP_INIT_TAKE2</name><argument_list>(<argument><expr>"SuexecUserGroup"</expr></argument>, <argument><expr><name>set_suexec_ugid</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>RSRC_CONF</name></expr></argument>,
      <argument><expr>"User and group for spawned processes"</expr></argument>)</argument_list></call></expr>,
    <expr><block>{ <expr><name>NULL</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>suexec_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list>
<block>{
    <expr_stmt><expr><call><name>ap_hook_get_suexec_identity</name><argument_list>(<argument><expr><name>get_suexec_id_doer</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>APR_HOOK_MIDDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ap_hook_post_config</name><argument_list>(<argument><expr><name>suexec_post_config</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>APR_HOOK_MIDDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>suexec</name></expr></argument>)</argument_list></call> =
<block>{
    <expr><name>STANDARD20_MODULE_STUFF</name></expr>,
    <expr><name>create_mconfig_for_directory</name></expr>,   <comment type="block">/* create per-dir config */</comment>
    <expr><name>NULL</name></expr>,                       <comment type="block">/* merge per-dir config */</comment>
    <expr><name>create_mconfig_for_server</name></expr>,  <comment type="block">/* server config */</comment>
    <expr><name>NULL</name></expr>,                       <comment type="block">/* merge server config */</comment>
    <expr><name>suexec_cmds</name></expr>,                <comment type="block">/* command table */</comment>
    <expr><name>suexec_hooks</name></expr>                <comment type="block">/* register hooks */</comment>
}</block></expr>;</expr_stmt>
</unit>
