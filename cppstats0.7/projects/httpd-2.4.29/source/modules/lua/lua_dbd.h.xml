<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/modules/lua/lua_dbd.h"><comment type="block">/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_LUA_DBD_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LUA_DBD_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_lua.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_dbd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_dbd.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUA_DBTYPE_APR_DBD</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUA_DBTYPE_MOD_DBD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct
<block>{
    <decl_stmt><decl><type><name>apr_dbd_t</name>               *</type><name>handle</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>apr_dbd_driver_t</name>  *</type><name>driver</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>                     <name>alive</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_pool_t</name>              *</type><name>pool</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type>                    <name>type</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ap_dbd_t</name> *</type>              <name>dbdhandle</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>server_rec</name>              *</type><name>server</name></decl>;</decl_stmt>
}</block></struct></type> <name>lua_db_handle</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
    <decl_stmt><decl><type><specifier>const</specifier> <name>apr_dbd_driver_t</name>  *</type><name>driver</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>                     <name>rows</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>                     <name>cols</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_dbd_results_t</name>       *</type><name>results</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>apr_pool_t</name>              *</type><name>pool</name></decl>;</decl_stmt>
}</block></struct></type> <name>lua_db_result_set</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
    <decl_stmt><decl><type><name>apr_dbd_prepared_t</name>      *</type><name>statement</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>                     <name>variables</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>lua_db_handle</name>           *</type><name>db</name></decl>;</decl_stmt>
}</block></struct></type> <name>lua_db_prepared_statement</name>;</typedef>

<function_decl><type><name>int</name></type> <name>lua_db_acquire</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_escape</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_close</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_prepare</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_prepared</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_select</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_query</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_prepared_select</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_prepared_query</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_get_row</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_gc</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>lua_db_active</name><parameter_list>(<param><decl><type><name>lua_State</name>*</type> <name>L</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* !_LUA_DBD_H_ */</comment>
</unit>
