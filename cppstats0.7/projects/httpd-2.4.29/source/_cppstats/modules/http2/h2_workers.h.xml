<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/modules/http2/h2_workers.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_workers__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_workers__</name></cpp:macro></cpp:define>
<struct_decl>struct <name>apr_thread_mutex_t</name>;</struct_decl>
<struct_decl>struct <name>apr_thread_cond_t</name>;</struct_decl>
<struct_decl>struct <name>h2_mplx</name>;</struct_decl>
<struct_decl>struct <name>h2_request</name>;</struct_decl>
<struct_decl>struct <name>h2_task</name>;</struct_decl>
<struct_decl>struct <name>h2_fifo</name>;</struct_decl>
<struct_decl>struct <name>h2_slot</name>;</struct_decl>
<typedef>typedef <type>struct <name>h2_workers</name></type> <name>h2_workers</name>;</typedef>
<struct>struct <name>h2_workers</name> <block>{
<decl_stmt><decl><type><name>server_rec</name> *</type><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>next_worker_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>min_workers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_workers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_idle_secs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>aborted</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dynamic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_threadattr_t</name> *</type><name>thread_attr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nslots</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_slot</name> *</type><name>slots</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>volatile</specifier> <name>apr_uint32_t</name></type> <name>worker_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_slot</name> *</type><name>free</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_slot</name> *</type><name>idle</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_slot</name> *</type><name>zombies</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_fifo</name> *</type><name>mplxs</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>apr_thread_mutex_t</name> *</type><name>lock</name></decl>;</decl_stmt>
}</block>;</struct>
<function_decl><type><name>h2_workers</name> *</type><name>h2_workers_create</name><parameter_list>(<param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><name>int</name></type> <name>min_size</name></decl></param>, <param><decl><type><name>int</name></type> <name>max_size</name></decl></param>, <param><decl><type><name>int</name></type> <name>idle_secs</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_workers_register</name><parameter_list>(<param><decl><type><name>h2_workers</name> *</type><name>workers</name></decl></param>, <param><decl><type>struct <name>h2_mplx</name> *</type><name>m</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_workers_unregister</name><parameter_list>(<param><decl><type><name>h2_workers</name> *</type><name>workers</name></decl></param>, <param><decl><type>struct <name>h2_mplx</name> *</type><name>m</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
