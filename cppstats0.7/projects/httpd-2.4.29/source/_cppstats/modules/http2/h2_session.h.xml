<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/modules/http2/h2_session.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_session__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_session__</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h2_conn_io.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h2.h"</cpp:file></cpp:include>
<struct_decl>struct <name>apr_thread_mutext_t</name>;</struct_decl>
<struct_decl>struct <name>apr_thread_cond_t</name>;</struct_decl>
<struct_decl>struct <name>h2_ctx</name>;</struct_decl>
<struct_decl>struct <name>h2_config</name>;</struct_decl>
<struct_decl>struct <name>h2_filter_cin</name>;</struct_decl>
<struct_decl>struct <name>h2_ihash_t</name>;</struct_decl>
<struct_decl>struct <name>h2_mplx</name>;</struct_decl>
<struct_decl>struct <name>h2_priority</name>;</struct_decl>
<struct_decl>struct <name>h2_push</name>;</struct_decl>
<struct_decl>struct <name>h2_push_diary</name>;</struct_decl>
<struct_decl>struct <name>h2_session</name>;</struct_decl>
<struct_decl>struct <name>h2_stream</name>;</struct_decl>
<struct_decl>struct <name>h2_stream_monitor</name>;</struct_decl>
<struct_decl>struct <name>h2_task</name>;</struct_decl>
<struct_decl>struct <name>h2_workers</name>;</struct_decl>
<struct_decl>struct <name>nghttp2_session</name>;</struct_decl>
<typedef>typedef <type><enum>enum <block>{
<decl><name>H2_SESSION_EV_INIT</name></decl>,
<decl><name>H2_SESSION_EV_LOCAL_GOAWAY</name></decl>,
<decl><name>H2_SESSION_EV_REMOTE_GOAWAY</name></decl>,
<decl><name>H2_SESSION_EV_CONN_ERROR</name></decl>,
<decl><name>H2_SESSION_EV_PROTO_ERROR</name></decl>,
<decl><name>H2_SESSION_EV_CONN_TIMEOUT</name></decl>,
<decl><name>H2_SESSION_EV_NO_IO</name></decl>,
<decl><name>H2_SESSION_EV_DATA_READ</name></decl>,
<decl><name>H2_SESSION_EV_NGH2_DONE</name></decl>,
<decl><name>H2_SESSION_EV_MPM_STOPPING</name></decl>,
<decl><name>H2_SESSION_EV_PRE_CLOSE</name></decl>,
}</block></enum></type> <name>h2_session_event_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>h2_session</name> <block>{
<decl_stmt><decl><type><name>long</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>conn_rec</name> *</type><name>c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>request_rec</name> *</type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>server_rec</name> *</type><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> struct <name>h2_config</name> *</type><name>config</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_mplx</name> *</type><name>mplx</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_workers</name> *</type><name>workers</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_filter_cin</name> *</type><name>cin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_conn_io</name></type> <name>io</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>nghttp2_session</name> *</type><name>ngh2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_session_state</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_session_props</name></type> <name>local</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_session_props</name></type> <name>remote</name></decl>;</decl_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>reprioritize</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>flush</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>have_read</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>have_written</name> : 1</expr>;</expr_stmt>
<decl_stmt><decl><type><name>apr_interval_time_t</name></type> <name>wait_us</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_push_diary</name> *</type><name>push_diary</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_stream_monitor</name> *</type><name>monitor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>open_streams</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>unsent_submits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>unsent_promises</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>responses_submitted</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>streams_reset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pushes_promised</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pushes_submitted</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pushes_reset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>frames_received</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>frames_sent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>max_stream_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>max_stream_mem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>idle_until</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>keep_sync_until</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket_brigade</name> *</type><name>bbtmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>apr_thread_cond_t</name> *</type><name>iowait</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>status</name><index>[<expr>64</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>last_status_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>last_status_msg</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_iqueue</name> *</type><name>in_pending</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_iqueue</name> *</type><name>in_process</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_session</name>;</typedef>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>h2_session_state_str</name><parameter_list>(<param><decl><type><name>h2_session_state</name></type> <name>state</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_session_create</name><parameter_list>(<param><decl><type><name>h2_session</name> **</type><name>psession</name></decl></param>,
<param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>, <param><decl><type>struct <name>h2_ctx</name> *</type><name>ctx</name></decl></param>,
<param><decl><type>struct <name>h2_workers</name> *</type><name>workers</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_session_rcreate</name><parameter_list>(<param><decl><type><name>h2_session</name> **</type><name>psession</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type>struct <name>h2_ctx</name> *</type><name>ctx</name></decl></param>,
<param><decl><type>struct <name>h2_workers</name> *</type><name>workers</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_session_event</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>, <param><decl><type><name>h2_session_event_t</name></type> <name>ev</name></decl></param>,
<param><decl><type><name>int</name></type> <name>err</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_session_process</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>, <param><decl><type><name>int</name></type> <name>async</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_session_pre_close</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>, <param><decl><type><name>int</name></type> <name>async</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_session_abort</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>, <param><decl><type><name>apr_status_t</name></type> <name>reason</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_session_close</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_session_push_enabled</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type>struct <name>h2_stream</name> *</type><name>h2_session_stream_get</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>, <param><decl><type><name>int</name></type> <name>stream_id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type>struct <name>h2_stream</name> *</type><name>h2_session_push</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>,
<param><decl><type>struct <name>h2_stream</name> *</type><name>is</name></decl></param>, <param><decl><type>struct <name>h2_push</name> *</type><name>push</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_session_set_prio</name><parameter_list>(<param><decl><type><name>h2_session</name> *</type><name>session</name></decl></param>,
<param><decl><type>struct <name>h2_stream</name> *</type><name>stream</name></decl></param>,
<param><decl><type><specifier>const</specifier> struct <name>h2_priority</name> *</type><name>prio</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_SSSN_MSG</name><parameter_list>(<param><type><name>s</name></type></param>, <param><type><name>msg</name></type></param>)</parameter_list></cpp:macro> <cpp:value>"h2_session(%ld,%s,%d): "msg, s-&gt;id, h2_session_state_str(s-&gt;state), s-&gt;open_streams</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_SSSN_LOG</name><parameter_list>(<param><type><name>aplogno</name></type></param>, <param><type><name>s</name></type></param>, <param><type><name>msg</name></type></param>)</parameter_list></cpp:macro> <cpp:value>aplogno H2_SSSN_MSG(s, msg)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
