<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/ssl/ssl_util_ssl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__SSL_UTIL_SSL_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__SSL_UTIL_SSL_H__</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_LIBRARY_VERSION</name></cpp:macro> <cpp:value>OPENSSL_VERSION_NUMBER</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_LIBRARY_NAME</name></cpp:macro> <cpp:value>"OpenSSL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_LIBRARY_TEXT</name></cpp:macro> <cpp:value>OPENSSL_VERSION_TEXT</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MODSSL_USE_OPENSSL_PRE_1_1_API</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_LIBRARY_DYNTEXT</name></cpp:macro> <cpp:value>SSLeay_version(SSLEAY_VERSION)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_LIBRARY_DYNTEXT</name></cpp:macro> <cpp:value>OpenSSL_version(OPENSSL_VERSION)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_SESSION_MAX_DER</name></cpp:macro> <cpp:value>1024*10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODSSL_SESSION_ID_STRING_LEN</name></cpp:macro> <cpp:value>((SSL_MAX_SSL_SESSION_ID_LENGTH + 1) * 2)</cpp:value></cpp:define>
<function_decl><type><name>void</name></type> <name>modssl_init_app_data2_idx</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> *</type><name>modssl_get_app_data2</name><parameter_list>(<param><decl><type><name>SSL</name> *</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>modssl_set_app_data2</name><parameter_list>(<param><decl><type><name>SSL</name> *</type></decl></param>, <param><decl><type><name>void</name> *</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>EVP_PKEY</name> *</type><name>modssl_read_privatekey</name><parameter_list>(<param><decl><type><specifier>const</specifier></type> <name>char</name> *</decl></param>, <param><decl><type><name>EVP_PKEY</name> **</type></decl></param>, <param><decl><type><name>pem_password_cb</name> *</type></decl></param>, <param><decl><type><name>void</name> *</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>modssl_smart_shutdown</name><parameter_list>(<param><decl><type><name>SSL</name> *</type><name>ssl</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>BOOL</name></type> <name>modssl_X509_getBC</name><parameter_list>(<param><decl><type><name>X509</name> *</type></decl></param>, <param><decl><type><name>int</name> *</type></decl></param>, <param><decl><type><name>int</name> *</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> *</type><name>modssl_X509_NAME_ENTRY_to_string</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>X509_NAME_ENTRY</name> *</type><name>xsne</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> *</type><name>modssl_X509_NAME_to_string</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type></decl></param>, <param><decl><type><name>X509_NAME</name> *</type></decl></param>, <param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>BOOL</name></type> <name>modssl_X509_getSAN</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type></decl></param>, <param><decl><type><name>X509</name> *</type></decl></param>, <param><decl><type><name>int</name></type></decl></param>, <param><decl><type><specifier>const</specifier></type> <name>char</name> *</decl></param>, <param><decl><type><name>int</name></type></decl></param>, <param><decl><type><name>apr_array_header_t</name> **</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>BOOL</name></type> <name>modssl_X509_match_name</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type></decl></param>, <param><decl><type><name>X509</name> *</type></decl></param>, <param><decl><type><specifier>const</specifier></type> <name>char</name> *</decl></param>, <param><decl><type><name>BOOL</name></type></decl></param>, <param><decl><type><name>server_rec</name> *</type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> *</type><name>modssl_SSL_SESSION_id2sz</name><parameter_list>(<param><decl><type><name>IDCONST</name> <name>unsigned</name></type> <name>char</name> *</decl></param>, <param><decl><type><name>int</name></type></decl></param>, <param><decl><type><name>char</name> *</type></decl></param>, <param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
