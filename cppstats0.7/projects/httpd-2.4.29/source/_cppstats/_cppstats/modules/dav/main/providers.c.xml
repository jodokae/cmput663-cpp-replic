<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/dav/main/providers.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_provider.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_dav.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DAV_PROVIDER_GROUP</name></cpp:macro> <cpp:value>"dav"</cpp:value></cpp:define>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>dav_register_provider</name><argument_list>(<argument>apr_pool_t *p</argument>, <argument>const char *name</argument>,
<argument>const dav_provider *provider</argument>)</argument_list></macro> <block>{
<expr_stmt><expr><call><name>ap_register_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>DAV_PROVIDER_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>, <argument><expr><name>provider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>const dav_provider *</argument>)</argument_list></macro> <macro><name>dav_lookup_provider</name><argument_list>(<argument>const char *name</argument>)</argument_list></macro> <block>{
<return>return <expr><call><name>ap_lookup_provider</name><argument_list>(<argument><expr><name>DAV_PROVIDER_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>)</argument_list></call></expr>;</return>
}</block>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>dav_options_provider_register</name><argument_list>(<argument>apr_pool_t *p</argument>,
<argument>const char *name</argument>,
<argument>const dav_options_provider *provider</argument>)</argument_list></macro> <block>{
<expr_stmt><expr><call><name>ap_register_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>DAV_OPTIONS_EXTENSION_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>, <argument><expr><name>provider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>const dav_options_provider *</argument>)</argument_list></macro> <macro><name>dav_get_options_providers</name><argument_list>(<argument>const char *name</argument>)</argument_list></macro> <block>{
<return>return <expr><call><name>ap_lookup_provider</name><argument_list>(<argument><expr><name>DAV_OPTIONS_EXTENSION_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>)</argument_list></call></expr>;</return>
}</block>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>void</argument>)</argument_list></macro> <macro><name>dav_resource_type_provider_register</name><argument_list>(<argument>apr_pool_t *p</argument>,
<argument>const char *name</argument>,
<argument>const dav_resource_type_provider *provider</argument>)</argument_list></macro> <block>{
<expr_stmt><expr><call><name>ap_register_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>DAV_RESOURCE_TYPE_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>, <argument><expr><name>provider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>
<macro><name>DAV_DECLARE</name><argument_list>(<argument>const dav_resource_type_provider *</argument>)</argument_list></macro> <macro><name>dav_get_resource_type_providers</name><argument_list>(<argument>const char *name</argument>)</argument_list></macro> <block>{
<return>return <expr><call><name>ap_lookup_provider</name><argument_list>(<argument><expr><name>DAV_RESOURCE_TYPE_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr>"0"</expr></argument>)</argument_list></call></expr>;</return>
}</block>
</unit>
