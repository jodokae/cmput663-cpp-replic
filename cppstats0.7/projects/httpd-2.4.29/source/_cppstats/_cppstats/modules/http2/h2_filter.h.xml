<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/http2/h2_filter.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_filter__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_filter__</name></cpp:macro></cpp:define>
<struct_decl>struct <name>h2_bucket_beam</name>;</struct_decl>
<struct_decl>struct <name>h2_headers</name>;</struct_decl>
<struct_decl>struct <name>h2_stream</name>;</struct_decl>
<struct_decl>struct <name>h2_session</name>;</struct_decl>
<typedef>typedef <type><struct>struct <name>h2_filter_cin</name> <block>{
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_socket_t</name> *</type><name>socket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_interval_time_t</name></type> <name>timeout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket</name> *</type><name>cur</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_filter_cin</name>;</typedef>
<function_decl><type><name>h2_filter_cin</name> *</type><name>h2_filter_cin_create</name><parameter_list>(<param><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_filter_cin_timeout_set</name><parameter_list>(<param><decl><type><name>h2_filter_cin</name> *</type><name>cin</name></decl></param>, <param><decl><type><name>apr_interval_time_t</name></type> <name>timeout</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_filter_core_input</name><parameter_list>(<param><decl><type><name>ap_filter_t</name>*</type> <name>filter</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name>*</type> <name>brigade</name></decl></param>,
<param><decl><type><name>ap_input_mode_t</name></type> <name>mode</name></decl></param>,
<param><decl><type><name>apr_read_type_e</name></type> <name>block</name></decl></param>,
<param><decl><type><name>apr_off_t</name></type> <name>readbytes</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <block>{
<decl><name>H2_BUCKET_EV_BEFORE_DESTROY</name></decl>,
<decl><name>H2_BUCKET_EV_BEFORE_MASTER_SEND</name></decl>
}</block></enum></type> <name>h2_bucket_event</name>;</typedef>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>apr_bucket_type_t</name></type> <name>h2_bucket_type_observer</name></decl>;</decl_stmt>
<typedef>typedef <function_decl><type><name>apr_status_t</name></type> <name>h2_bucket_event_cb</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>h2_bucket_event</name></type> <name>event</name></decl></param>, <param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_BUCKET_IS_OBSERVER</name><parameter_list>(<param><type><name>e</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(e-&gt;type == &amp;h2_bucket_type_observer)</cpp:value></cpp:define>
<function_decl><type><name>apr_bucket</name> *</type> <name>h2_bucket_observer_make</name><parameter_list>(<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>, <param><decl><type><name>h2_bucket_event_cb</name> *</type><name>cb</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_bucket</name> *</type> <name>h2_bucket_observer_create</name><parameter_list>(<param><decl><type><name>apr_bucket_alloc_t</name> *</type><name>list</name></decl></param>,
<param><decl><type><name>h2_bucket_event_cb</name> *</type><name>cb</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_bucket_observer_fire</name><parameter_list>(<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>, <param><decl><type><name>h2_bucket_event</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_bucket</name> *</type><name>h2_bucket_observer_beam</name><parameter_list>(<param><decl><type>struct <name>h2_bucket_beam</name> *</type><name>beam</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>dest</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>apr_bucket</name> *</type><name>src</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_filter_h2_status_handler</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
