<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/http2/h2_stream.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_stream__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_stream__</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h2.h"</cpp:file></cpp:include>
<struct_decl>struct <name>h2_mplx</name>;</struct_decl>
<struct_decl>struct <name>h2_priority</name>;</struct_decl>
<struct_decl>struct <name>h2_request</name>;</struct_decl>
<struct_decl>struct <name>h2_headers</name>;</struct_decl>
<struct_decl>struct <name>h2_session</name>;</struct_decl>
<struct_decl>struct <name>h2_task</name>;</struct_decl>
<struct_decl>struct <name>h2_bucket_beam</name>;</struct_decl>
<typedef>typedef <type>struct <name>h2_stream</name></type> <name>h2_stream</name>;</typedef>
<typedef>typedef <function_decl><type><name>void</name></type> <name>h2_stream_state_cb</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> <name>h2_stream_event_cb</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>h2_stream_event_t</name></type> <name>ev</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><struct>struct <name>h2_stream_monitor</name> <block>{
<decl_stmt><decl><type><name>void</name> *</type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_state_cb</name> *</type><name>on_state_enter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_state_cb</name> *</type><name>on_state_invalid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_event_cb</name> *</type><name>on_state_event</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_event_cb</name> *</type><name>on_event</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_stream_monitor</name>;</typedef>
<struct>struct <name>h2_stream</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>initiated_on</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_state_t</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>created</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> struct <name>h2_request</name> *</type><name>request</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_request</name> *</type><name>rtmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_table_t</name> *</type><name>trailers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>request_headers_added</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_bucket_beam</name> *</type><name>input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket_brigade</name> *</type><name>in_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>in_window_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>in_last_write</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_bucket_beam</name> *</type><name>output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket_brigade</name> *</type><name>out_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>max_mem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rst_error</name></decl>;</decl_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>aborted</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>scheduled</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>has_response</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>input_eof</name> : 1</expr>;</expr_stmt>
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>out_checked</name> : 1</expr>;</expr_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>push_policy</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>h2_task</name> *</type><name>task</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>h2_priority</name> *</type><name>pref_priority</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>out_data_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>out_data_octets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>in_data_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>in_data_octets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>h2_stream_monitor</name> *</type><name>monitor</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_STREAM_RST</name><parameter_list>(<param><type><name>s</name></type></param>, <param><type><name>def</name></type></param>)</parameter_list></cpp:macro> <cpp:value>(s-&gt;rst_error? s-&gt;rst_error : (def))</cpp:value></cpp:define>
<function_decl><type><name>h2_stream</name> *</type><name>h2_stream_create</name><parameter_list>(<param><decl><type><name>int</name></type> <name>id</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type>struct <name>h2_session</name> *</type><name>session</name></decl></param>,
<param><decl><type><name>h2_stream_monitor</name> *</type><name>monitor</name></decl></param>,
<param><decl><type><name>int</name></type> <name>initiated_on</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_destroy</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_prep_processing</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_set_monitor</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>h2_stream_monitor</name> *</type><name>monitor</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_dispatch</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>h2_stream_event_t</name></type> <name>ev</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_cleanup</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_pool_t</name> *</type><name>h2_stream_detach_pool</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_in_consumed</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>apr_off_t</name></type> <name>amount</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_set_request</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>h2_request</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_set_request_rec</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>int</name></type> <name>eos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_add_header</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>nlen</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>vlen</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_send_frame</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>int</name></type> <name>frame_type</name></decl></param>, <param><decl><type><name>int</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_recv_frame</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>int</name></type> <name>frame_type</name></decl></param>, <param><decl><type><name>int</name></type> <name>flags</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_recv_DATA</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>uint8_t</name></type> <name>flags</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>uint8_t</name> *</type><name>data</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_flush_input</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_stream_rst</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>int</name></type> <name>error_code</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_stream_was_closed</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_out_prepare</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>apr_off_t</name> *</type><name>plen</name></decl></param>,
<param><decl><type><name>int</name> *</type><name>peos</name></decl></param>, <param><decl><type><name>h2_headers</name> **</type><name>presponse</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_read_to</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>apr_off_t</name> *</type><name>plen</name></decl></param>, <param><decl><type><name>int</name> *</type><name>peos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_table_t</name> *</type><name>h2_stream_get_trailers</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_stream_submit_pushes</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>, <param><decl><type><name>h2_headers</name> *</type><name>response</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> struct <name>h2_priority</name> *</type><name>h2_stream_get_priority</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>,
<param><decl><type><name>h2_headers</name> *</type><name>response</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>h2_stream_state_str</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_stream_is_ready</name><parameter_list>(<param><decl><type><name>h2_stream</name> *</type><name>stream</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_STRM_MSG</name><parameter_list>(<param><type><name>s</name></type></param>, <param><type><name>msg</name></type></param>)</parameter_list></cpp:macro> <cpp:value>"h2_stream(%ld-%d,%s): "msg, s-&gt;session-&gt;id, s-&gt;id, h2_stream_state_str(s)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_STRM_LOG</name><parameter_list>(<param><type><name>aplogno</name></type></param>, <param><type><name>s</name></type></param>, <param><type><name>msg</name></type></param>)</parameter_list></cpp:macro> <cpp:value>aplogno H2_STRM_MSG(s, msg)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
