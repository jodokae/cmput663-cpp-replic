<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/http2/h2_conn.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_conn__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_conn__</name></cpp:macro></cpp:define>
<struct_decl>struct <name>h2_ctx</name>;</struct_decl>
<struct_decl>struct <name>h2_task</name>;</struct_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_conn_setup</name><parameter_list>(<param><decl><type>struct <name>h2_ctx</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>, <param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_conn_run</name><parameter_list>(<param><decl><type>struct <name>h2_ctx</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_conn_pre_close</name><parameter_list>(<param><decl><type>struct <name>h2_ctx</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_conn_child_init</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>server_rec</name> *</type><name>s</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <block>{
<decl><name>H2_MPM_UNKNOWN</name></decl>,
<decl><name>H2_MPM_WORKER</name></decl>,
<decl><name>H2_MPM_EVENT</name></decl>,
<decl><name>H2_MPM_PREFORK</name></decl>,
<decl><name>H2_MPM_MOTORZ</name></decl>,
<decl><name>H2_MPM_SIMPLE</name></decl>,
<decl><name>H2_MPM_NETWARE</name></decl>,
<decl><name>H2_MPM_WINNT</name></decl>,
}</block></enum></type> <name>h2_mpm_type_t</name>;</typedef>
<function_decl><type><name>h2_mpm_type_t</name></type> <name>h2_conn_mpm_type</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>h2_conn_mpm_name</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_mpm_supported</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>conn_rec</name> *</type><name>h2_slave_create</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>master</name></decl></param>, <param><decl><type><name>int</name></type> <name>slave_id</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>parent</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_slave_destroy</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>slave</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_slave_run_pre_connection</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>slave</name></decl></param>, <param><decl><type><name>apr_socket_t</name> *</type><name>csd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_slave_run_connection</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>slave</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
