<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="projects/httpd-2.4.29/_cppstats/_cppstats/modules/http2/h2_util.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__mod_h2__h2_util__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__mod_h2__h2_util__</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;nghttp2/nghttp2.h&gt;</cpp:file></cpp:include>
<struct_decl>struct <name>h2_request</name>;</struct_decl>
<struct_decl>struct <name>nghttp2_frame</name>;</struct_decl>
<function_decl><type><name>size_t</name></type> <name>h2_util_hex_dump</name><parameter_list>(<param><decl><type><name>char</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>maxlen</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>datalen</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>h2_util_header_print</name><parameter_list>(<param><decl><type><name>char</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>maxlen</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>namelen</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>valuelen</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_util_camel_case_header</name><parameter_list>(<param><decl><type><name>char</name> *</type><name>s</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_util_frame_print</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>nghttp2_frame</name> *</type><name>frame</name></decl></param>, <param><decl><type><name>char</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>maxlen</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type>struct <name>h2_ihash_t</name></type> <name>h2_ihash_t</name>;</typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>h2_ihash_iter_t</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>, <param><decl><type><name>void</name> *</type><name>val</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>h2_ihash_t</name> *</type><name>h2_ihash_create</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>offset_of_int</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>h2_ihash_count</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_ihash_empty</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> *</type><name>h2_ihash_get</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>int</name></type> <name>id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_ihash_iter</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>h2_ihash_iter_t</name> *</type><name>fn</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_ihash_add</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>void</name> *</type><name>val</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_ihash_remove</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>int</name></type> <name>id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_ihash_remove_val</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>void</name> *</type><name>val</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_ihash_clear</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>h2_ihash_shift</name><parameter_list>(<param><decl><type><name>h2_ihash_t</name> *</type><name>ih</name></decl></param>, <param><decl><type><name>void</name> **</type><name>buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>max</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><struct>struct <name>h2_iqueue</name> <block>{
<decl_stmt><decl><type><name>int</name> *</type><name>elts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nelts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nalloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_iqueue</name>;</typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>h2_iq_cmp</name><parameter_list>(<param><decl><type><name>int</name></type> <name>i1</name></decl></param>, <param><decl><type><name>int</name></type> <name>i2</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>h2_iqueue</name> *</type><name>h2_iq_create</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>int</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_empty</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_count</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_add</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>int</name></type> <name>sid</name></decl></param>, <param><decl><type><name>h2_iq_cmp</name> *</type><name>cmp</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_append</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>int</name></type> <name>sid</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_remove</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>int</name></type> <name>sid</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_iq_clear</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h2_iq_sort</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>h2_iq_cmp</name> *</type><name>cmp</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_shift</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>h2_iq_mshift</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>int</name> *</type><name>pint</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>max</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_iq_contains</name><parameter_list>(<param><decl><type><name>h2_iqueue</name> *</type><name>q</name></decl></param>, <param><decl><type><name>int</name></type> <name>sid</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type>struct <name>h2_fifo</name></type> <name>h2_fifo</name>;</typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_create</name><parameter_list>(<param><decl><type><name>h2_fifo</name> **</type><name>pfifo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>int</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_set_create</name><parameter_list>(<param><decl><type><name>h2_fifo</name> **</type><name>pfifo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>int</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_term</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_interrupt</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_fifo_count</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_push</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>void</name> *</type><name>elem</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_try_push</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>void</name> *</type><name>elem</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_pull</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>void</name> **</type><name>pelem</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_try_pull</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>void</name> **</type><name>pelem</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type><enum>enum <block>{
<decl><name>H2_FIFO_OP_PULL</name></decl>,
<decl><name>H2_FIFO_OP_REPUSH</name></decl>,
}</block></enum></type> <name>h2_fifo_op_t</name>;</typedef>
<typedef>typedef <function_decl><type><name>h2_fifo_op_t</name></type> <name>h2_fifo_peek_fn</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>head</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_peek</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>h2_fifo_peek_fn</name> *</type><name>fn</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_try_peek</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>h2_fifo_peek_fn</name> *</type><name>fn</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_fifo_remove</name><parameter_list>(<param><decl><type><name>h2_fifo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>void</name> *</type><name>elem</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <type>struct <name>h2_ififo</name></type> <name>h2_ififo</name>;</typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_create</name><parameter_list>(<param><decl><type><name>h2_ififo</name> **</type><name>pfifo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>int</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_set_create</name><parameter_list>(<param><decl><type><name>h2_ififo</name> **</type><name>pfifo</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>int</name></type> <name>capacity</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_term</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_interrupt</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_ififo_count</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_push</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>int</name></type> <name>id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_try_push</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>int</name></type> <name>id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_pull</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>int</name> *</type><name>pi</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_try_pull</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>int</name> *</type><name>pi</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>h2_fifo_op_t</name></type> <name>h2_ififo_peek_fn</name><parameter_list>(<param><decl><type><name>int</name></type> <name>head</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_peek</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>h2_ififo_peek_fn</name> *</type><name>fn</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_try_peek</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>h2_ififo_peek_fn</name> *</type><name>fn</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_ififo_remove</name><parameter_list>(<param><decl><type><name>h2_ififo</name> *</type><name>fifo</name></decl></param>, <param><decl><type><name>int</name></type> <name>id</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>char</name></type> <name>h2_log2</name><parameter_list>(<param><decl><type><name>int</name></type> <name>n</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_size_t</name></type> <name>h2_util_table_bytes</name><parameter_list>(<param><decl><type><name>apr_table_t</name> *</type><name>t</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>pair_extra</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_HD_MATCH_LIT</name><parameter_list>(<param><type><name>l</name></type></param>, <param><type><name>name</name></type></param>, <param><type><name>nlen</name></type></param>)</parameter_list></cpp:macro> <cpp:value>((nlen == sizeof(l) - 1) &amp;&amp; !apr_strnatcasecmp(l, name))</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>h2_req_ignore_header</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_req_ignore_trailer</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_res_ignore_trailer</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_push_policy_determine</name><parameter_list>(<param><decl><type><name>apr_table_t</name> *</type><name>headers</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>int</name></type> <name>push_enabled</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_size_t</name></type> <name>h2_util_base64url_decode</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>decoded</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>encoded</name></decl></param>,
<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>h2_util_base64url_encode</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>,
<param><decl><type><name>apr_size_t</name></type> <name>len</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_HD_MATCH_LIT_CS</name><parameter_list>(<param><type><name>l</name></type></param>, <param><type><name>name</name></type></param>)</parameter_list></cpp:macro> <cpp:value>((strlen(name) == sizeof(l) - 1) &amp;&amp; !apr_strnatcasecmp(l, name))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_CREATE_NV_LIT_CS</name><parameter_list>(<param><type><name>nv</name></type></param>, <param><type><name>NAME</name></type></param>, <param><type><name>VALUE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>nv-&gt;name = (uint8_t *)NAME; nv-&gt;namelen = sizeof(NAME) - 1; nv-&gt;value = (uint8_t *)VALUE; nv-&gt;valuelen = strlen(VALUE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_CREATE_NV_CS_LIT</name><parameter_list>(<param><type><name>nv</name></type></param>, <param><type><name>NAME</name></type></param>, <param><type><name>VALUE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>nv-&gt;name = (uint8_t *)NAME; nv-&gt;namelen = strlen(NAME); nv-&gt;value = (uint8_t *)VALUE; nv-&gt;valuelen = sizeof(VALUE) - 1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H2_CREATE_NV_CS_CS</name><parameter_list>(<param><type><name>nv</name></type></param>, <param><type><name>NAME</name></type></param>, <param><type><name>VALUE</name></type></param>)</parameter_list></cpp:macro> <cpp:value>nv-&gt;name = (uint8_t *)NAME; nv-&gt;namelen = strlen(NAME); nv-&gt;value = (uint8_t *)VALUE; nv-&gt;valuelen = strlen(VALUE)</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>h2_util_ignore_header</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>)</parameter_list>;</function_decl>
<struct_decl>struct <name>h2_headers</name>;</struct_decl>
<typedef>typedef <type><struct>struct <name>h2_ngheader</name> <block>{
<decl_stmt><decl><type><name>nghttp2_nv</name> *</type><name>nv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>nvlen</name></decl>;</decl_stmt>
}</block></struct></type> <name>h2_ngheader</name>;</typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_res_create_ngtrailer</name><parameter_list>(<param><decl><type><name>h2_ngheader</name> **</type><name>ph</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>,
<param><decl><type>struct <name>h2_headers</name> *</type><name>headers</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_res_create_ngheader</name><parameter_list>(<param><decl><type><name>h2_ngheader</name> **</type><name>ph</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>,
<param><decl><type>struct <name>h2_headers</name> *</type><name>headers</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_req_create_ngheader</name><parameter_list>(<param><decl><type><name>h2_ngheader</name> **</type><name>ph</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>,
<param><decl><type><specifier>const</specifier> struct <name>h2_request</name> *</type><name>req</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_req_add_header</name><parameter_list>(<param><decl><type><name>apr_table_t</name> *</type><name>headers</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>nlen</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>vlen</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type>struct <name>h2_request</name> *</type><name>h2_req_create</name><parameter_list>(<param><decl><type><name>int</name></type> <name>id</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>method</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>scheme</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>authority</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>path</name></decl></param>, <param><decl><type><name>apr_table_t</name> *</type><name>header</name></decl></param>,
<param><decl><type><name>int</name></type> <name>serialize</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_brigade_concat_length</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>dest</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>apr_off_t</name></type> <name>length</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_brigade_copy_length</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>dest</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>src</name></decl></param>,
<param><decl><type><name>apr_off_t</name></type> <name>length</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>h2_util_has_eos</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>, <param><decl><type><name>apr_off_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>h2_util_bb_avail</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>apr_off_t</name> *</type><name>plen</name></decl></param>, <param><decl><type><name>int</name> *</type><name>peos</name></decl></param>)</parameter_list>;</function_decl>
<typedef>typedef <function_decl><type><name>apr_status_t</name></type> <name>h2_util_pass_cb</name><parameter_list>(<param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>data</name></decl></param>, <param><decl><type><name>apr_off_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_util_bb_readx</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>h2_util_pass_cb</name> *</type><name>cb</name></decl></param>, <param><decl><type><name>void</name> *</type><name>ctx</name></decl></param>,
<param><decl><type><name>apr_off_t</name> *</type><name>plen</name></decl></param>, <param><decl><type><name>int</name> *</type><name>peos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_size_t</name></type> <name>h2_util_bucket_print</name><parameter_list>(<param><decl><type><name>char</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>bmax</name></decl></param>,
<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>sep</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_size_t</name></type> <name>h2_util_bb_print</name><parameter_list>(<param><decl><type><name>char</name> *</type><name>buffer</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>bmax</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tag</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>sep</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>h2_util_bb_log</name><parameter_list>(<param><type><name>c</name></type></param>, <param><type><name>sid</name></type></param>, <param><type><name>level</name></type></param>, <param><type><name>tag</name></type></param>, <param><type><name>bb</name></type></param>)</parameter_list></cpp:macro> <cpp:value>do { char buffer[4 * 1024]; const char *line = "(null)"; apr_size_t len, bmax = sizeof(buffer)/sizeof(buffer[0]); len = h2_util_bb_print(buffer, bmax, (tag), "", (bb)); ap_log_cerror(APLOG_MARK, level, 0, (c), "bb_dump(%ld): %s", ((c)-&gt;master? (c)-&gt;master-&gt;id : (c)-&gt;id), (len? buffer : line)); } while(0)</cpp:value></cpp:define>
<typedef>typedef <function_decl><type><name>int</name></type> <name>h2_bucket_gate</name><parameter_list>(<param><decl><type><name>apr_bucket</name> *</type><name>b</name></decl></param>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>apr_status_t</name></type> <name>h2_append_brigade</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>to</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>from</name></decl></param>,
<param><decl><type><name>apr_off_t</name> *</type><name>plen</name></decl></param>,
<param><decl><type><name>int</name> *</type><name>peos</name></decl></param>,
<param><decl><type><name>h2_bucket_gate</name> *</type><name>should_append</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_off_t</name></type> <name>h2_brigade_mem_size</name><parameter_list>(<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
