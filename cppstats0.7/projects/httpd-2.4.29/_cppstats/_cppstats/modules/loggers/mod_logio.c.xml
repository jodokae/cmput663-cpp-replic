<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/modules/loggers/mod_logio.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_lib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_optional.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APR_WANT_STRFUNC</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_want.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_log_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_connection.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>logio_module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>logio_filter_name</name><index>[]</index></name> <init>= <expr>"LOG_INPUT_OUTPUT"</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>logio_ttfb_filter_name</name><index>[]</index></name> <init>= <expr>"LOGIO_TTFB_OUT"</expr></init></decl>;</decl_stmt>
<typedef>typedef <type><struct>struct <name>logio_config_t</name> <block>{
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>bytes_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>bytes_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>bytes_last_request</name></decl>;</decl_stmt>
}</block></struct></type> <name>logio_config_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>logio_dirconf_t</name> <block>{
<expr_stmt><expr><name>unsigned</name> <name>int</name> <name>track_ttfb</name>:1</expr>;</expr_stmt>
}</block></struct></type> <name>logio_dirconf_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>logio_req_t</name> <block>{
<decl_stmt><decl><type><name>apr_time_t</name></type> <name>ttfb</name></decl>;</decl_stmt>
}</block></struct></type> <name>logio_req_t</name>;</typedef>
<function><type><specifier>static</specifier> <name>void</name></type> <name>ap_logio_add_bytes_out</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>, <param><decl><type><name>apr_off_t</name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>c</name>-&gt;<name>conn_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>cf</name>-&gt;<name>bytes_out</name></name> += <name>bytes</name></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>ap_logio_add_bytes_in</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>, <param><decl><type><name>apr_off_t</name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>c</name>-&gt;<name>conn_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>cf</name>-&gt;<name>bytes_in</name></name> += <name>bytes</name></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_off_t</name></type> <name>ap_logio_get_last_bytes</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>c</name>-&gt;<name>conn_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>cf</name>-&gt;<name>bytes_last_request</name></name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>log_bytes_in</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>char</name> *</type><name>a</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>connection</name>-&gt;<name>conn_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>apr_off_t_toa</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>cf</name>-&gt;<name>bytes_in</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>log_bytes_out</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>char</name> *</type><name>a</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>connection</name>-&gt;<name>conn_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>apr_off_t_toa</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>cf</name>-&gt;<name>bytes_out</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>log_bytes_combined</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>char</name> *</type><name>a</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>connection</name>-&gt;<name>conn_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>apr_off_t_toa</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>cf</name>-&gt;<name>bytes_out</name></name> + <name><name>cf</name>-&gt;<name>bytes_in</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>log_ttfb</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>char</name> *</type><name>a</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_req_t</name> *</type><name>rconf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>request_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name>rconf</name> || !<name><name>rconf</name>-&gt;<name>ttfb</name></name></expr>)</condition><then> <block>{
<return>return <expr>"-"</expr>;</return>
}</block></then></if>
<return>return <expr><call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"%" <name>APR_TIME_T_FMT</name></expr></argument>, <argument><expr><name><name>rconf</name>-&gt;<name>ttfb</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>logio_transaction</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>connection</name>-&gt;<name>conn_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>cf</name>-&gt;<name>bytes_last_request</name></name> = <name><name>cf</name>-&gt;<name>bytes_in</name></name> + <name><name>cf</name>-&gt;<name>bytes_out</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cf</name>-&gt;<name>bytes_in</name></name> = <name><name>cf</name>-&gt;<name>bytes_out</name></name> = 0</expr>;</expr_stmt>
<return>return <expr><name>OK</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type> <name>logio_in_filter</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>f</name></decl></param>,
<param><decl><type><name>apr_bucket_brigade</name> *</type><name>bb</name></decl></param>,
<param><decl><type><name>ap_input_mode_t</name></type> <name>mode</name></decl></param>,
<param><decl><type><name>apr_read_type_e</name></type> <name>block</name></decl></param>,
<param><decl><type><name>apr_off_t</name></type> <name>readbytes</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>apr_off_t</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>f</name>-&gt;<name>c</name>-&gt;<name>conn_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>status</name> = <call><name>ap_get_brigade</name><argument_list>(<argument><expr><name><name>f</name>-&gt;<name>next</name></name></expr></argument>, <argument><expr><name>bb</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><name>readbytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apr_brigade_length</name> <argument_list>(<argument><expr><name>bb</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr>&amp;<name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>length</name> &gt; 0</expr>)</condition><then>
<expr_stmt><expr><name><name>cf</name>-&gt;<name>bytes_in</name></name> += <name>length</name></expr>;</expr_stmt></then></if>
<return>return <expr><name>status</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>logio_pre_conn</name><parameter_list>(<param><decl><type><name>conn_rec</name> *</type><name>c</name></decl></param>, <param><decl><type><name>void</name> *</type><name>csd</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_config_t</name> *</type><name>cf</name> <init>= <expr><call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>c</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>cf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ap_set_module_config</name><argument_list>(<argument><expr><name><name>c</name>-&gt;<name>conn_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>, <argument><expr><name>cf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_add_input_filter</name><argument_list>(<argument><expr><name>logio_filter_name</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>OK</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>logio_pre_config</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>plog</name></decl></param>, <param><decl><type><name>apr_pool_t</name> *</type><name>ptemp</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr>static <call><name>APR_OPTIONAL_FN_TYPE</name><argument_list>(<argument><expr><name>ap_register_log_handler</name></expr></argument>)</argument_list></call> *<name>log_pfn_register</name></expr>;</expr_stmt>
<expr_stmt><expr><name>log_pfn_register</name> = <call><name>APR_RETRIEVE_OPTIONAL_FN</name><argument_list>(<argument><expr><name>ap_register_log_handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>log_pfn_register</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>log_pfn_register</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr>"I"</expr></argument>, <argument><expr><name>log_bytes_in</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>log_pfn_register</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr>"O"</expr></argument>, <argument><expr><name>log_bytes_out</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>log_pfn_register</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr>"S"</expr></argument>, <argument><expr><name>log_bytes_combined</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>log_pfn_register</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr>"^FB"</expr></argument>, <argument><expr><name>log_ttfb</name></expr></argument>, <argument><expr>0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>OK</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>apr_status_t</name></type> <name>logio_ttfb_filter</name><parameter_list>(<param><decl><type><name>ap_filter_t</name> *</type><name>f</name></decl></param>, <param><decl><type><name>apr_bucket_brigade</name> *</type><name>b</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>request_rec</name> *</type><name>r</name> <init>= <expr><name><name>f</name>-&gt;<name>r</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>logio_dirconf_t</name> *</type><name>conf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>conf</name> &amp;&amp; <name><name>conf</name>-&gt;<name>track_ttfb</name></name></expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>logio_req_t</name> *</type><name>rconf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>request_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name>rconf</name> == <name>NULL</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>rconf</name> = <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>logio_req_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rconf</name>-&gt;<name>ttfb</name></name> = <call><name>apr_time_now</name><argument_list>()</argument_list></call> - <name><name>r</name>-&gt;<name>request_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_set_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>request_config</name></name></expr></argument>, <argument><expr>&amp;<name>logio_module</name></expr></argument>, <argument><expr><name>rconf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr><call><name>ap_remove_output_filter</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>ap_pass_brigade</name><argument_list>(<argument><expr><name><name>f</name>-&gt;<name>next</name></name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>logio_insert_filter</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type> <name>r</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_dirconf_t</name> *</type><name>conf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>logio_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>conf</name>-&gt;<name>track_ttfb</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_add_output_filter</name><argument_list>(<argument><expr><name>logio_ttfb_filter_name</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>connection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>logio_track_ttfb</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>in_dir_config</name></decl></param>, <param><decl><type><name>int</name></type> <name>arg</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_dirconf_t</name> *</type><name>dir_config</name> <init>= <expr><name>in_dir_config</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>dir_config</name>-&gt;<name>track_ttfb</name></name> = <name>arg</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_logio_dirconf</name> <parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>char</name> *</type><name>dummy</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>logio_dirconf_t</name> *</type><name>new</name> <init>=
<expr>(<name>logio_dirconf_t</name> *) <call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>logio_dirconf_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr>(<name>void</name> *) <name>new</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>logio_cmds</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>AP_INIT_FLAG</name> <argument_list>(<argument><expr>"LogIOTrackTTFB"</expr></argument>, <argument><expr><name>logio_track_ttfb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>OR_ALL</name></expr></argument>,
<argument><expr>"Set to 'ON' to enable tracking time to first byte"</expr></argument>)</argument_list></call></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>void</name></type> <name>register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name><name>pre</name><index>[]</index></name> <init>= <expr><block>{ <expr>"mod_log_config.c"</expr>, <expr><name>NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ap_hook_pre_connection</name><argument_list>(<argument><expr><name>logio_pre_conn</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>APR_HOOK_MIDDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_hook_pre_config</name><argument_list>(<argument><expr><name>logio_pre_config</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>APR_HOOK_REALLY_FIRST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_hook_log_transaction</name><argument_list>(<argument><expr><name>logio_transaction</name></expr></argument>, <argument><expr><name>pre</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>APR_HOOK_MIDDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_register_input_filter</name><argument_list>(<argument><expr><name>logio_filter_name</name></expr></argument>, <argument><expr><name>logio_in_filter</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name>AP_FTYPE_NETWORK</name> - 1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_hook_insert_filter</name><argument_list>(<argument><expr><name>logio_insert_filter</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>APR_HOOK_LAST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_register_output_filter</name><argument_list>(<argument><expr><name>logio_ttfb_filter_name</name></expr></argument>, <argument><expr><name>logio_ttfb_filter</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name>AP_FTYPE_RESOURCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>APR_REGISTER_OPTIONAL_FN</name><argument_list>(<argument><expr><name>ap_logio_add_bytes_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>APR_REGISTER_OPTIONAL_FN</name><argument_list>(<argument><expr><name>ap_logio_add_bytes_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>APR_REGISTER_OPTIONAL_FN</name><argument_list>(<argument><expr><name>ap_logio_get_last_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>logio</name></expr></argument>)</argument_list></call> = <block>{
<expr><name>STANDARD20_MODULE_STUFF</name></expr>,
<expr><name>create_logio_dirconf</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>logio_cmds</name></expr>,
<expr><name>register_hooks</name></expr>
}</block></expr>;</expr_stmt>
</unit>
