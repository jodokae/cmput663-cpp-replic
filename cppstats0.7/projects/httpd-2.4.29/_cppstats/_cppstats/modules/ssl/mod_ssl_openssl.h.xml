<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/modules/ssl/mod_ssl_openssl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>__MOD_SSL_OPENSSL_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__MOD_SSL_OPENSSL_H__</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_ssl.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>SSL_PRIVATE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/opensslv.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>(<name>OPENSSL_VERSION_NUMBER</name> &gt;= 0x10001000)</expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPENSSL_NO_SSL_INTERN</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>APR_DECLARE_EXTERNAL_HOOK</name><argument_list>(<argument>ssl</argument>, <argument>SSL</argument>, <argument>int</argument>, <argument>init_server</argument>,
<argument>(server_rec *s, apr_pool_t *p, int is_proxy, SSL_CTX *ctx)</argument>)</argument_list></macro>
<macro><name>APR_DECLARE_EXTERNAL_HOOK</name><argument_list>(<argument>ssl</argument>, <argument>SSL</argument>, <argument>int</argument>, <argument>pre_handshake</argument>,
<argument>(conn_rec *c, SSL *ssl, int is_proxy)</argument>)</argument_list></macro>
<macro><name>APR_DECLARE_EXTERNAL_HOOK</name><argument_list>(<argument>ssl</argument>, <argument>SSL</argument>, <argument>int</argument>, <argument>proxy_post_handshake</argument>,
<argument>(conn_rec *c, SSL *ssl)</argument>)</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
