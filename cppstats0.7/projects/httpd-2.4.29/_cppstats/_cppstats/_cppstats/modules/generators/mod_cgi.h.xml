<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/_cppstats/modules/generators/mod_cgi.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>_MOD_CGI_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MOD_CGI_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_include.h"</cpp:file></cpp:include>
<typedef>typedef <type><enum>enum <block>{<decl><name>RUN_AS_SSI</name></decl>, <decl><name>RUN_AS_CGI</name></decl>}</block></enum></type> <name>prog_types</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>apr_int32_t</name></type> <name>in_pipe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_int32_t</name></type> <name>out_pipe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_int32_t</name></type> <name>err_pipe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>process_cgi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_cmdtype_e</name></type> <name>cmd_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_int32_t</name></type> <name>detached</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>prog_types</name></type> <name>prog_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_bucket_brigade</name> **</type><name>bb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>include_ctx_t</name> *</type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ap_filter_t</name> *</type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_int32_t</name></type> <name>addrspace</name></decl>;</decl_stmt>
}</block></struct></type> <name>cgi_exec_info_t</name>;</typedef>
<expr_stmt><expr><call><name>APR_DECLARE_OPTIONAL_FN</name><argument_list>(<argument><expr><name>apr_status_t</name></expr></argument>, <argument><expr><name>ap_cgi_build_command</name></expr></argument>,
<argument><expr>(const <name>char</name> **<name>cmd</name>, const <name>char</name> ***<name>argv</name>,
<name>request_rec</name> *<name>r</name>, <name>apr_pool_t</name> *<name>p</name>,
<name>cgi_exec_info_t</name> *<name>e_info</name>)</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
