<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/_cppstats/modules/proxy/ajp.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>AJP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_version.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_hooks.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_lib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_buckets.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_md5.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_network_io.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_poll.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_pools.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_uri.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_date.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_fnmatch.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APR_WANT_STRFUNC</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_want.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>APR_HAVE_NETINET_IN_H</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;netinet/in.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>APR_HAVE_ARPA_INET_H</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;arpa/inet.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_DEF_HOST</name></cpp:macro> <cpp:value>"127.0.0.1"</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>NETWARE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_DEF_PORT</name></cpp:macro> <cpp:value>9009</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_DEF_PORT</name></cpp:macro> <cpp:value>8009</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_HTTPS_INDICATOR</name></cpp:macro> <cpp:value>"HTTPS"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_SSL_PROTOCOL_INDICATOR</name></cpp:macro> <cpp:value>"SSL_PROTOCOL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_SSL_CLIENT_CERT_INDICATOR</name></cpp:macro> <cpp:value>"SSL_CLIENT_CERT"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_SSL_CIPHER_INDICATOR</name></cpp:macro> <cpp:value>"SSL_CIPHER"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_SSL_SESSION_INDICATOR</name></cpp:macro> <cpp:value>"SSL_SESSION_ID"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_SSL_KEY_SIZE_INDICATOR</name></cpp:macro> <cpp:value>"SSL_CIPHER_USEKEYSIZE"</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>AJP_USE_HTTPD_WRAP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd_wrap.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_main.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_proxy.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util_ebcdic.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EOVERFLOW</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_ETOSMALL</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EINVAL</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EBAD_SIGNATURE</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_ETOBIG</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_ENO_HEADER</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EBAD_HEADER</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EBAD_MESSAGE</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_ELOGFAIL</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 9)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_EBAD_METHOD</name></cpp:macro> <cpp:value>(APR_OS_START_USERERR + 10)</cpp:value></cpp:define>
<typedef>typedef <type>struct <name>ajp_msg</name></type> <name>ajp_msg_t</name>;</typedef>
<struct>struct <name>ajp_msg</name> <block>{
<decl_stmt><decl><type><name>apr_byte_t</name> *</type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>header_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>pos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>server_side</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_size_t</name></type> <name>max_size</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_WS_HEADER</name></cpp:macro> <cpp:value>0x1234</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_HEADER_LEN</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_HEADER_SZ_LEN</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_HEADER_SZ</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_MSG_BUFFER_SZ</name></cpp:macro> <cpp:value>8192</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_MAX_BUFFER_SZ</name></cpp:macro> <cpp:value>65536</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP13_MAX_SEND_BODY_SZ</name></cpp:macro> <cpp:value>(AJP_MAX_BUFFER_SZ - AJP_HEADER_SZ)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AJP_PING_PONG_SZ</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_FORWARD_REQUEST</name></cpp:macro> <cpp:value>(unsigned char)2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_SEND_BODY_CHUNK</name></cpp:macro> <cpp:value>(unsigned char)3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_SEND_HEADERS</name></cpp:macro> <cpp:value>(unsigned char)4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_END_RESPONSE</name></cpp:macro> <cpp:value>(unsigned char)5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_GET_BODY_CHUNK</name></cpp:macro> <cpp:value>(unsigned char)6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_SHUTDOWN</name></cpp:macro> <cpp:value>(unsigned char)7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_PING</name></cpp:macro> <cpp:value>(unsigned char)8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_CPONG</name></cpp:macro> <cpp:value>(unsigned char)9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CMD_AJP13_CPING</name></cpp:macro> <cpp:value>(unsigned char)10</cpp:value></cpp:define>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_check_header</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_size_t</name> *</type><name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_reset</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_reuse</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_end</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_append_uint32</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_uint32_t</name></type> <name>value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_append_uint16</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_uint16_t</name></type> <name>value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_append_uint8</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_byte_t</name></type> <name>value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_append_string_ex</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>int</name></type> <name>convert</name></decl></param>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ajp_msg_append_string</name><parameter_list>(<param><type><name>m</name></type></param>, <param><type><name>v</name></type></param>)</parameter_list></cpp:macro> <cpp:value>ajp_msg_append_string_ex(m, v, 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ajp_msg_append_string_ascii</name><parameter_list>(<param><type><name>m</name></type></param>, <param><type><name>v</name></type></param>)</parameter_list></cpp:macro> <cpp:value>ajp_msg_append_string_ex(m, v, 0)</cpp:value></cpp:define>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_append_bytes</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>apr_byte_t</name> *</type><name>value</name></decl></param>,
<param><decl><type><name>apr_size_t</name></type> <name>valuelen</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_get_uint32</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_uint32_t</name> *</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_get_uint16</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_uint16_t</name> *</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_peek_uint16</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_uint16_t</name> *</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_get_uint8</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_byte_t</name> *</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_peek_uint8</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_byte_t</name> *</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_get_string</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> **</type><name>rvalue</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_get_bytes</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_byte_t</name> **</type><name>rvalue</name></decl></param>,
<param><decl><type><name>apr_size_t</name> *</type><name>rvalue_len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_create</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>size</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> **</type><name>rmsg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_copy</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>smsg</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>dmsg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_serialize_ping</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_serialize_cping</name><parameter_list>(<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_dump</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>char</name> *</type><name>err</name></decl></param>,
<param><decl><type><name>apr_size_t</name></type> <name>count</name></decl></param>, <param><decl><type><name>char</name> **</type><name>buf</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_msg_log</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>char</name> *</type><name>err</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_ilink_send</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_ilink_receive</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_send_header</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>, <param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><name>apr_size_t</name></type> <name>buffsize</name></decl></param>,
<param><decl><type><name>apr_uri_t</name> *</type><name>uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_read_header</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><name>apr_size_t</name></type> <name>buffsize</name></decl></param>,
<param><decl><type><name>ajp_msg_t</name> **</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_alloc_data_msg</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>pool</name></decl></param>, <param><decl><type><name>char</name> **</type><name>ptr</name></decl></param>,
<param><decl><type><name>apr_size_t</name> *</type><name>len</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> **</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_send_data_msg</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>,
<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>, <param><decl><type><name>apr_size_t</name></type> <name>len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ajp_parse_type</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_parse_header</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>proxy_dir_conf</name> *</type><name>conf</name></decl></param>,
<param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_parse_data</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>,
<param><decl><type><name>apr_uint16_t</name> *</type><name>len</name></decl></param>, <param><decl><type><name>char</name> **</type><name>ptr</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_parse_reuse</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><name>ajp_msg_t</name> *</type><name>msg</name></decl></param>,
<param><decl><type><name>apr_byte_t</name> *</type><name>reuse</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>apr_status_t</name></type> <name>ajp_handle_cping_cpong</name><parameter_list>(<param><decl><type><name>apr_socket_t</name> *</type><name>sock</name></decl></param>,
<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><name>apr_interval_time_t</name></type> <name>timeout</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> *</type><name>ajp_type_str</name><parameter_list>(<param><decl><type><name>int</name></type> <name>type</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
