<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/_cppstats/modules/aaa/mod_authz_owner.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_file_info.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_user.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_provider.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_auth.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_authz_owner.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>authz_owner_cmds</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>authz_owner_module</name></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>authz_status</name></type> <name>fileowner_check_authorization</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>require_args</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>void</name> *</type><name>parsed_require_args</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>char</name> *</type><name>reason</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<name>APR_HAS_USER</name></expr></cpp:if>
<expr_stmt><expr><name>reason</name> = "'Require file-owner' is not supported on this platform."</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01632</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><name>char</name> *</type><name>owner</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_finfo_t</name></type> <name>finfo</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>r</name>-&gt;<name>user</name></name></expr>)</condition><then> <block>{
<return>return <expr><name>AUTHZ_DENIED_NO_USER</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!<name><name>r</name>-&gt;<name>filename</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "no filename available"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01633</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>apr_stat</name><argument_list>(<argument><expr>&amp;<name>finfo</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>filename</name></name></expr></argument>, <argument><expr><name>APR_FINFO_USER</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"could not stat file "</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>filename</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01634</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!(<name><name>finfo</name>.<name>valid</name></name> &amp; <name>APR_FINFO_USER</name>)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "no file owner information available"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01635</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>apr_uid_name_get</name><argument_list>(<argument><expr>&amp;<name>owner</name></expr></argument>, <argument><expr><name><name>finfo</name>.<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name> || !<name>owner</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "could not get name of file owner"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01636</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = <call><name>apr_psprintf</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"file owner %s does not match."</expr></argument>,
<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01637</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTHZ_DENIED</name></expr>;</return>
}</block></then></if>
<return>return <expr><name>AUTHZ_GRANTED</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></function>
<function><type><specifier>static</specifier> <name>char</name> *</type><name>authz_owner_get_file_group</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list> <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<name>APR_HAS_USER</name></expr></cpp:if>
<return>return <expr><name>NULL</name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><name>char</name> *</type><name>reason</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>group</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_finfo_t</name></type> <name>finfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>r</name>-&gt;<name>filename</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "no filename available"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01638</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>apr_stat</name><argument_list>(<argument><expr>&amp;<name>finfo</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>filename</name></name></expr></argument>, <argument><expr><name>APR_FINFO_GROUP</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>"could not stat file "</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>filename</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01639</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!(<name><name>finfo</name>.<name>valid</name></name> &amp; <name>APR_FINFO_GROUP</name>)</expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "no file group information available"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01640</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>apr_gid_name_get</name><argument_list>(<argument><expr>&amp;<name>group</name></expr></argument>, <argument><expr><name><name>finfo</name>.<name>group</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name> || !<name>group</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>reason</name> = "could not get name of file group"</expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01641</expr></argument>)</argument_list></call>
"Authorization of user %s to access %s failed, reason: %s"</expr></argument>,
<argument><expr><name><name>r</name>-&gt;<name>user</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>reason</name> ? <name>reason</name> : "unknown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></then></if>
<return>return <expr><name>group</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>authz_provider</name></type> <name>authz_fileowner_provider</name> <init>= <expr><block>{
<expr>&amp;<name>fileowner_check_authorization</name></expr>,
<expr><name>NULL</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>void</name></type> <name>register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>APR_REGISTER_OPTIONAL_FN</name><argument_list>(<argument><expr><name>authz_owner_get_file_group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_register_auth_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>AUTHZ_PROVIDER_GROUP</name></expr></argument>, <argument><expr>"file-owner"</expr></argument>,
<argument><expr><name>AUTHZ_PROVIDER_VERSION</name></expr></argument>,
<argument><expr>&amp;<name>authz_fileowner_provider</name></expr></argument>,
<argument><expr><name>AP_AUTH_INTERNAL_PER_CONF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>authz_owner</name></expr></argument>)</argument_list></call> = <block>{
<expr><name>STANDARD20_MODULE_STUFF</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>authz_owner_cmds</name></expr>,
<expr><name>register_hooks</name></expr>
}</block></expr>;</expr_stmt>
</unit>
