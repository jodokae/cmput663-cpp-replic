<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="_cppstats/_cppstats/server/util_expr_parse.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>YYTOKENTYPE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YYTOKENTYPE</name></cpp:macro></cpp:define>
<enum>enum <name>yytokentype</name> <block>{
<decl><name>T_TRUE</name> <init>= <expr>258</expr></init></decl>,
<decl><name>T_FALSE</name> <init>= <expr>259</expr></init></decl>,
<decl><name>T_EXPR_BOOL</name> <init>= <expr>260</expr></init></decl>,
<decl><name>T_EXPR_STRING</name> <init>= <expr>261</expr></init></decl>,
<decl><name>T_ERROR</name> <init>= <expr>262</expr></init></decl>,
<decl><name>T_DIGIT</name> <init>= <expr>263</expr></init></decl>,
<decl><name>T_ID</name> <init>= <expr>264</expr></init></decl>,
<decl><name>T_STRING</name> <init>= <expr>265</expr></init></decl>,
<decl><name>T_REGEX</name> <init>= <expr>266</expr></init></decl>,
<decl><name>T_REGEX_I</name> <init>= <expr>267</expr></init></decl>,
<decl><name>T_REGEX_BACKREF</name> <init>= <expr>268</expr></init></decl>,
<decl><name>T_OP_UNARY</name> <init>= <expr>269</expr></init></decl>,
<decl><name>T_OP_BINARY</name> <init>= <expr>270</expr></init></decl>,
<decl><name>T_STR_BEGIN</name> <init>= <expr>271</expr></init></decl>,
<decl><name>T_STR_END</name> <init>= <expr>272</expr></init></decl>,
<decl><name>T_VAR_BEGIN</name> <init>= <expr>273</expr></init></decl>,
<decl><name>T_VAR_END</name> <init>= <expr>274</expr></init></decl>,
<decl><name>T_OP_EQ</name> <init>= <expr>275</expr></init></decl>,
<decl><name>T_OP_NE</name> <init>= <expr>276</expr></init></decl>,
<decl><name>T_OP_LT</name> <init>= <expr>277</expr></init></decl>,
<decl><name>T_OP_LE</name> <init>= <expr>278</expr></init></decl>,
<decl><name>T_OP_GT</name> <init>= <expr>279</expr></init></decl>,
<decl><name>T_OP_GE</name> <init>= <expr>280</expr></init></decl>,
<decl><name>T_OP_REG</name> <init>= <expr>281</expr></init></decl>,
<decl><name>T_OP_NRE</name> <init>= <expr>282</expr></init></decl>,
<decl><name>T_OP_IN</name> <init>= <expr>283</expr></init></decl>,
<decl><name>T_OP_STR_EQ</name> <init>= <expr>284</expr></init></decl>,
<decl><name>T_OP_STR_NE</name> <init>= <expr>285</expr></init></decl>,
<decl><name>T_OP_STR_LT</name> <init>= <expr>286</expr></init></decl>,
<decl><name>T_OP_STR_LE</name> <init>= <expr>287</expr></init></decl>,
<decl><name>T_OP_STR_GT</name> <init>= <expr>288</expr></init></decl>,
<decl><name>T_OP_STR_GE</name> <init>= <expr>289</expr></init></decl>,
<decl><name>T_OP_CONCAT</name> <init>= <expr>290</expr></init></decl>,
<decl><name>T_OP_OR</name> <init>= <expr>291</expr></init></decl>,
<decl><name>T_OP_AND</name> <init>= <expr>292</expr></init></decl>,
<decl><name>T_OP_NOT</name> <init>= <expr>293</expr></init></decl>
}</block>;</enum>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr>! <name>defined</name> <name>YYSTYPE</name> &amp;&amp; ! <name>defined</name> <name>YYSTYPE_IS_DECLARED</name></expr></cpp:if>
<typedef>typedef <type><union>union <name>YYSTYPE</name> <block>{
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>35</cpp:number> <cpp:file>"util_expr_parse.y"</cpp:file></cpp:line>
<decl_stmt><decl><type><name>char</name> *</type><name>cpVal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ap_expr_t</name> *</type><name>exVal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>96</cpp:number> <cpp:file>"util_expr_parse.h"</cpp:file></cpp:line>
}</block></union></type> <name>YYSTYPE</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YYSTYPE_IS_TRIVIAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>yystype</name></cpp:macro> <cpp:value>YYSTYPE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YYSTYPE_IS_DECLARED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
