<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="modules/mappers/mod_dir.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_lib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_main.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util_script.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_rewrite.h"</cpp:file></cpp:include>
<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>dir_module</name></decl>;</decl_stmt>
<typedef>typedef <type><enum>enum <block>{
<decl><name>MODDIR_OFF</name> <init>= <expr>0</expr></init></decl>,
<decl><name>MODDIR_ON</name></decl>,
<decl><name>MODDIR_UNSET</name></decl>
}</block></enum></type> <name>moddir_cfg</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REDIRECT_OFF</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REDIRECT_UNSET</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>dir_config_struct</name> <block>{
<decl_stmt><decl><type><name>apr_array_header_t</name> *</type><name>index_names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>moddir_cfg</name></type> <name>do_slash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>moddir_cfg</name></type> <name>checkhandler</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>redirect_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>dflt</name></decl>;</decl_stmt>
}</block></struct></type> <name>dir_config_rec</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIR_CMD_PERMS</name></cpp:macro> <cpp:value>OR_INDEXES</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>add_index</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>dummy</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>arg</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name> <init>= <expr><name>dummy</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>t</name></decl>, *<decl><type ref="prev"/><name>w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>d</name>-&gt;<name>index_names</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>d</name>-&gt;<name>index_names</name></name> = <call><name>apr_array_make</name><argument_list>(<argument><expr><name><name>cmd</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>2</expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>char</name> *</expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name>t</name> = <name>arg</name></expr>;</expr_stmt>
<while>while <condition>(<expr>(<name>w</name> = <call><name>ap_getword_conf</name><argument_list>(<argument><expr><name><name>cmd</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>t</name></expr></argument>)</argument_list></call>) &amp;&amp; <name><name>w</name><index>[<expr>0</expr>]</index></name></expr>)</condition> <block>{
<if>if <condition>(<expr><name>count</name> == 0 &amp;&amp; !<call><name>strcasecmp</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr>"disabled"</expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>tt</name> <init>= <expr><name>t</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>ww</name> <init>= <expr><call><name>ap_getword_conf</name><argument_list>(<argument><expr><name><name>cmd</name>-&gt;<name>temp_pool</name></name></expr></argument>, <argument><expr>&amp;<name>tt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>ww</name><index>[<expr>0</expr>]</index></name> == '\0'</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_array_clear</name><argument_list>(<argument><expr><name><name>d</name>-&gt;<name>index_names</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
}</block></then></if>
}</block></then></if>
<expr_stmt><expr>*(const <name>char</name> **)<call><name>apr_array_push</name><argument_list>(<argument><expr><name><name>d</name>-&gt;<name>index_names</name></name></expr></argument>)</argument_list></call> = <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name>++</expr>;</expr_stmt>
}</block></while>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>configure_slash</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>d_</name></decl></param>, <param><decl><type><name>int</name></type> <name>arg</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name> <init>= <expr><name>d_</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>d</name>-&gt;<name>do_slash</name></name> = <name>arg</name> ? <name>MODDIR_ON</name> : <name>MODDIR_OFF</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>configure_checkhandler</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>d_</name></decl></param>, <param><decl><type><name>int</name></type> <name>arg</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name> <init>= <expr><name>d_</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>d</name>-&gt;<name>checkhandler</name></name> = <name>arg</name> ? <name>MODDIR_ON</name> : <name>MODDIR_OFF</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>configure_redirect</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>, <param><decl><type><name>void</name> *</type><name>d_</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>arg1</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name> <init>= <expr><name>d_</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>status</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>, <argument><expr>"ON"</expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name>status</name> = <name>HTTP_MOVED_TEMPORARILY</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>, <argument><expr>"OFF"</expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name>status</name> = <name>REDIRECT_OFF</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>, <argument><expr>"permanent"</expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name>status</name> = <name>HTTP_MOVED_PERMANENTLY</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>, <argument><expr>"temp"</expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name>status</name> = <name>HTTP_MOVED_TEMPORARILY</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>, <argument><expr>"seeother"</expr></argument>)</argument_list></call></expr>)</condition><then>
<expr_stmt><expr><name>status</name> = <name>HTTP_SEE_OTHER</name></expr>;</expr_stmt></then>
<else>else <if>if <condition>(<expr><call><name>apr_isdigit</name><argument_list>(<argument><expr>*<name>arg1</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>status</name> = <call><name>atoi</name><argument_list>(<argument><expr><name>arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<call><name>ap_is_HTTP_REDIRECT</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<return>return <expr>"DirectoryIndexRedirect only accepts values between 300 and 399"</expr>;</return>
}</block></then></if>
}</block></then> <else>else <block>{
<return>return <expr>"DirectoryIndexRedirect ON|OFF|permanent|temp|seeother|3xx"</expr>;</return>
}</block></else></if></else></if></else></if></else></if></else></if></else></if>
<expr_stmt><expr><name><name>d</name>-&gt;<name>redirect_index</name></name> = <name>status</name></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>dir_cmds</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>AP_INIT_TAKE1</name><argument_list>(<argument><expr>"FallbackResource"</expr></argument>, <argument><expr><name>ap_set_string_slot</name></expr></argument>,
<argument><expr>(<name>void</name>*)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>dir_config_rec</name></expr></argument>, <argument><expr><name>dflt</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>DIR_CMD_PERMS</name></expr></argument>, <argument><expr>"Set a default handler"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_RAW_ARGS</name><argument_list>(<argument><expr>"DirectoryIndex"</expr></argument>, <argument><expr><name>add_index</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DIR_CMD_PERMS</name></expr></argument>,
<argument><expr>"a list of file names"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"DirectorySlash"</expr></argument>, <argument><expr><name>configure_slash</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DIR_CMD_PERMS</name></expr></argument>,
<argument><expr>"On or Off"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"DirectoryCheckHandler"</expr></argument>, <argument><expr><name>configure_checkhandler</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DIR_CMD_PERMS</name></expr></argument>,
<argument><expr>"On or Off"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_TAKE1</name><argument_list>(<argument><expr>"DirectoryIndexRedirect"</expr></argument>, <argument><expr><name>configure_redirect</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>DIR_CMD_PERMS</name></expr></argument>, <argument><expr>"On, Off, or a 3xx status code."</expr></argument>)</argument_list></call></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_dir_config</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>char</name> *</type><name>dummy</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>new</name> <init>= <expr><call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dir_config_rec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>index_names</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>do_slash</name></name> = <name>MODDIR_UNSET</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>checkhandler</name></name> = <name>MODDIR_UNSET</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>redirect_index</name></name> = <name>REDIRECT_UNSET</name></expr>;</expr_stmt>
<return>return <expr>(<name>void</name> *) <name>new</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>merge_dir_configs</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>void</name> *</type><name>basev</name></decl></param>, <param><decl><type><name>void</name> *</type><name>addv</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>new</name> <init>= <expr><call><name>apr_pcalloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dir_config_rec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>base</name> <init>= <expr>(<name>dir_config_rec</name> *)<name>basev</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>add</name> <init>= <expr>(<name>dir_config_rec</name> *)<name>addv</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>index_names</name></name> = <name><name>add</name>-&gt;<name>index_names</name></name> ? <name><name>add</name>-&gt;<name>index_names</name></name> : <name><name>base</name>-&gt;<name>index_names</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>do_slash</name></name> =
(<name><name>add</name>-&gt;<name>do_slash</name></name> == <name>MODDIR_UNSET</name>) ? <name><name>base</name>-&gt;<name>do_slash</name></name> : <name><name>add</name>-&gt;<name>do_slash</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>checkhandler</name></name> =
(<name><name>add</name>-&gt;<name>checkhandler</name></name> == <name>MODDIR_UNSET</name>) ? <name><name>base</name>-&gt;<name>checkhandler</name></name> : <name><name>add</name>-&gt;<name>checkhandler</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>redirect_index</name></name>=
(<name><name>add</name>-&gt;<name>redirect_index</name></name> == <name>REDIRECT_UNSET</name>) ? <name><name>base</name>-&gt;<name>redirect_index</name></name> : <name><name>add</name>-&gt;<name>redirect_index</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new</name>-&gt;<name>dflt</name></name> = <name><name>add</name>-&gt;<name>dflt</name></name> ? <name><name>add</name>-&gt;<name>dflt</name></name> : <name><name>base</name>-&gt;<name>dflt</name></name></expr>;</expr_stmt>
<return>return <expr><name>new</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>fixup_dflt</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>, <argument><expr>&amp;<name>dir_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>name_ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>request_rec</name> *</type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>error_notfound</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>name_ptr</name> = <name><name>d</name>-&gt;<name>dflt</name></name></expr>;</expr_stmt>
<if>if <condition>(<expr>(<name>name_ptr</name> == <name>NULL</name>) || !(<call><name>strcasecmp</name><argument_list>(<argument><expr><name>name_ptr</name></expr></argument>,<argument><expr>"disabled"</expr></argument>)</argument_list></call>)</expr>)</condition><then> <block>{
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>args</name></name> != <name>NULL</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>name_ptr</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>name_ptr</name></expr></argument>, <argument><expr>"?"</expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>args</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name>rr</name> = <call><name>ap_sub_req_lookup_uri</name><argument_list>(<argument><expr><name>name_ptr</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>output_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>rr</name>-&gt;<name>status</name></name> == <name>HTTP_OK</name>
&amp;&amp; ( (<name><name>rr</name>-&gt;<name>handler</name></name> &amp;&amp; !<call><name>strcmp</name><argument_list>(<argument><expr><name><name>rr</name>-&gt;<name>handler</name></name></expr></argument>, <argument><expr>"proxy-server"</expr></argument>)</argument_list></call>)
|| <name><name>rr</name>-&gt;<name>finfo</name>.<name>filetype</name></name> == <name>APR_REG</name>)</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_internal_fast_redirect</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>OK</name></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr><call><name>ap_is_HTTP_REDIRECT</name><argument_list>(<argument><expr><name><name>rr</name>-&gt;<name>status</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_pool_join</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>rr</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>notes</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>notes</name></name></expr></argument>, <argument><expr><name><name>rr</name>-&gt;<name>notes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>headers_out</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>headers_out</name></name></expr></argument>,
<argument><expr><name><name>rr</name>-&gt;<name>headers_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>err_headers_out</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>err_headers_out</name></name></expr></argument>,
<argument><expr><name><name>rr</name>-&gt;<name>err_headers_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>error_notfound</name> = <name><name>rr</name>-&gt;<name>status</name></name></expr>;</expr_stmt>
}</block></then> <else>else <if>if <condition>(<expr><name><name>rr</name>-&gt;<name>status</name></name> &amp;&amp; <name><name>rr</name>-&gt;<name>status</name></name> != <name>HTTP_NOT_FOUND</name>
&amp;&amp; <name><name>rr</name>-&gt;<name>status</name></name> != <name>HTTP_OK</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>error_notfound</name> = <name><name>rr</name>-&gt;<name>status</name></name></expr>;</expr_stmt>
}</block></then></if></else></if></else></if>
<expr_stmt><expr><call><name>ap_destroy_sub_req</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>error_notfound</name></expr>)</condition><then> <block>{
<return>return <expr><name>error_notfound</name></expr>;</return>
}</block></then></if>
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>fixup_dir</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>dir_config_rec</name> *</type><name>d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name><name>dummy_ptr</name><index>[<expr>1</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> **</type><name>names_ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>error_notfound</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>r</name>-&gt;<name>handler</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>r</name>-&gt;<name>handler</name></name> = <name>DIR_MAGIC_TYPE</name></expr>;</expr_stmt>
}</block></then></if>
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>path_info</name></name> &amp;&amp; *<name><name>r</name>-&gt;<name>path_info</name></name></expr>)</condition><then> <block>{
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>d</name> = (<name>dir_config_rec</name> *)<call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>dir_module</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>uri</name><index>[<expr>0</expr>]</index></name> == '\0' || <name><name>r</name>-&gt;<name>uri</name><index>[<expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>)</argument_list></call> - 1</expr>]</index></name> != '/'</expr>)</condition><then> <block>{
<decl_stmt><decl><type><name>char</name> *</type><name>ifile</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>d</name>-&gt;<name>do_slash</name></name></expr>)</condition><then> <block>{
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>(<name><name>r</name>-&gt;<name>method_number</name></name> != <name>M_GET</name>)
&amp;&amp; <call><name>apr_table_get</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>subprocess_env</name></name></expr></argument>, <argument><expr>"redirect-carefully"</expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>args</name></name> != <name>NULL</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>ifile</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><call><name>ap_escape_uri</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr>"/?"</expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>args</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>ifile</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><call><name>ap_escape_uri</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>uri</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr>"/"</expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></else></if>
<expr_stmt><expr><call><name>apr_table_setn</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>headers_out</name></name></expr></argument>, <argument><expr>"Location"</expr></argument>,
<argument><expr><call><name>ap_construct_url</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>ifile</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>HTTP_MOVED_PERMANENTLY</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!<call><name>strcmp</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>handler</name></name></expr></argument>, <argument><expr><name>REWRITE_REDIRECT_HANDLER_NAME</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<if>if <condition>(<expr>!<call><name>strcmp</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>content_type</name></name></expr></argument>, <argument><expr><name>DIR_MAGIC_TYPE</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>r</name>-&gt;<name>content_type</name></name> = <name>NULL</name></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>d</name>-&gt;<name>checkhandler</name></name> == <name>MODDIR_ON</name> &amp;&amp; <call><name>strcmp</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>handler</name></name></expr></argument>, <argument><expr><name>DIR_MAGIC_TYPE</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<if>if <condition>(<expr>!<call><name>strcmp</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>content_type</name></name></expr></argument>, <argument><expr><name>DIR_MAGIC_TYPE</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>r</name>-&gt;<name>content_type</name></name> = <name>NULL</name></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>d</name>-&gt;<name>index_names</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>names_ptr</name> = (<name>char</name> **)<name><name>d</name>-&gt;<name>index_names</name>-&gt;<name>elts</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>num_names</name> = <name><name>d</name>-&gt;<name>index_names</name>-&gt;<name>nelts</name></name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name><name>dummy_ptr</name><index>[<expr>0</expr>]</index></name> = <name>AP_DEFAULT_INDEX</name></expr>;</expr_stmt>
<expr_stmt><expr><name>names_ptr</name> = <name>dummy_ptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>num_names</name> = 1</expr>;</expr_stmt>
}</block></else></if>
<for>for (<init>;</init> <condition><expr><name>num_names</name></expr>;</condition> <incr><expr>++<name>names_ptr</name></expr>, <expr>--<name>num_names</name></expr></incr>) <block>{
<decl_stmt><decl><type><name>char</name> *</type><name>name_ptr</name> <init>= <expr>*<name>names_ptr</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>request_rec</name> *</type><name>rr</name></decl>;</decl_stmt>
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>args</name></name> != <name>NULL</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>name_ptr</name> = <call><name>apr_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name>name_ptr</name></expr></argument>, <argument><expr>"?"</expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>args</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><name>rr</name> = <call><name>ap_sub_req_lookup_uri</name><argument_list>(<argument><expr><name>name_ptr</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>output_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name><name>rr</name>-&gt;<name>status</name></name> == <name>HTTP_OK</name>
&amp;&amp; ( (<name><name>rr</name>-&gt;<name>handler</name></name> &amp;&amp; !<call><name>strcmp</name><argument_list>(<argument><expr><name><name>rr</name>-&gt;<name>handler</name></name></expr></argument>, <argument><expr>"proxy-server"</expr></argument>)</argument_list></call>)
|| <name><name>rr</name>-&gt;<name>finfo</name>.<name>filetype</name></name> == <name>APR_REG</name>)</expr>)</condition><then> <block>{
<if>if <condition>(<expr><call><name>ap_is_HTTP_REDIRECT</name><argument_list>(<argument><expr><name><name>d</name>-&gt;<name>redirect_index</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_table_setn</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>headers_out</name></name></expr></argument>, <argument><expr>"Location"</expr></argument>, <argument><expr><call><name>ap_construct_url</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>rr</name>-&gt;<name>uri</name></name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name><name>d</name>-&gt;<name>redirect_index</name></name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>ap_internal_fast_redirect</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>OK</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><call><name>ap_is_HTTP_REDIRECT</name><argument_list>(<argument><expr><name><name>rr</name>-&gt;<name>status</name></name></expr></argument>)</argument_list></call>
|| (<name><name>rr</name>-&gt;<name>status</name></name> == <name>HTTP_NOT_ACCEPTABLE</name> &amp;&amp; <name>num_names</name> == 1)
|| (<name><name>rr</name>-&gt;<name>status</name></name> == <name>HTTP_UNAUTHORIZED</name> &amp;&amp; <name>num_names</name> == 1)</expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>apr_pool_join</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>rr</name>-&gt;<name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>error_notfound</name> = <name><name>rr</name>-&gt;<name>status</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>notes</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>notes</name></name></expr></argument>, <argument><expr><name><name>rr</name>-&gt;<name>notes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>headers_out</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>headers_out</name></name></expr></argument>,
<argument><expr><name><name>rr</name>-&gt;<name>headers_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name>-&gt;<name>err_headers_out</name></name> = <call><name>apr_table_overlay</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>err_headers_out</name></name></expr></argument>,
<argument><expr><name><name>rr</name>-&gt;<name>err_headers_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>error_notfound</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr><name><name>rr</name>-&gt;<name>status</name></name> &amp;&amp; <name><name>rr</name>-&gt;<name>status</name></name> != <name>HTTP_NOT_FOUND</name>
&amp;&amp; <name><name>rr</name>-&gt;<name>status</name></name> != <name>HTTP_OK</name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>error_notfound</name> = <name><name>rr</name>-&gt;<name>status</name></name></expr>;</expr_stmt>
}</block></then></if>
<expr_stmt><expr><call><name>ap_destroy_sub_req</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></for>
<if>if <condition>(<expr><name>error_notfound</name></expr>)</condition><then> <block>{
<return>return <expr><name>error_notfound</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>apr_table_setn</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>notes</name></name></expr></argument>, <argument><expr>"dir-index-names"</expr></argument>,
<argument><expr><name><name>d</name>-&gt;<name>index_names</name></name> ?
<call><name>apr_array_pstrcat</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>d</name>-&gt;<name>index_names</name></name></expr></argument>, <argument><expr>','</expr></argument>)</argument_list></call> :
<name>AP_DEFAULT_INDEX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>dir_fixups</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>)</parameter_list> <block>{
<if>if <condition>(<expr><name><name>r</name>-&gt;<name>finfo</name>.<name>filetype</name></name> == <name>APR_DIR</name></expr>)</condition><then> <block>{
<return>return <expr><call><name>fixup_dir</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then> <else>else <if>if <condition>(<expr>(<name><name>r</name>-&gt;<name>finfo</name>.<name>filetype</name></name> == <name>APR_NOFILE</name>) &amp;&amp; (<name><name>r</name>-&gt;<name>handler</name></name> == <name>NULL</name>)</expr>)</condition><then> <block>{
<return>return <expr><call><name>fixup_dflt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></then></if></else></if>
<return>return <expr><name>DECLINED</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>ap_hook_fixups</name><argument_list>(<argument><expr><name>dir_fixups</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>NULL</name></expr></argument>,<argument><expr><name>APR_HOOK_LAST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call> = <block>{
<expr><name>STANDARD20_MODULE_STUFF</name></expr>,
<expr><name>create_dir_config</name></expr>,
<expr><name>merge_dir_configs</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>dir_cmds</name></expr>,
<expr><name>register_hooks</name></expr>
}</block></expr>;</expr_stmt>
</unit>
