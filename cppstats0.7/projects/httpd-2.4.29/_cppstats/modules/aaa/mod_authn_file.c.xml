<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="modules/aaa/mod_authn_file.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_md5.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_provider.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_auth.h"</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>char</name> *</type><name>pwfile</name></decl>;</decl_stmt>
}</block></struct></type> <name>authn_file_config_rec</name>;</typedef>
<expr_stmt><expr>static <call><name>APR_OPTIONAL_FN_TYPE</name><argument_list>(<argument><expr><name>ap_authn_cache_store</name></expr></argument>)</argument_list></call> *<name>authn_cache_store</name> = <name>NULL</name></expr>;</expr_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTHN_CACHE_STORE</name><parameter_list>(<param><type><name>r</name></type></param>,<param><type><name>user</name></type></param>,<param><type><name>realm</name></type></param>,<param><type><name>data</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (authn_cache_store != NULL) authn_cache_store((r), "file", (user), (realm), (data))</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_authn_file_dir_config</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>char</name> *</type><name>d</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_file_config_rec</name> *</type><name>conf</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>conf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>pwfile</name></name> = <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>conf</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>authn_file_cmds</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>AP_INIT_TAKE1</name><argument_list>(<argument><expr>"AuthUserFile"</expr></argument>, <argument><expr><name>ap_set_file_slot</name></expr></argument>,
<argument><expr>(<name>void</name> *)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>authn_file_config_rec</name></expr></argument>, <argument><expr><name>pwfile</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>OR_AUTHCFG</name></expr></argument>, <argument><expr>"text file containing user IDs and passwords"</expr></argument>)</argument_list></call></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>authn_file_module</name></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>authn_status</name></type> <name>check_password</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>user</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>password</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_file_config_rec</name> *</type><name>conf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>authn_file_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ap_configfile_t</name> *</type><name>f</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>l</name><index>[<expr><name>MAX_STRING_LEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>file_password</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>conf</name>-&gt;<name>pwfile</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01619</expr></argument>)</argument_list></call>
"AuthUserFile not specified in the configuration"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTH_GENERAL_ERROR</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>ap_pcfg_openfile</name><argument_list>(<argument><expr>&amp;<name>f</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>conf</name>-&gt;<name>pwfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01620</expr></argument>)</argument_list></call>
"Could not open password file: %s"</expr></argument>, <argument><expr><name><name>conf</name>-&gt;<name>pwfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTH_GENERAL_ERROR</name></expr>;</return>
}</block></then></if>
<while>while <condition>(<expr>!(<call><name>ap_cfg_getline</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name>MAX_STRING_LEN</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call>)</expr>)</condition> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rpw</name></decl>, *<decl><type ref="prev"/><name>w</name></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name><name>l</name><index>[<expr>0</expr>]</index></name> == '#') || (!<name><name>l</name><index>[<expr>0</expr>]</index></name>)</expr>)</condition><then> <block>{
<continue>continue;</continue>
}</block></then></if>
<expr_stmt><expr><name>rpw</name> = <name>l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>w</name> = <call><name>ap_getword</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>rpw</name></expr></argument>, <argument><expr>':'</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<call><name>strcmp</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>file_password</name> = <call><name>ap_getword</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>rpw</name></expr></argument>, <argument><expr>':'</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
}</block></then></if>
}</block></while>
<expr_stmt><expr><call><name>ap_cfg_closefile</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>file_password</name></expr>)</condition><then> <block>{
<return>return <expr><name>AUTH_USER_NOT_FOUND</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><call><name>AUTHN_CACHE_STORE</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>file_password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> = <call><name>apr_password_validate</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><name>file_password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
<return>return <expr><name>AUTH_DENIED</name></expr>;</return>
}</block></then></if>
<return>return <expr><name>AUTH_GRANTED</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <name>authn_status</name></type> <name>get_realm_hash</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>user</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>realm</name></decl></param>, <param><decl><type><name>char</name> **</type><name>rethash</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_file_config_rec</name> *</type><name>conf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>authn_file_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ap_configfile_t</name> *</type><name>f</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>l</name><index>[<expr><name>MAX_STRING_LEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>apr_status_t</name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> *</type><name>file_hash</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>conf</name>-&gt;<name>pwfile</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr>0</expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01621</expr></argument>)</argument_list></call>
"AuthUserFile not specified in the configuration"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTH_GENERAL_ERROR</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr><name>status</name> = <call><name>ap_pcfg_openfile</name><argument_list>(<argument><expr>&amp;<name>f</name></expr></argument>, <argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><name><name>conf</name>-&gt;<name>pwfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>status</name> != <name>APR_SUCCESS</name></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_ERR</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01622</expr></argument>)</argument_list></call>
"Could not open password file: %s"</expr></argument>, <argument><expr><name><name>conf</name>-&gt;<name>pwfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTH_GENERAL_ERROR</name></expr>;</return>
}</block></then></if>
<while>while <condition>(<expr>!(<call><name>ap_cfg_getline</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name>MAX_STRING_LEN</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call>)</expr>)</condition> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>rpw</name></decl>, *<decl><type ref="prev"/><name>w</name></decl>, *<decl><type ref="prev"/><name>x</name></decl>;</decl_stmt>
<if>if <condition>(<expr>(<name><name>l</name><index>[<expr>0</expr>]</index></name> == '#') || (!<name><name>l</name><index>[<expr>0</expr>]</index></name>)</expr>)</condition><then> <block>{
<continue>continue;</continue>
}</block></then></if>
<expr_stmt><expr><name>rpw</name> = <name>l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>w</name> = <call><name>ap_getword</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>rpw</name></expr></argument>, <argument><expr>':'</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>x</name> = <call><name>ap_getword</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>rpw</name></expr></argument>, <argument><expr>':'</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr><name>x</name> &amp;&amp; <name>w</name> &amp;&amp; !<call><name>strcmp</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> &amp;&amp; !<call><name>strcmp</name><argument_list>(<argument><expr><name>realm</name></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>file_hash</name> = <call><name>ap_getword</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr>&amp;<name>rpw</name></expr></argument>, <argument><expr>':'</expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
}</block></then></if>
}</block></while>
<expr_stmt><expr><call><name>ap_cfg_closefile</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if>if <condition>(<expr>!<name>file_hash</name></expr>)</condition><then> <block>{
<return>return <expr><name>AUTH_USER_NOT_FOUND</name></expr>;</return>
}</block></then></if>
<expr_stmt><expr>*<name>rethash</name> = <name>file_hash</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AUTHN_CACHE_STORE</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>realm</name></expr></argument>, <argument><expr><name>file_hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AUTH_USER_FOUND</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>authn_provider</name></type> <name>authn_file_provider</name> <init>= <expr><block>{
<expr>&amp;<name>check_password</name></expr>,
<expr>&amp;<name>get_realm_hash</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>void</name></type> <name>opt_retr</name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><name>authn_cache_store</name> = <call><name>APR_RETRIEVE_OPTIONAL_FN</name><argument_list>(<argument><expr><name>ap_authn_cache_store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>ap_register_auth_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>AUTHN_PROVIDER_GROUP</name></expr></argument>, <argument><expr>"file"</expr></argument>,
<argument><expr><name>AUTHN_PROVIDER_VERSION</name></expr></argument>,
<argument><expr>&amp;<name>authn_file_provider</name></expr></argument>, <argument><expr><name>AP_AUTH_INTERNAL_PER_CONF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ap_hook_optional_fn_retrieve</name><argument_list>(<argument><expr><name>opt_retr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>APR_HOOK_MIDDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>authn_file</name></expr></argument>)</argument_list></call> = <block>{
<expr><name>STANDARD20_MODULE_STUFF</name></expr>,
<expr><name>create_authn_file_dir_config</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>authn_file_cmds</name></expr>,
<expr><name>register_hooks</name></expr>
}</block></expr>;</expr_stmt>
</unit>
