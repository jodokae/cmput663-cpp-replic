<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="modules/aaa/mod_authn_anon.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_strings.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APR_WANT_STRFUNC</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_want.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_provider.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_request.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mod_auth.h"</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <name>anon_auth_user</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> *</type><name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type>struct <name>anon_auth_user</name> *</type><name>next</name></decl>;</decl_stmt>
}</block></struct></type> <name>anon_auth_user</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>anon_auth_user</name> *</type><name>users</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nouserid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>logemail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>verifyemail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mustemail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>anyuserid</name></decl>;</decl_stmt>
}</block></struct></type> <name>authn_anon_config_rec</name>;</typedef>
<function><type><specifier>static</specifier> <name>void</name> *</type><name>create_authn_anon_dir_config</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>, <param><decl><type><name>char</name> *</type><name>d</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_anon_config_rec</name> *</type><name>conf</name> <init>= <expr><call><name>apr_palloc</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name>conf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>users</name></name> = <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>nouserid</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>anyuserid</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>logemail</name></name> = 1</expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>verifyemail</name></name> = 0</expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>mustemail</name></name> = 1</expr>;</expr_stmt>
<return>return <expr><name>conf</name></expr>;</return>
}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> *</type><name>anon_set_string_slots</name><parameter_list>(<param><decl><type><name>cmd_parms</name> *</type><name>cmd</name></decl></param>,
<param><decl><type><name>void</name> *</type><name>my_config</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>arg</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_anon_config_rec</name> *</type><name>conf</name> <init>= <expr><name>my_config</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>anon_auth_user</name> *</type><name>first</name></decl>;</decl_stmt>
<if>if <condition>(<expr>!*<name>arg</name></expr>)</condition><then> <block>{
<return>return <expr>"Anonymous string cannot be empty, use Anonymous_NoUserId"</expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!<name><name>conf</name>-&gt;<name>anyuserid</name></name></expr>)</condition><then> <block>{
<if>if <condition>(<expr>!<call><name>strcmp</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr>"*"</expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name><name>conf</name>-&gt;<name>anyuserid</name></name> = 1</expr>;</expr_stmt>
}</block></then> <else>else <block>{
<expr_stmt><expr><name>first</name> = <name><name>conf</name>-&gt;<name>users</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>users</name></name> = <call><name>apr_palloc</name><argument_list>(<argument><expr><name><name>cmd</name>-&gt;<name>pool</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>*<name><name>conf</name>-&gt;<name>users</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>users</name>-&gt;<name>user</name></name> = <name>arg</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>conf</name>-&gt;<name>users</name>-&gt;<name>next</name></name> = <name>first</name></expr>;</expr_stmt>
}</block></else></if>
}</block></then></if>
<return>return <expr><name>NULL</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>command_rec</name></type> <name><name>authn_anon_cmds</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>AP_INIT_ITERATE</name><argument_list>(<argument><expr>"Anonymous"</expr></argument>, <argument><expr><name>anon_set_string_slots</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>OR_AUTHCFG</name></expr></argument>,
<argument><expr>"a space-separated list of user IDs"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"Anonymous_MustGiveEmail"</expr></argument>, <argument><expr><name>ap_set_flag_slot</name></expr></argument>,
<argument><expr>(<name>void</name> *)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>authn_anon_config_rec</name></expr></argument>, <argument><expr><name>mustemail</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>OR_AUTHCFG</name></expr></argument>, <argument><expr>"Limited to 'on' or 'off'"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"Anonymous_NoUserId"</expr></argument>, <argument><expr><name>ap_set_flag_slot</name></expr></argument>,
<argument><expr>(<name>void</name> *)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>authn_anon_config_rec</name></expr></argument>, <argument><expr><name>nouserid</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>OR_AUTHCFG</name></expr></argument>, <argument><expr>"Limited to 'on' or 'off'"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"Anonymous_VerifyEmail"</expr></argument>, <argument><expr><name>ap_set_flag_slot</name></expr></argument>,
<argument><expr>(<name>void</name> *)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>authn_anon_config_rec</name></expr></argument>, <argument><expr><name>verifyemail</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>OR_AUTHCFG</name></expr></argument>, <argument><expr>"Limited to 'on' or 'off'"</expr></argument>)</argument_list></call></expr>,
<expr><call><name>AP_INIT_FLAG</name><argument_list>(<argument><expr>"Anonymous_LogEmail"</expr></argument>, <argument><expr><name>ap_set_flag_slot</name></expr></argument>,
<argument><expr>(<name>void</name> *)<call><name>APR_OFFSETOF</name><argument_list>(<argument><expr><name>authn_anon_config_rec</name></expr></argument>, <argument><expr><name>logemail</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>OR_AUTHCFG</name></expr></argument>, <argument><expr>"Limited to 'on' or 'off'"</expr></argument>)</argument_list></call></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module</name> <name>AP_MODULE_DECLARE_DATA</name></type> <name>authn_anon_module</name></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>authn_status</name></type> <name>check_anonymous</name><parameter_list>(<param><decl><type><name>request_rec</name> *</type><name>r</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>user</name></decl></param>,
<param><decl><type><specifier>const</specifier> <name>char</name> *</type><name>sent_pw</name></decl></param>)</parameter_list> <block>{
<decl_stmt><decl><type><name>authn_anon_config_rec</name> *</type><name>conf</name> <init>= <expr><call><name>ap_get_module_config</name><argument_list>(<argument><expr><name><name>r</name>-&gt;<name>per_dir_config</name></name></expr></argument>,
<argument><expr>&amp;<name>authn_anon_module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>authn_status</name></type> <name>res</name> <init>= <expr><name>AUTH_USER_NOT_FOUND</name></expr></init></decl>;</decl_stmt>
<if>if <condition>(<expr>!<name><name>conf</name>-&gt;<name>users</name></name> &amp;&amp; !<name><name>conf</name>-&gt;<name>anyuserid</name></name></expr>)</condition><then> <block>{
<return>return <expr><name>AUTH_USER_NOT_FOUND</name></expr>;</return>
}</block></then></if>
<if>if <condition>(<expr>!*<name>user</name></expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>conf</name>-&gt;<name>nouserid</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>res</name> = <name>AUTH_USER_FOUND</name></expr>;</expr_stmt>
}</block></then></if>
}</block></then> <else>else <if>if <condition>(<expr><name><name>conf</name>-&gt;<name>anyuserid</name></name></expr>)</condition><then> <block>{
<expr_stmt><expr><name>res</name> = <name>AUTH_USER_FOUND</name></expr>;</expr_stmt>
}</block></then> <else>else <block>{
<decl_stmt><decl><type><name>anon_auth_user</name> *</type><name>p</name> <init>= <expr><name><name>conf</name>-&gt;<name>users</name></name></expr></init></decl>;</decl_stmt>
<while>while <condition>(<expr><name>p</name></expr>)</condition> <block>{
<if>if <condition>(<expr>!<call><name>strcasecmp</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><name><name>p</name>-&gt;<name>user</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><name>res</name> = <name>AUTH_USER_FOUND</name></expr>;</expr_stmt>
<break>break;</break>
}</block></then></if>
<expr_stmt><expr><name>p</name> = <name><name>p</name>-&gt;<name>next</name></name></expr>;</expr_stmt>
}</block></while>
}</block></else></if></else></if>
<if>if <condition>( <expr>(<name>res</name> == <name>AUTH_USER_FOUND</name>)
&amp;&amp; (!<name><name>conf</name>-&gt;<name>mustemail</name></name> || *<name>sent_pw</name>)
&amp;&amp; ( !<name><name>conf</name>-&gt;<name>verifyemail</name></name>
|| (<call><name>ap_strchr_c</name><argument_list>(<argument><expr><name>sent_pw</name></expr></argument>, <argument><expr>'@'</expr></argument>)</argument_list></call> &amp;&amp; <call><name>ap_strchr_c</name><argument_list>(<argument><expr><name>sent_pw</name></expr></argument>, <argument><expr>'.'</expr></argument>)</argument_list></call>))</expr>)</condition><then> <block>{
<if>if <condition>(<expr><name><name>conf</name>-&gt;<name>logemail</name></name> &amp;&amp; <call><name>ap_is_initial_req</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
<expr_stmt><expr><call><name>ap_log_rerror</name><argument_list>(<argument><expr><name>APLOG_MARK</name></expr></argument>, <argument><expr><name>APLOG_INFO</name></expr></argument>, <argument><expr><name>APR_SUCCESS</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>APLOGNO</name><argument_list>(<argument><expr>01672</expr></argument>)</argument_list></call>
"Anonymous: Passwd &lt;%s&gt; Accepted"</expr></argument>,
<argument><expr><name>sent_pw</name> ? <name>sent_pw</name> : "\'none\'"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></then></if>
<return>return <expr><name>AUTH_GRANTED</name></expr>;</return>
}</block></then></if>
<return>return <expr>(<name>res</name> == <name>AUTH_USER_NOT_FOUND</name> ? <name>res</name> : <name>AUTH_DENIED</name>)</expr>;</return>
}</block></function>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>authn_provider</name></type> <name>authn_anon_provider</name> <init>= <expr><block>{
<expr>&amp;<name>check_anonymous</name></expr>,
<expr><name>NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<function><type><specifier>static</specifier> <name>void</name></type> <name>register_hooks</name><parameter_list>(<param><decl><type><name>apr_pool_t</name> *</type><name>p</name></decl></param>)</parameter_list> <block>{
<expr_stmt><expr><call><name>ap_register_auth_provider</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>AUTHN_PROVIDER_GROUP</name></expr></argument>, <argument><expr>"anon"</expr></argument>,
<argument><expr><name>AUTHN_PROVIDER_VERSION</name></expr></argument>,
<argument><expr>&amp;<name>authn_anon_provider</name></expr></argument>, <argument><expr><name>AP_AUTH_INTERNAL_PER_CONF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<expr_stmt><expr><call><name>AP_DECLARE_MODULE</name><argument_list>(<argument><expr><name>authn_anon</name></expr></argument>)</argument_list></call> = <block>{
<expr><name>STANDARD20_MODULE_STUFF</name></expr>,
<expr><name>create_authn_anon_dir_config</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>authn_anon_cmds</name></expr>,
<expr><name>register_hooks</name></expr>
}</block></expr>;</expr_stmt>
</unit>
