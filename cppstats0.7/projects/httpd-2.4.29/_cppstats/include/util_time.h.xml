<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="include/util_time.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>APACHE_UTIL_TIME_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APACHE_UTIL_TIME_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_time.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpd.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern "C" <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_TIME_RECENT_THRESHOLD</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_CTIME_OPTION_NONE</name></cpp:macro> <cpp:value>0x0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_CTIME_OPTION_USEC</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_CTIME_OPTION_COMPACT</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>
<macro><name>AP_DECLARE</name><argument_list>(<argument>apr_status_t</argument>)</argument_list></macro> <macro><name>ap_explode_recent_localtime</name><argument_list>(<argument>apr_time_exp_t *tm</argument>,
<argument>apr_time_t t</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<macro><name>AP_DECLARE</name><argument_list>(<argument>apr_status_t</argument>)</argument_list></macro> <macro><name>ap_explode_recent_gmt</name><argument_list>(<argument>apr_time_exp_t *tm</argument>,
<argument>apr_time_t t</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<macro><name>AP_DECLARE</name><argument_list>(<argument>apr_status_t</argument>)</argument_list></macro> <macro><name>ap_recent_ctime</name><argument_list>(<argument>char *date_str</argument>, <argument>apr_time_t t</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<macro><name>AP_DECLARE</name><argument_list>(<argument>apr_status_t</argument>)</argument_list></macro> <macro><name>ap_recent_ctime_ex</name><argument_list>(<argument>char *date_str</argument>, <argument>apr_time_t t</argument>,
<argument>int option</argument>, <argument>int *len</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<macro><name>AP_DECLARE</name><argument_list>(<argument>apr_status_t</argument>)</argument_list></macro> <macro><name>ap_recent_rfc822_date</name><argument_list>(<argument>char *date_str</argument>, <argument>apr_time_t t</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
