<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="include/ap_hooks.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr>!<call><name>defined</name><argument_list>(<argument><expr><name>AP_HOOKS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_HOOKS_H</name></cpp:macro></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>AP_HOOK_PROBES_ENABLED</name></expr></argument>)</argument_list></call> &amp;&amp; !<call><name>defined</name><argument_list>(<argument><expr><name>APR_HOOK_PROBES_ENABLED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>APR_HOOK_PROBES_ENABLED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>APR_HOOK_PROBES_ENABLED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ap_hook_probes.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_hooks.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"apr_optional_hooks.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DOXYGEN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_DECLARE_STATIC</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_DECLARE_EXPORT</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_DECLARE_HOOK</name><parameter_list>(<param><type><name>ret</name></type></param>,<param><type><name>name</name></type></param>,<param><type><name>args</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_DECLARE_EXTERNAL_HOOK(ap,AP,ret,name,args)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_IMPLEMENT_HOOK_BASE</name><parameter_list>(<param><type><name>name</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_IMPLEMENT_EXTERNAL_HOOK_BASE(ap,AP,name)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_IMPLEMENT_HOOK_VOID</name><parameter_list>(<param><type><name>name</name></type></param>,<param><type><name>args_decl</name></type></param>,<param><type><name>args_use</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_IMPLEMENT_EXTERNAL_HOOK_VOID(ap,AP,name,args_decl,args_use)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_IMPLEMENT_HOOK_RUN_ALL</name><parameter_list>(<param><type><name>ret</name></type></param>,<param><type><name>name</name></type></param>,<param><type><name>args_decl</name></type></param>,<param><type><name>args_use</name></type></param>,<param><type><name>ok</name></type></param>,<param><type><name>decline</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_IMPLEMENT_EXTERNAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, args_use,ok,decline)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_IMPLEMENT_HOOK_RUN_FIRST</name><parameter_list>(<param><type><name>ret</name></type></param>,<param><type><name>name</name></type></param>,<param><type><name>args_decl</name></type></param>,<param><type><name>args_use</name></type></param>,<param><type><name>decline</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST(ap,AP,ret,name,args_decl, args_use,decline)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL</name><parameter_list>(<param><type><name>ret</name></type></param>,<param><type><name>name</name></type></param>,<param><type><name>args_decl</name></type></param>,<param><type><name>args_use</name></type></param>,<param><type><name>ok</name></type></param>, <param><type><name>decline</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap,AP,ret,name,args_decl, args_use,ok,decline)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AP_OPTIONAL_HOOK</name><parameter_list>(<param><type><name>name</name></type></param>,<param><type><name>fn</name></type></param>,<param><type><name>pre</name></type></param>,<param><type><name>succ</name></type></param>,<param><type><name>order</name></type></param>)</parameter_list></cpp:macro> <cpp:value>APR_OPTIONAL_HOOK(ap,name,fn,pre,succ,order)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
